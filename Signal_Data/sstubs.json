[
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "687192f071abd39ffcf342fa74dad6c10b8930b9",
    "fixCommitParentSHA1": "2e82ee0aaf038087f6bffd26a16bfb9afa5f58d4",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java b/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java\nindex 8b574a8..6141dfe 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java\n@@ -199,7 +199,7 @@\n   public static Intent buildShareIntent(@NonNull Context context,\n                                         @NonNull List\u003cMedia\u003e media,\n                                         @NonNull List\u003cRecipientId\u003e recipientIds,\n-                                        @NonNull CharSequence body,\n+                                        @Nullable CharSequence body,\n                                         @NonNull TransportOption transportOption)\n   {\n     Intent intent \u003d new Intent(context, MediaSendActivity.class);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 202,
    "bugNodeStartChar": 9454,
    "bugNodeLength": 8,
    "fixLineNum": 202,
    "fixNodeStartChar": 9454,
    "fixNodeLength": 9,
    "sourceBeforeFix": "@NonNull",
    "sourceAfterFix": "@Nullable"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "687192f071abd39ffcf342fa74dad6c10b8930b9",
    "fixCommitParentSHA1": "2e82ee0aaf038087f6bffd26a16bfb9afa5f58d4",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/sharing/MultiShareSender.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/sharing/MultiShareSender.java b/app/src/main/java/org/thoughtcrime/securesms/sharing/MultiShareSender.java\nindex 9488eff..ea4ffd0 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/sharing/MultiShareSender.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/sharing/MultiShareSender.java\n@@ -72,7 +72,9 @@\n       boolean         forceSms       \u003d recipient.isForceSmsSelection() \u0026\u0026 transport.isSms();\n       int             subscriptionId \u003d transport.getSimSubscriptionId().or(-1);\n       long            expiresIn      \u003d recipient.getExpireMessages() * 1000L;\n-      boolean         needsSplit     \u003d !transport.isSms() \u0026\u0026 message.length() \u003e transport.calculateCharacters(message).maxPrimaryMessageSize;\n+      boolean         needsSplit     \u003d !transport.isSms() \u0026\u0026\n+                                       message !\u003d null    \u0026\u0026\n+                                       message.length() \u003e transport.calculateCharacters(message).maxPrimaryMessageSize;\n       boolean         isMediaMessage \u003d !multiShareArgs.getMedia().isEmpty()                                              ||\n                                        (multiShareArgs.getDataUri() !\u003d null \u0026\u0026 multiShareArgs.getDataUri() !\u003d Uri.EMPTY) ||\n                                        multiShareArgs.getStickerLocator() !\u003d null                                        ||\n@@ -132,7 +134,7 @@\n                                        int subscriptionId)\n   {\n     String body \u003d multiShareArgs.getDraftText();\n-    if (transportOption.isType(TransportOption.Type.TEXTSECURE) \u0026\u0026 !forceSms) {\n+    if (transportOption.isType(TransportOption.Type.TEXTSECURE) \u0026\u0026 !forceSms \u0026\u0026 body !\u003d null) {\n       MessageUtil.SplitResult splitMessage \u003d MessageUtil.getSplitMessage(context, body, transportOption.calculateCharacters(body).maxPrimaryMessageSize);\n       body \u003d splitMessage.getBody();\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 135,
    "bugNodeStartChar": 6876,
    "bugNodeLength": 68,
    "fixLineNum": 135,
    "fixNodeStartChar": 6876,
    "fixNodeLength": 84,
    "sourceBeforeFix": "transportOption.isType(TransportOption.Type.TEXTSECURE) \u0026\u0026 !forceSms",
    "sourceAfterFix": "transportOption.isType(TransportOption.Type.TEXTSECURE) \u0026\u0026 !forceSms \u0026\u0026 body !\u003d null"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "95978f16e92aa21f52072bf25c8fe2a48882ffb6",
    "fixCommitParentSHA1": "d055bba4526d4fe308b65953c2089794fecc75d8",
    "bugFilePath": "paging/lib/src/main/java/org/signal/paging/FixedSizePagingController.java",
    "fixPatch": "diff --git a/paging/lib/src/main/java/org/signal/paging/FixedSizePagingController.java b/paging/lib/src/main/java/org/signal/paging/FixedSizePagingController.java\nindex 4587997..e907a99 100644\n--- a/paging/lib/src/main/java/org/signal/paging/FixedSizePagingController.java\n+++ b/paging/lib/src/main/java/org/signal/paging/FixedSizePagingController.java\n@@ -22,7 +22,7 @@\n \n   private static final String TAG \u003d FixedSizePagingController.class.getSimpleName();\n \n-  private static final Executor FETCH_EXECUTOR \u003d SignalExecutors.newFixedLifoThreadExecutor(\"signal-FixedSizePagingController\", 1, 1);\n+  private static final Executor FETCH_EXECUTOR \u003d SignalExecutors.newCachedSingleThreadExecutor(\"signal-FixedSizePagingController\");\n   private static final boolean  DEBUG          \u003d false;\n \n   private final PagedDataSource\u003cE\u003e       dataSource;\n@@ -49,7 +49,7 @@\n   /**\n    * We assume this method is always called on the same thread, so we can read our\n    * {@code loadState} and construct the parameters of a fetch request. That fetch request can\n-   * then be performed on separate single-thread LIFO executor.\n+   * then be performed on separate single-thread executor.\n    */\n   @Override\n   public void onDataNeededAroundIndex(int aroundIndex) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 25,
    "bugNodeStartChar": 887,
    "bugNodeLength": 84,
    "fixLineNum": 25,
    "fixNodeStartChar": 887,
    "fixNodeLength": 81,
    "sourceBeforeFix": "SignalExecutors.newFixedLifoThreadExecutor(\"signal-FixedSizePagingController\",1,1)",
    "sourceAfterFix": "SignalExecutors.newCachedSingleThreadExecutor(\"signal-FixedSizePagingController\")"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "c5392b8844a115d6b27e5ecbd9409f11f5ab5965",
    "fixCommitParentSHA1": "e460973957a5f419b0ebe097bdc57b567aacfd44",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\nindex 6985302..dde69ba 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\n@@ -1068,9 +1068,9 @@\n \n   private void setGutterSizes(@NonNull MessageRecord current, boolean isGroupThread) {\n     if (isGroupThread \u0026\u0026 current.isOutgoing()) {\n-      ViewUtil.setLeftMargin(this, readDimen(R.dimen.conversation_group_left_gutter));\n+      ViewUtil.setPaddingStart(this, readDimen(R.dimen.conversation_group_left_gutter));\n     } else if (current.isOutgoing()) {\n-      ViewUtil.setLeftMargin(this, readDimen(R.dimen.conversation_individual_left_gutter));\n+      ViewUtil.setPaddingStart(this, readDimen(R.dimen.conversation_individual_left_gutter));\n     }\n   }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 1071,
    "bugNodeStartChar": 51577,
    "bugNodeLength": 79,
    "fixLineNum": 1071,
    "fixNodeStartChar": 51577,
    "fixNodeLength": 81,
    "sourceBeforeFix": "ViewUtil.setLeftMargin(this,readDimen(R.dimen.conversation_group_left_gutter))",
    "sourceAfterFix": "ViewUtil.setPaddingStart(this,readDimen(R.dimen.conversation_group_left_gutter))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c5392b8844a115d6b27e5ecbd9409f11f5ab5965",
    "fixCommitParentSHA1": "e460973957a5f419b0ebe097bdc57b567aacfd44",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\nindex 6985302..dde69ba 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\n@@ -1068,9 +1068,9 @@\n \n   private void setGutterSizes(@NonNull MessageRecord current, boolean isGroupThread) {\n     if (isGroupThread \u0026\u0026 current.isOutgoing()) {\n-      ViewUtil.setLeftMargin(this, readDimen(R.dimen.conversation_group_left_gutter));\n+      ViewUtil.setPaddingStart(this, readDimen(R.dimen.conversation_group_left_gutter));\n     } else if (current.isOutgoing()) {\n-      ViewUtil.setLeftMargin(this, readDimen(R.dimen.conversation_individual_left_gutter));\n+      ViewUtil.setPaddingStart(this, readDimen(R.dimen.conversation_individual_left_gutter));\n     }\n   }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 1071,
    "bugNodeStartChar": 51577,
    "bugNodeLength": 79,
    "fixLineNum": 1071,
    "fixNodeStartChar": 51577,
    "fixNodeLength": 81,
    "sourceBeforeFix": "ViewUtil.setLeftMargin(this,readDimen(R.dimen.conversation_group_left_gutter))",
    "sourceAfterFix": "ViewUtil.setPaddingStart(this,readDimen(R.dimen.conversation_group_left_gutter))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "c5392b8844a115d6b27e5ecbd9409f11f5ab5965",
    "fixCommitParentSHA1": "e460973957a5f419b0ebe097bdc57b567aacfd44",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\nindex 6985302..dde69ba 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\n@@ -1068,9 +1068,9 @@\n \n   private void setGutterSizes(@NonNull MessageRecord current, boolean isGroupThread) {\n     if (isGroupThread \u0026\u0026 current.isOutgoing()) {\n-      ViewUtil.setLeftMargin(this, readDimen(R.dimen.conversation_group_left_gutter));\n+      ViewUtil.setPaddingStart(this, readDimen(R.dimen.conversation_group_left_gutter));\n     } else if (current.isOutgoing()) {\n-      ViewUtil.setLeftMargin(this, readDimen(R.dimen.conversation_individual_left_gutter));\n+      ViewUtil.setPaddingStart(this, readDimen(R.dimen.conversation_individual_left_gutter));\n     }\n   }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 1073,
    "bugNodeStartChar": 51703,
    "bugNodeLength": 84,
    "fixLineNum": 1073,
    "fixNodeStartChar": 51703,
    "fixNodeLength": 86,
    "sourceBeforeFix": "ViewUtil.setLeftMargin(this,readDimen(R.dimen.conversation_individual_left_gutter))",
    "sourceAfterFix": "ViewUtil.setPaddingStart(this,readDimen(R.dimen.conversation_individual_left_gutter))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c5392b8844a115d6b27e5ecbd9409f11f5ab5965",
    "fixCommitParentSHA1": "e460973957a5f419b0ebe097bdc57b567aacfd44",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\nindex 6985302..dde69ba 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationItem.java\n@@ -1068,9 +1068,9 @@\n \n   private void setGutterSizes(@NonNull MessageRecord current, boolean isGroupThread) {\n     if (isGroupThread \u0026\u0026 current.isOutgoing()) {\n-      ViewUtil.setLeftMargin(this, readDimen(R.dimen.conversation_group_left_gutter));\n+      ViewUtil.setPaddingStart(this, readDimen(R.dimen.conversation_group_left_gutter));\n     } else if (current.isOutgoing()) {\n-      ViewUtil.setLeftMargin(this, readDimen(R.dimen.conversation_individual_left_gutter));\n+      ViewUtil.setPaddingStart(this, readDimen(R.dimen.conversation_individual_left_gutter));\n     }\n   }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 1073,
    "bugNodeStartChar": 51703,
    "bugNodeLength": 84,
    "fixLineNum": 1073,
    "fixNodeStartChar": 51703,
    "fixNodeLength": 86,
    "sourceBeforeFix": "ViewUtil.setLeftMargin(this,readDimen(R.dimen.conversation_individual_left_gutter))",
    "sourceAfterFix": "ViewUtil.setPaddingStart(this,readDimen(R.dimen.conversation_individual_left_gutter))"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "3f2b4d60fd00fc53a714e6d1f1017e71ee7627fa",
    "fixCommitParentSHA1": "ca633b13af01515d3dddf721606feb6cdb15019e",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/util/StorageUtil.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/util/StorageUtil.java b/app/src/main/java/org/thoughtcrime/securesms/util/StorageUtil.java\nindex 73cb0f4..3b80f10 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/util/StorageUtil.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/util/StorageUtil.java\n@@ -130,7 +130,7 @@\n   }\n \n   public static @NonNull Uri getAudioUri() {\n-    if (Build.VERSION.SDK_INT \u003c 21) {\n+    if (Build.VERSION.SDK_INT \u003c 29) {\n       return getLegacyUri(Environment.DIRECTORY_MUSIC);\n     } else {\n       return MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\n",
    "projectName": "Signal-Android",
    "bugLineNum": 133,
    "bugNodeStartChar": 4122,
    "bugNodeLength": 26,
    "fixLineNum": 133,
    "fixNodeStartChar": 4122,
    "fixNodeLength": 26,
    "sourceBeforeFix": "Build.VERSION.SDK_INT \u003c 21",
    "sourceAfterFix": "Build.VERSION.SDK_INT \u003c 29"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "6df839612dd560f685c30ce581c6b2ce559577fc",
    "fixCommitParentSHA1": "dd630abd0e52c9894a3a561ba41c4441c0912434",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/preferences/AdvancedPreferenceFragment.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/preferences/AdvancedPreferenceFragment.java b/app/src/main/java/org/thoughtcrime/securesms/preferences/AdvancedPreferenceFragment.java\nindex 8759155..f743e8c 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/preferences/AdvancedPreferenceFragment.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/preferences/AdvancedPreferenceFragment.java\n@@ -67,7 +67,7 @@\n \n     Preference pinSettings \u003d this.findPreference(ADVANCED_PIN_PREF);\n     pinSettings.setOnPreferenceClickListener(preference -\u003e {\n-      getApplicationPreferencesActivity().pushFragment(new AdvancedPreferenceFragment());\n+      getApplicationPreferencesActivity().pushFragment(new AdvancedPinPreferenceFragment());\n       return false;\n     });\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 70,
    "bugNodeStartChar": 3074,
    "bugNodeLength": 32,
    "fixLineNum": 70,
    "fixNodeStartChar": 3074,
    "fixNodeLength": 35,
    "sourceBeforeFix": "new AdvancedPreferenceFragment()",
    "sourceAfterFix": "new AdvancedPinPreferenceFragment()"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "dd630abd0e52c9894a3a561ba41c4441c0912434",
    "fixCommitParentSHA1": "6826c0ded58c18d810e8620262c2d18ab1a92af0",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationViewModel.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationViewModel.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationViewModel.java\nindex 43b85da..38956d3 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationViewModel.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationViewModel.java\n@@ -93,7 +93,7 @@\n       ConversationDataSource dataSource \u003d new ConversationDataSource(context, data.getThreadId());\n       PagingConfig           config     \u003d new PagingConfig.Builder()\n                                                           .setPageSize(25)\n-                                                          .setBufferPages(1)\n+                                                          .setBufferPages(3)\n                                                           .setStartIndex(Math.max(startPosition, 0))\n                                                           .build();\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 94,
    "bugNodeStartChar": 4146,
    "bugNodeLength": 178,
    "fixLineNum": 94,
    "fixNodeStartChar": 4146,
    "fixNodeLength": 178,
    "sourceBeforeFix": "new PagingConfig.Builder().setPageSize(25).setBufferPages(1)",
    "sourceAfterFix": "new PagingConfig.Builder().setPageSize(25).setBufferPages(3)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "aff00615cbfac63df1daae50e8309bf786ed55ed",
    "fixCommitParentSHA1": "be53bfa88fddb8f482d579d0e1243fa631836e7e",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/components/webrtc/WebRtcAudioOutputToggleButton.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/components/webrtc/WebRtcAudioOutputToggleButton.java b/app/src/main/java/org/thoughtcrime/securesms/components/webrtc/WebRtcAudioOutputToggleButton.java\nindex 33960f1..9244b0e 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/components/webrtc/WebRtcAudioOutputToggleButton.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/components/webrtc/WebRtcAudioOutputToggleButton.java\n@@ -113,7 +113,7 @@\n     rv.setLayoutManager(new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false));\n     rv.setAdapter(adapter);\n \n-    picker \u003d new AlertDialog.Builder(getContext())\n+    picker \u003d new AlertDialog.Builder(getContext(), R.style.Theme_Signal_AlertDialog_Dark_Cornered)\n                             .setTitle(R.string.WebRtcAudioOutputToggle__audio_output)\n                             .setView(rv)\n                             .setCancelable(true)\n",
    "projectName": "Signal-Android",
    "bugLineNum": 116,
    "bugNodeStartChar": 4975,
    "bugNodeLength": 37,
    "fixLineNum": 116,
    "fixNodeStartChar": 4975,
    "fixNodeLength": 85,
    "sourceBeforeFix": "new AlertDialog.Builder(getContext())",
    "sourceAfterFix": "new AlertDialog.Builder(getContext(),R.style.Theme_Signal_AlertDialog_Dark_Cornered)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "ccd3467a610476590b43d6103f4a86954fe07499",
    "fixCommitParentSHA1": "40338afe7a5c10a6a57483dc5f46050a0d482af0",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java b/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java\nindex 37027aa..0a24b01 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java\n@@ -548,7 +548,7 @@\n     if (fragment !\u003d null) {\n       fragment.pausePlayback();\n \n-      SimpleProgressDialog.DismissibleDialog dialog \u003d SimpleProgressDialog.showDelayed(this);\n+      SimpleProgressDialog.DismissibleDialog dialog \u003d SimpleProgressDialog.showDelayed(this, 300, 0);\n       viewModel.onSendClicked(buildModelsToTransform(fragment), recipients, composeText.getMentions()).observe(this, result -\u003e {\n         dialog.dismiss();\n         finish();\n@@ -573,7 +573,7 @@\n \n     fragment.pausePlayback();\n \n-    SimpleProgressDialog.DismissibleDialog dialog \u003d SimpleProgressDialog.showDelayed(this);\n+    SimpleProgressDialog.DismissibleDialog dialog \u003d SimpleProgressDialog.showDelayed(this, 300, 0);\n     viewModel.onSendClicked(buildModelsToTransform(fragment), Collections.emptyList(), composeText.getMentions())\n              .observe(this, result -\u003e {\n                 dialog.dismiss();\n",
    "projectName": "Signal-Android",
    "bugLineNum": 551,
    "bugNodeStartChar": 22443,
    "bugNodeLength": 38,
    "fixLineNum": 551,
    "fixNodeStartChar": 22443,
    "fixNodeLength": 46,
    "sourceBeforeFix": "SimpleProgressDialog.showDelayed(this)",
    "sourceAfterFix": "SimpleProgressDialog.showDelayed(this,300,0)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "ccd3467a610476590b43d6103f4a86954fe07499",
    "fixCommitParentSHA1": "40338afe7a5c10a6a57483dc5f46050a0d482af0",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java b/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java\nindex 37027aa..0a24b01 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/mediasend/MediaSendActivity.java\n@@ -548,7 +548,7 @@\n     if (fragment !\u003d null) {\n       fragment.pausePlayback();\n \n-      SimpleProgressDialog.DismissibleDialog dialog \u003d SimpleProgressDialog.showDelayed(this);\n+      SimpleProgressDialog.DismissibleDialog dialog \u003d SimpleProgressDialog.showDelayed(this, 300, 0);\n       viewModel.onSendClicked(buildModelsToTransform(fragment), recipients, composeText.getMentions()).observe(this, result -\u003e {\n         dialog.dismiss();\n         finish();\n@@ -573,7 +573,7 @@\n \n     fragment.pausePlayback();\n \n-    SimpleProgressDialog.DismissibleDialog dialog \u003d SimpleProgressDialog.showDelayed(this);\n+    SimpleProgressDialog.DismissibleDialog dialog \u003d SimpleProgressDialog.showDelayed(this, 300, 0);\n     viewModel.onSendClicked(buildModelsToTransform(fragment), Collections.emptyList(), composeText.getMentions())\n              .observe(this, result -\u003e {\n                 dialog.dismiss();\n",
    "projectName": "Signal-Android",
    "bugLineNum": 576,
    "bugNodeStartChar": 23145,
    "bugNodeLength": 38,
    "fixLineNum": 576,
    "fixNodeStartChar": 23145,
    "fixNodeLength": 46,
    "sourceBeforeFix": "SimpleProgressDialog.showDelayed(this)",
    "sourceAfterFix": "SimpleProgressDialog.showDelayed(this,300,0)"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "506ad0b3f1bbed15cc746505070fa9702e07f274",
    "fixCommitParentSHA1": "c8302174a993424b7ead76b381d3e04a729aba27",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/jobs/PushProcessMessageJob.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushProcessMessageJob.java b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushProcessMessageJob.java\nindex bc3e83f..b4ecac2 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushProcessMessageJob.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushProcessMessageJob.java\n@@ -937,7 +937,7 @@\n         threadId \u003d DatabaseFactory.getThreadDatabase(context).getThreadIdFor(getSyncMessageDestination(message));\n       } else if (message.getMessage().getRemoteDelete().isPresent()) {\n         handleRemoteDelete(content, message.getMessage());\n-      } else if (message.getMessage().getAttachments().isPresent() || message.getMessage().getQuote().isPresent() || message.getMessage().getPreviews().isPresent() || message.getMessage().getSticker().isPresent() || message.getMessage().isViewOnce()) {\n+      } else if (message.getMessage().getAttachments().isPresent() || message.getMessage().getQuote().isPresent() || message.getMessage().getPreviews().isPresent() || message.getMessage().getSticker().isPresent() || message.getMessage().isViewOnce() || message.getMessage().getMentions().isPresent()) {\n         threadId \u003d handleSynchronizeSentMediaMessage(message);\n       } else {\n         threadId \u003d handleSynchronizeSentTextMessage(message);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 940,
    "bugNodeStartChar": 49934,
    "bugNodeLength": 232,
    "fixLineNum": 940,
    "fixNodeStartChar": 49934,
    "fixNodeLength": 282,
    "sourceBeforeFix": "message.getMessage().getAttachments().isPresent() || message.getMessage().getQuote().isPresent() || message.getMessage().getPreviews().isPresent()|| message.getMessage().getSticker().isPresent()|| message.getMessage().isViewOnce()",
    "sourceAfterFix": "message.getMessage().getAttachments().isPresent() || message.getMessage().getQuote().isPresent() || message.getMessage().getPreviews().isPresent()|| message.getMessage().getSticker().isPresent()|| message.getMessage().isViewOnce()|| message.getMessage().getMentions().isPresent()"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "c8302174a993424b7ead76b381d3e04a729aba27",
    "fixCommitParentSHA1": "39cebfbb4e27a1c741f28760f9b4e82b8a61c3eb",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ui/mentions/MentionsPickerRepository.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ui/mentions/MentionsPickerRepository.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ui/mentions/MentionsPickerRepository.java\nindex 124f4df..4d8adad 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ui/mentions/MentionsPickerRepository.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ui/mentions/MentionsPickerRepository.java\n@@ -40,7 +40,7 @@\n \n   @WorkerThread\n   @NonNull List\u003cRecipient\u003e search(@NonNull MentionQuery mentionQuery) {\n-    if (mentionQuery.query \u003d\u003d null) {\n+    if (mentionQuery.query \u003d\u003d null || mentionQuery.members.isEmpty()) {\n       return Collections.emptyList();\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 43,
    "bugNodeStartChar": 1430,
    "bugNodeLength": 26,
    "fixLineNum": 43,
    "fixNodeStartChar": 1430,
    "fixNodeLength": 60,
    "sourceBeforeFix": "mentionQuery.query \u003d\u003d null",
    "sourceAfterFix": "mentionQuery.query \u003d\u003d null || mentionQuery.members.isEmpty()"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "c8302174a993424b7ead76b381d3e04a729aba27",
    "fixCommitParentSHA1": "39cebfbb4e27a1c741f28760f9b4e82b8a61c3eb",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ui/mentions/MentionsPickerRepository.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ui/mentions/MentionsPickerRepository.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ui/mentions/MentionsPickerRepository.java\nindex 124f4df..4d8adad 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ui/mentions/MentionsPickerRepository.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ui/mentions/MentionsPickerRepository.java\n@@ -40,7 +40,7 @@\n \n   @WorkerThread\n   @NonNull List\u003cRecipient\u003e search(@NonNull MentionQuery mentionQuery) {\n-    if (mentionQuery.query \u003d\u003d null) {\n+    if (mentionQuery.query \u003d\u003d null || mentionQuery.members.isEmpty()) {\n       return Collections.emptyList();\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 43,
    "bugNodeStartChar": 1430,
    "bugNodeLength": 26,
    "fixLineNum": 43,
    "fixNodeStartChar": 1430,
    "fixNodeLength": 60,
    "sourceBeforeFix": "mentionQuery.query \u003d\u003d null",
    "sourceAfterFix": "mentionQuery.query \u003d\u003d null || mentionQuery.members.isEmpty()"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "5e382c120b628e4455e34344495b291431019903",
    "fixCommitParentSHA1": "3eea568f5fb16bf40775aa73e2f6b92b1d7c8fca",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/contacts/sync/DirectoryHelper.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/contacts/sync/DirectoryHelper.java b/app/src/main/java/org/thoughtcrime/securesms/contacts/sync/DirectoryHelper.java\nindex a58e96f..cb84c3f 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/contacts/sync/DirectoryHelper.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/contacts/sync/DirectoryHelper.java\n@@ -83,7 +83,7 @@\n       return;\n     }\n \n-    if (!Permissions.hasAll(context, Manifest.permission.WRITE_CONTACTS)) {\n+    if (!Permissions.hasAll(context, Manifest.permission.READ_CONTACTS, Manifest.permission.WRITE_CONTACTS)) {\n       Log.w(TAG, \"No contact permissions. Skipping.\");\n       return;\n     }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 86,
    "bugNodeStartChar": 3683,
    "bugNodeLength": 63,
    "fixLineNum": 86,
    "fixNodeStartChar": 3683,
    "fixNodeLength": 98,
    "sourceBeforeFix": "Permissions.hasAll(context,Manifest.permission.WRITE_CONTACTS)",
    "sourceAfterFix": "Permissions.hasAll(context,Manifest.permission.READ_CONTACTS,Manifest.permission.WRITE_CONTACTS)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "b40fd7b2435d563e2336e9ef7fbd21c1d749f601",
    "fixCommitParentSHA1": "ae3487749648caaa30ec9e304b0f403f7753bbc1",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/mms/AudioSlide.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/mms/AudioSlide.java b/app/src/main/java/org/thoughtcrime/securesms/mms/AudioSlide.java\nindex 29f83cf..ae561f0 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/mms/AudioSlide.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/mms/AudioSlide.java\n@@ -53,7 +53,7 @@\n \n   @Override\n   public boolean hasImage() {\n-    return true;\n+    return false;\n   }\n \n   @Override\n",
    "projectName": "Signal-Android",
    "bugLineNum": 56,
    "bugNodeStartChar": 2131,
    "bugNodeLength": 12,
    "fixLineNum": 56,
    "fixNodeStartChar": 2131,
    "fixNodeLength": 13,
    "sourceBeforeFix": "return true; ",
    "sourceAfterFix": "return false; "
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "cd6c01e23002328c100b4f8d321e8b52c1605a42",
    "fixCommitParentSHA1": "0af264429f61684cffc70321aadc09254bfcc288",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/groups/GroupsV2CapabilityChecker.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/groups/GroupsV2CapabilityChecker.java b/app/src/main/java/org/thoughtcrime/securesms/groups/GroupsV2CapabilityChecker.java\nindex c3d1455..3eb10c2 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/groups/GroupsV2CapabilityChecker.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/groups/GroupsV2CapabilityChecker.java\n@@ -44,7 +44,7 @@\n       JobManager jobManager \u003d ApplicationDependencies.getJobManager();\n \n       for (Job job : jobs) {\n-        if (!jobManager.runSynchronously(job, TimeUnit.SECONDS.toMillis(5000)).isPresent()) {\n+        if (!jobManager.runSynchronously(job, TimeUnit.SECONDS.toMillis(5)).isPresent()) {\n           throw new IOException(\"Recipient capability was not retrieved in time\");\n         }\n       }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 47,
    "bugNodeStartChar": 1812,
    "bugNodeLength": 31,
    "fixLineNum": 47,
    "fixNodeStartChar": 1812,
    "fixNodeLength": 28,
    "sourceBeforeFix": "TimeUnit.SECONDS.toMillis(5000)",
    "sourceAfterFix": "TimeUnit.SECONDS.toMillis(5)"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "ba7e41d9a6a5d606d1fcbd7ba3e96d9bec8948da",
    "fixCommitParentSHA1": "fe33ce341361459f85d989bf55548ab9489944c8",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/logsubmit/SubmitDebugLogActivity.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/logsubmit/SubmitDebugLogActivity.java b/app/src/main/java/org/thoughtcrime/securesms/logsubmit/SubmitDebugLogActivity.java\nindex c01bbf6..d0d0586 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/logsubmit/SubmitDebugLogActivity.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/logsubmit/SubmitDebugLogActivity.java\n@@ -187,7 +187,7 @@\n   }\n \n   private void presentLines(@NonNull List\u003cLogLine\u003e lines) {\n-    if (loadingDialog !\u003d null) {\n+    if (loadingDialog !\u003d null \u0026\u0026 lines.size() \u003e 0) {\n       loadingDialog.dismiss();\n       loadingDialog \u003d null;\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 190,
    "bugNodeStartChar": 6238,
    "bugNodeLength": 21,
    "fixLineNum": 190,
    "fixNodeStartChar": 6238,
    "fixNodeLength": 41,
    "sourceBeforeFix": "loadingDialog !\u003d null",
    "sourceAfterFix": "loadingDialog !\u003d null \u0026\u0026 lines.size() \u003e 0"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "9cf7eec2478f70b40f8438d9718cef2b5b48c09a",
    "fixCommitParentSHA1": "d9c15621f65732340c2cdf03a559347bc6a2b1f3",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\nindex 2ebb3e4..e87cef6 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n@@ -172,7 +172,7 @@\n       return jobs;\n \n     } catch (ProtocolInvalidVersionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.INVALID_VERSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -180,7 +180,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolInvalidMessageException | ProtocolInvalidKeyIdException | ProtocolInvalidKeyException | ProtocolUntrustedIdentityException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.CORRUPT_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -188,7 +188,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolNoSessionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.NO_SESSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -196,7 +196,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolLegacyMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.LEGACY_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -204,7 +204,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolDuplicateMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.DUPLICATE_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -212,7 +212,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (InvalidMetadataVersionException | InvalidMetadataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.emptyList();\n \n     } catch (SelfSendException e) {\n@@ -220,7 +220,7 @@\n       return Collections.emptyList();\n \n     } catch (UnsupportedDataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.UNSUPPORTED_DATA_MESSAGE,\n                                        toExceptionMetadata(e),\n                                        messageId,\n",
    "projectName": "Signal-Android",
    "bugLineNum": 175,
    "bugNodeStartChar": 7662,
    "bugNodeLength": 13,
    "fixLineNum": 175,
    "fixNodeStartChar": 7662,
    "fixNodeLength": 54,
    "sourceBeforeFix": "Log.w(TAG,e)",
    "sourceAfterFix": "Log.w(TAG,String.valueOf(envelope.getTimestamp()),e)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "9cf7eec2478f70b40f8438d9718cef2b5b48c09a",
    "fixCommitParentSHA1": "d9c15621f65732340c2cdf03a559347bc6a2b1f3",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\nindex 2ebb3e4..e87cef6 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n@@ -172,7 +172,7 @@\n       return jobs;\n \n     } catch (ProtocolInvalidVersionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.INVALID_VERSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -180,7 +180,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolInvalidMessageException | ProtocolInvalidKeyIdException | ProtocolInvalidKeyException | ProtocolUntrustedIdentityException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.CORRUPT_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -188,7 +188,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolNoSessionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.NO_SESSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -196,7 +196,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolLegacyMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.LEGACY_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -204,7 +204,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolDuplicateMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.DUPLICATE_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -212,7 +212,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (InvalidMetadataVersionException | InvalidMetadataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.emptyList();\n \n     } catch (SelfSendException e) {\n@@ -220,7 +220,7 @@\n       return Collections.emptyList();\n \n     } catch (UnsupportedDataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.UNSUPPORTED_DATA_MESSAGE,\n                                        toExceptionMetadata(e),\n                                        messageId,\n",
    "projectName": "Signal-Android",
    "bugLineNum": 183,
    "bugNodeStartChar": 8286,
    "bugNodeLength": 13,
    "fixLineNum": 183,
    "fixNodeStartChar": 8286,
    "fixNodeLength": 54,
    "sourceBeforeFix": "Log.w(TAG,e)",
    "sourceAfterFix": "Log.w(TAG,String.valueOf(envelope.getTimestamp()),e)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "9cf7eec2478f70b40f8438d9718cef2b5b48c09a",
    "fixCommitParentSHA1": "d9c15621f65732340c2cdf03a559347bc6a2b1f3",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\nindex 2ebb3e4..e87cef6 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n@@ -172,7 +172,7 @@\n       return jobs;\n \n     } catch (ProtocolInvalidVersionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.INVALID_VERSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -180,7 +180,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolInvalidMessageException | ProtocolInvalidKeyIdException | ProtocolInvalidKeyException | ProtocolUntrustedIdentityException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.CORRUPT_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -188,7 +188,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolNoSessionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.NO_SESSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -196,7 +196,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolLegacyMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.LEGACY_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -204,7 +204,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolDuplicateMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.DUPLICATE_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -212,7 +212,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (InvalidMetadataVersionException | InvalidMetadataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.emptyList();\n \n     } catch (SelfSendException e) {\n@@ -220,7 +220,7 @@\n       return Collections.emptyList();\n \n     } catch (UnsupportedDataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.UNSUPPORTED_DATA_MESSAGE,\n                                        toExceptionMetadata(e),\n                                        messageId,\n",
    "projectName": "Signal-Android",
    "bugLineNum": 191,
    "bugNodeStartChar": 8806,
    "bugNodeLength": 13,
    "fixLineNum": 191,
    "fixNodeStartChar": 8806,
    "fixNodeLength": 54,
    "sourceBeforeFix": "Log.w(TAG,e)",
    "sourceAfterFix": "Log.w(TAG,String.valueOf(envelope.getTimestamp()),e)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "9cf7eec2478f70b40f8438d9718cef2b5b48c09a",
    "fixCommitParentSHA1": "d9c15621f65732340c2cdf03a559347bc6a2b1f3",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\nindex 2ebb3e4..e87cef6 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n@@ -172,7 +172,7 @@\n       return jobs;\n \n     } catch (ProtocolInvalidVersionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.INVALID_VERSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -180,7 +180,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolInvalidMessageException | ProtocolInvalidKeyIdException | ProtocolInvalidKeyException | ProtocolUntrustedIdentityException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.CORRUPT_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -188,7 +188,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolNoSessionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.NO_SESSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -196,7 +196,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolLegacyMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.LEGACY_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -204,7 +204,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolDuplicateMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.DUPLICATE_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -212,7 +212,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (InvalidMetadataVersionException | InvalidMetadataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.emptyList();\n \n     } catch (SelfSendException e) {\n@@ -220,7 +220,7 @@\n       return Collections.emptyList();\n \n     } catch (UnsupportedDataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.UNSUPPORTED_DATA_MESSAGE,\n                                        toExceptionMetadata(e),\n                                        messageId,\n",
    "projectName": "Signal-Android",
    "bugLineNum": 199,
    "bugNodeStartChar": 9325,
    "bugNodeLength": 13,
    "fixLineNum": 199,
    "fixNodeStartChar": 9325,
    "fixNodeLength": 54,
    "sourceBeforeFix": "Log.w(TAG,e)",
    "sourceAfterFix": "Log.w(TAG,String.valueOf(envelope.getTimestamp()),e)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "9cf7eec2478f70b40f8438d9718cef2b5b48c09a",
    "fixCommitParentSHA1": "d9c15621f65732340c2cdf03a559347bc6a2b1f3",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\nindex 2ebb3e4..e87cef6 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n@@ -172,7 +172,7 @@\n       return jobs;\n \n     } catch (ProtocolInvalidVersionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.INVALID_VERSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -180,7 +180,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolInvalidMessageException | ProtocolInvalidKeyIdException | ProtocolInvalidKeyException | ProtocolUntrustedIdentityException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.CORRUPT_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -188,7 +188,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolNoSessionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.NO_SESSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -196,7 +196,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolLegacyMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.LEGACY_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -204,7 +204,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolDuplicateMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.DUPLICATE_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -212,7 +212,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (InvalidMetadataVersionException | InvalidMetadataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.emptyList();\n \n     } catch (SelfSendException e) {\n@@ -220,7 +220,7 @@\n       return Collections.emptyList();\n \n     } catch (UnsupportedDataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.UNSUPPORTED_DATA_MESSAGE,\n                                        toExceptionMetadata(e),\n                                        messageId,\n",
    "projectName": "Signal-Android",
    "bugLineNum": 207,
    "bugNodeStartChar": 9851,
    "bugNodeLength": 13,
    "fixLineNum": 207,
    "fixNodeStartChar": 9851,
    "fixNodeLength": 54,
    "sourceBeforeFix": "Log.w(TAG,e)",
    "sourceAfterFix": "Log.w(TAG,String.valueOf(envelope.getTimestamp()),e)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "9cf7eec2478f70b40f8438d9718cef2b5b48c09a",
    "fixCommitParentSHA1": "d9c15621f65732340c2cdf03a559347bc6a2b1f3",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\nindex 2ebb3e4..e87cef6 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n@@ -172,7 +172,7 @@\n       return jobs;\n \n     } catch (ProtocolInvalidVersionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.INVALID_VERSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -180,7 +180,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolInvalidMessageException | ProtocolInvalidKeyIdException | ProtocolInvalidKeyException | ProtocolUntrustedIdentityException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.CORRUPT_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -188,7 +188,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolNoSessionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.NO_SESSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -196,7 +196,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolLegacyMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.LEGACY_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -204,7 +204,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolDuplicateMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.DUPLICATE_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -212,7 +212,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (InvalidMetadataVersionException | InvalidMetadataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.emptyList();\n \n     } catch (SelfSendException e) {\n@@ -220,7 +220,7 @@\n       return Collections.emptyList();\n \n     } catch (UnsupportedDataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.UNSUPPORTED_DATA_MESSAGE,\n                                        toExceptionMetadata(e),\n                                        messageId,\n",
    "projectName": "Signal-Android",
    "bugLineNum": 215,
    "bugNodeStartChar": 10412,
    "bugNodeLength": 13,
    "fixLineNum": 215,
    "fixNodeStartChar": 10412,
    "fixNodeLength": 54,
    "sourceBeforeFix": "Log.w(TAG,e)",
    "sourceAfterFix": "Log.w(TAG,String.valueOf(envelope.getTimestamp()),e)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "9cf7eec2478f70b40f8438d9718cef2b5b48c09a",
    "fixCommitParentSHA1": "d9c15621f65732340c2cdf03a559347bc6a2b1f3",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\nindex 2ebb3e4..e87cef6 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/jobs/PushDecryptMessageJob.java\n@@ -172,7 +172,7 @@\n       return jobs;\n \n     } catch (ProtocolInvalidVersionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.INVALID_VERSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -180,7 +180,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolInvalidMessageException | ProtocolInvalidKeyIdException | ProtocolInvalidKeyException | ProtocolUntrustedIdentityException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.CORRUPT_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -188,7 +188,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolNoSessionException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.NO_SESSION,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -196,7 +196,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolLegacyMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.LEGACY_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -204,7 +204,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (ProtocolDuplicateMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.DUPLICATE_MESSAGE,\n                                                                  toExceptionMetadata(e),\n                                                                  messageId,\n@@ -212,7 +212,7 @@\n                                                                  envelope.getTimestamp()));\n \n     } catch (InvalidMetadataVersionException | InvalidMetadataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.emptyList();\n \n     } catch (SelfSendException e) {\n@@ -220,7 +220,7 @@\n       return Collections.emptyList();\n \n     } catch (UnsupportedDataMessageException e) {\n-      Log.w(TAG, e);\n+      Log.w(TAG, String.valueOf(envelope.getTimestamp()), e);\n       return Collections.singletonList(new PushProcessMessageJob(PushProcessMessageJob.MessageState.UNSUPPORTED_DATA_MESSAGE,\n                                        toExceptionMetadata(e),\n                                        messageId,\n",
    "projectName": "Signal-Android",
    "bugLineNum": 223,
    "bugNodeStartChar": 10649,
    "bugNodeLength": 13,
    "fixLineNum": 223,
    "fixNodeStartChar": 10649,
    "fixNodeLength": 54,
    "sourceBeforeFix": "Log.w(TAG,e)",
    "sourceAfterFix": "Log.w(TAG,String.valueOf(envelope.getTimestamp()),e)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "bf4cac0c82c19a089ec3fc83c972f64e10a60888",
    "fixCommitParentSHA1": "f680749a001d9f1dd6bd06d1338d9ff5b763c2f6",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversationlist/ConversationListArchiveFragment.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversationlist/ConversationListArchiveFragment.java b/app/src/main/java/org/thoughtcrime/securesms/conversationlist/ConversationListArchiveFragment.java\nindex 6746c21..8033359 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversationlist/ConversationListArchiveFragment.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversationlist/ConversationListArchiveFragment.java\n@@ -111,13 +111,13 @@\n   @Override\n   @WorkerThread\n   protected void archiveThreads(Set\u003cLong\u003e threadIds) {\n-    DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds, true);\n+    DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds, false);\n   }\n \n   @Override\n   @WorkerThread\n   protected void reverseArchiveThreads(Set\u003cLong\u003e threadIds) {\n-    DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds, false);\n+    DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds, true);\n   }\n \n   @SuppressLint(\"StaticFieldLeak\")\n",
    "projectName": "Signal-Android",
    "bugLineNum": 114,
    "bugNodeStartChar": 3615,
    "bugNodeLength": 77,
    "fixLineNum": 114,
    "fixNodeStartChar": 3615,
    "fixNodeLength": 78,
    "sourceBeforeFix": "DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds,true)",
    "sourceAfterFix": "DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds,false)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "bf4cac0c82c19a089ec3fc83c972f64e10a60888",
    "fixCommitParentSHA1": "f680749a001d9f1dd6bd06d1338d9ff5b763c2f6",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversationlist/ConversationListArchiveFragment.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversationlist/ConversationListArchiveFragment.java b/app/src/main/java/org/thoughtcrime/securesms/conversationlist/ConversationListArchiveFragment.java\nindex 6746c21..8033359 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversationlist/ConversationListArchiveFragment.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversationlist/ConversationListArchiveFragment.java\n@@ -111,13 +111,13 @@\n   @Override\n   @WorkerThread\n   protected void archiveThreads(Set\u003cLong\u003e threadIds) {\n-    DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds, true);\n+    DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds, false);\n   }\n \n   @Override\n   @WorkerThread\n   protected void reverseArchiveThreads(Set\u003cLong\u003e threadIds) {\n-    DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds, false);\n+    DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds, true);\n   }\n \n   @SuppressLint(\"StaticFieldLeak\")\n",
    "projectName": "Signal-Android",
    "bugLineNum": 120,
    "bugNodeStartChar": 3793,
    "bugNodeLength": 78,
    "fixLineNum": 120,
    "fixNodeStartChar": 3793,
    "fixNodeLength": 77,
    "sourceBeforeFix": "DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds,false)",
    "sourceAfterFix": "DatabaseFactory.getThreadDatabase(getActivity()).setArchived(threadIds,true)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "5128438cfb7ae7e54bacffe5deab78aab9ece21c",
    "fixCommitParentSHA1": "f29f25822b70ac721c061d4b30d4638be6b75ac6",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java\nindex 8bd6a18..6137cb5 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java\n@@ -336,7 +336,7 @@\n         selected \u003d getSelectedIndexViaDownEvent(motionEvent);\n \n         if (selected \u003d\u003d -1) {\n-          if (motionEvent.getRawY() \u003c toolbar.getHeight() + statusBarHeight) {\n+          if (motionEvent.getY() \u003c toolbar.getHeight() + statusBarHeight) {\n             isToolbarTouch \u003d true;\n             return false;\n           }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 339,
    "bugNodeStartChar": 13194,
    "bugNodeLength": 21,
    "fixLineNum": 339,
    "fixNodeStartChar": 13194,
    "fixNodeLength": 18,
    "sourceBeforeFix": "motionEvent.getRawY()",
    "sourceAfterFix": "motionEvent.getY()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "5128438cfb7ae7e54bacffe5deab78aab9ece21c",
    "fixCommitParentSHA1": "f29f25822b70ac721c061d4b30d4638be6b75ac6",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java\nindex 8bd6a18..6137cb5 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java\n@@ -336,7 +336,7 @@\n         selected \u003d getSelectedIndexViaDownEvent(motionEvent);\n \n         if (selected \u003d\u003d -1) {\n-          if (motionEvent.getRawY() \u003c toolbar.getHeight() + statusBarHeight) {\n+          if (motionEvent.getY() \u003c toolbar.getHeight() + statusBarHeight) {\n             isToolbarTouch \u003d true;\n             return false;\n           }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 339,
    "bugNodeStartChar": 13194,
    "bugNodeLength": 21,
    "fixLineNum": 339,
    "fixNodeStartChar": 13194,
    "fixNodeLength": 18,
    "sourceBeforeFix": "motionEvent.getRawY()",
    "sourceAfterFix": "motionEvent.getY()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "0950235ccd32fe9563500aff8125e11301e57f68",
    "fixCommitParentSHA1": "8ed7fc894e03d1618f3465a9cd7d60482c5ed32f",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/database/RemappedRecords.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/database/RemappedRecords.java b/app/src/main/java/org/thoughtcrime/securesms/database/RemappedRecords.java\nindex 96e37c3..f10aae3 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/database/RemappedRecords.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/database/RemappedRecords.java\n@@ -64,7 +64,7 @@\n    */\n   void addThread(@NonNull Context context, long oldId, long newId) {\n     ensureInTransaction(context);\n-    ensureRecipientMapIsPopulated(context);\n+    ensureThreadMapIsPopulated(context);\n     threadMap.put(oldId, newId);\n     DatabaseFactory.getRemappedRecordsDatabase(context).addThreadMapping(oldId, newId);\n   }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 67,
    "bugNodeStartChar": 2334,
    "bugNodeLength": 38,
    "fixLineNum": 67,
    "fixNodeStartChar": 2334,
    "fixNodeLength": 35,
    "sourceBeforeFix": "ensureRecipientMapIsPopulated(context)",
    "sourceAfterFix": "ensureThreadMapIsPopulated(context)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0950235ccd32fe9563500aff8125e11301e57f68",
    "fixCommitParentSHA1": "8ed7fc894e03d1618f3465a9cd7d60482c5ed32f",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/database/RemappedRecords.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/database/RemappedRecords.java b/app/src/main/java/org/thoughtcrime/securesms/database/RemappedRecords.java\nindex 96e37c3..f10aae3 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/database/RemappedRecords.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/database/RemappedRecords.java\n@@ -64,7 +64,7 @@\n    */\n   void addThread(@NonNull Context context, long oldId, long newId) {\n     ensureInTransaction(context);\n-    ensureRecipientMapIsPopulated(context);\n+    ensureThreadMapIsPopulated(context);\n     threadMap.put(oldId, newId);\n     DatabaseFactory.getRemappedRecordsDatabase(context).addThreadMapping(oldId, newId);\n   }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 67,
    "bugNodeStartChar": 2334,
    "bugNodeLength": 38,
    "fixLineNum": 67,
    "fixNodeStartChar": 2334,
    "fixNodeLength": 35,
    "sourceBeforeFix": "ensureRecipientMapIsPopulated(context)",
    "sourceAfterFix": "ensureThreadMapIsPopulated(context)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "3d237d72bda134cb9b00af7618e9b226525994af",
    "fixCommitParentSHA1": "8044d2390c70d212122889e450073c90b92e29b2",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/util/FeatureFlags.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/util/FeatureFlags.java b/app/src/main/java/org/thoughtcrime/securesms/util/FeatureFlags.java\nindex 442f843..cfefc83 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/util/FeatureFlags.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/util/FeatureFlags.java\n@@ -46,7 +46,7 @@\n \n   private static final String TAG \u003d Log.tag(FeatureFlags.class);\n \n-  private static final long FETCH_INTERVAL \u003d TimeUnit.HOURS.toMillis(0);\n+  private static final long FETCH_INTERVAL \u003d TimeUnit.HOURS.toMillis(2);\n \n   private static final String USERNAMES                  \u003d \"android.usernames\";\n   private static final String ATTACHMENTS_V3             \u003d \"android.attachmentsV3.2\";\n",
    "projectName": "Signal-Android",
    "bugLineNum": 49,
    "bugNodeStartChar": 1845,
    "bugNodeLength": 26,
    "fixLineNum": 49,
    "fixNodeStartChar": 1845,
    "fixNodeLength": 26,
    "sourceBeforeFix": "TimeUnit.HOURS.toMillis(0)",
    "sourceAfterFix": "TimeUnit.HOURS.toMillis(2)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "8044d2390c70d212122889e450073c90b92e29b2",
    "fixCommitParentSHA1": "6b82e6b5ac086b5a652284f7c80f8ea8bc6d5d7d",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/database/SmsDatabase.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/database/SmsDatabase.java b/app/src/main/java/org/thoughtcrime/securesms/database/SmsDatabase.java\nindex 7375f21..32d6913 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/database/SmsDatabase.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/database/SmsDatabase.java\n@@ -673,7 +673,7 @@\n \n               db.insert(TABLE_NAME, null, values);\n \n-              DatabaseFactory.getThreadDatabase(context).update(threadId, true);\n+              DatabaseFactory.getThreadDatabase(context).update(threadId, false);\n               notifyConversationListeners(threadId);\n               ApplicationDependencies.getJobManager().add(new TrimThreadJob(threadId));\n             });\n",
    "projectName": "Signal-Android",
    "bugLineNum": 676,
    "bugNodeStartChar": 30078,
    "bugNodeLength": 65,
    "fixLineNum": 676,
    "fixNodeStartChar": 30078,
    "fixNodeLength": 66,
    "sourceBeforeFix": "DatabaseFactory.getThreadDatabase(context).update(threadId,true)",
    "sourceAfterFix": "DatabaseFactory.getThreadDatabase(context).update(threadId,false)"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "dfa4f0c3099cadaaf3287a2e400ef3b6a71e7186",
    "fixCommitParentSHA1": "f0063b4b0d9766ba37d412f5f2f7c1edf69085fd",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java\nindex e7222e5..b5b00f4 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java\n@@ -1013,7 +1013,7 @@\n             return GroupChangeResult.SUCCESS;\n           },\n           (changeResult) -\u003e {\n-            if (changeResult.isSuccess()) {\n+            if (!changeResult.isSuccess()) {\n               Toast.makeText(ConversationActivity.this, GroupErrors.getUserDisplayMessage(changeResult.getFailureReason()), Toast.LENGTH_SHORT).show();\n             } else {\n               invalidateOptionsMenu();\n",
    "projectName": "Signal-Android",
    "bugLineNum": 1016,
    "bugNodeStartChar": 43732,
    "bugNodeLength": 24,
    "fixLineNum": 1016,
    "fixNodeStartChar": 43732,
    "fixNodeLength": 25,
    "sourceBeforeFix": "changeResult.isSuccess()",
    "sourceAfterFix": "!changeResult.isSuccess()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "bc0761f0022a36b55e78d52c01ac0a21fb2eef61",
    "fixCommitParentSHA1": "c0c2fc0ebade86147480a008efedf18b5c2dfb34",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java\nindex 9176b3d..b952ce4 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java\n@@ -893,7 +893,7 @@\n     case R.id.menu_conversation_settings:     handleConversationSettings();                      return true;\n     case R.id.menu_expiring_messages_off:\n     case R.id.menu_expiring_messages:         handleSelectMessageExpiration();                   return true;\n-    case android.R.id.home:                   onBackPressed();                                   return true;\n+    case android.R.id.home:                   onNavigateUp();                                    return true;\n     }\n \n     return false;\n",
    "projectName": "Signal-Android",
    "bugLineNum": 896,
    "bugNodeStartChar": 39312,
    "bugNodeLength": 15,
    "fixLineNum": 896,
    "fixNodeStartChar": 39312,
    "fixNodeLength": 14,
    "sourceBeforeFix": "onBackPressed()",
    "sourceAfterFix": "onNavigateUp()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "bc0761f0022a36b55e78d52c01ac0a21fb2eef61",
    "fixCommitParentSHA1": "c0c2fc0ebade86147480a008efedf18b5c2dfb34",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java\nindex 9176b3d..b952ce4 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationActivity.java\n@@ -893,7 +893,7 @@\n     case R.id.menu_conversation_settings:     handleConversationSettings();                      return true;\n     case R.id.menu_expiring_messages_off:\n     case R.id.menu_expiring_messages:         handleSelectMessageExpiration();                   return true;\n-    case android.R.id.home:                   onBackPressed();                                   return true;\n+    case android.R.id.home:                   onNavigateUp();                                    return true;\n     }\n \n     return false;\n",
    "projectName": "Signal-Android",
    "bugLineNum": 896,
    "bugNodeStartChar": 39312,
    "bugNodeLength": 15,
    "fixLineNum": 896,
    "fixNodeStartChar": 39312,
    "fixNodeLength": 14,
    "sourceBeforeFix": "onBackPressed()",
    "sourceAfterFix": "onNavigateUp()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "664527ce63103d4dc922f7b93ca18e9dd3f1bcc0",
    "fixCommitParentSHA1": "99e4f80be0eb41b0ba7140b62ece35083b2a0fdf",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/groups/LiveGroup.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/groups/LiveGroup.java b/app/src/main/java/org/thoughtcrime/securesms/groups/LiveGroup.java\nindex f1d3737..be7d9da 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/groups/LiveGroup.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/groups/LiveGroup.java\n@@ -29,7 +29,7 @@\n \n   private static final Comparator\u003cGroupMemberEntry.FullMember\u003e         LOCAL_FIRST  \u003d (m1, m2) -\u003e Boolean.compare(m2.getMember().isLocalNumber(), m1.getMember().isLocalNumber());\n   private static final Comparator\u003cGroupMemberEntry.FullMember\u003e         ADMIN_FIRST  \u003d (m1, m2) -\u003e Boolean.compare(m2.isAdmin(), m1.isAdmin());\n-  private static final Comparator\u003cGroupMemberEntry.FullMember\u003e         ALPHABETICAL \u003d (m1, m2) -\u003e m1.getMember().toShortString(ApplicationDependencies.getApplication()).compareToIgnoreCase(m2.getMember().toShortString(ApplicationDependencies.getApplication()));\n+  private static final Comparator\u003cGroupMemberEntry.FullMember\u003e         ALPHABETICAL \u003d (m1, m2) -\u003e m1.getMember().getDisplayName(ApplicationDependencies.getApplication()).compareToIgnoreCase(m2.getMember().getDisplayName(ApplicationDependencies.getApplication()));\n   private static final Comparator\u003c? super GroupMemberEntry.FullMember\u003e MEMBER_ORDER \u003d ComparatorCompat.chain(LOCAL_FIRST)\n                                                                                                       .thenComparing(ADMIN_FIRST)\n                                                                                                       .thenComparing(ALPHABETICAL);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 32,
    "bugNodeStartChar": 1451,
    "bugNodeLength": 70,
    "fixLineNum": 32,
    "fixNodeStartChar": 1451,
    "fixNodeLength": 71,
    "sourceBeforeFix": "m1.getMember().toShortString(ApplicationDependencies.getApplication())",
    "sourceAfterFix": "m1.getMember().getDisplayName(ApplicationDependencies.getApplication())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "664527ce63103d4dc922f7b93ca18e9dd3f1bcc0",
    "fixCommitParentSHA1": "99e4f80be0eb41b0ba7140b62ece35083b2a0fdf",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/groups/LiveGroup.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/groups/LiveGroup.java b/app/src/main/java/org/thoughtcrime/securesms/groups/LiveGroup.java\nindex f1d3737..be7d9da 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/groups/LiveGroup.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/groups/LiveGroup.java\n@@ -29,7 +29,7 @@\n \n   private static final Comparator\u003cGroupMemberEntry.FullMember\u003e         LOCAL_FIRST  \u003d (m1, m2) -\u003e Boolean.compare(m2.getMember().isLocalNumber(), m1.getMember().isLocalNumber());\n   private static final Comparator\u003cGroupMemberEntry.FullMember\u003e         ADMIN_FIRST  \u003d (m1, m2) -\u003e Boolean.compare(m2.isAdmin(), m1.isAdmin());\n-  private static final Comparator\u003cGroupMemberEntry.FullMember\u003e         ALPHABETICAL \u003d (m1, m2) -\u003e m1.getMember().toShortString(ApplicationDependencies.getApplication()).compareToIgnoreCase(m2.getMember().toShortString(ApplicationDependencies.getApplication()));\n+  private static final Comparator\u003cGroupMemberEntry.FullMember\u003e         ALPHABETICAL \u003d (m1, m2) -\u003e m1.getMember().getDisplayName(ApplicationDependencies.getApplication()).compareToIgnoreCase(m2.getMember().getDisplayName(ApplicationDependencies.getApplication()));\n   private static final Comparator\u003c? super GroupMemberEntry.FullMember\u003e MEMBER_ORDER \u003d ComparatorCompat.chain(LOCAL_FIRST)\n                                                                                                       .thenComparing(ADMIN_FIRST)\n                                                                                                       .thenComparing(ALPHABETICAL);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 32,
    "bugNodeStartChar": 1451,
    "bugNodeLength": 70,
    "fixLineNum": 32,
    "fixNodeStartChar": 1451,
    "fixNodeLength": 71,
    "sourceBeforeFix": "m1.getMember().toShortString(ApplicationDependencies.getApplication())",
    "sourceAfterFix": "m1.getMember().getDisplayName(ApplicationDependencies.getApplication())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3b601896d264cab4765b6978f9cd2fa8d0fba266",
    "fixCommitParentSHA1": "e1a90bcb002a38f769e2bce204fd61b97e5c1678",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/logsubmit/SubmitDebugLogViewModel.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/logsubmit/SubmitDebugLogViewModel.java b/app/src/main/java/org/thoughtcrime/securesms/logsubmit/SubmitDebugLogViewModel.java\nindex fc12ded..3d6ae39 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/logsubmit/SubmitDebugLogViewModel.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/logsubmit/SubmitDebugLogViewModel.java\n@@ -20,14 +20,14 @@\n \n   private final SubmitDebugLogRepository            repo;\n   private final DefaultValueLiveData\u003cList\u003cLogLine\u003e\u003e lines;\n-  private final DefaultValueLiveData\u003cMode\u003e          mode;\n+  private final MutableLiveData\u003cMode\u003e               mode;\n \n   private List\u003cLogLine\u003e sourceLines;\n \n   private SubmitDebugLogViewModel() {\n     this.repo  \u003d new SubmitDebugLogRepository();\n     this.lines \u003d new DefaultValueLiveData\u003c\u003e(Collections.emptyList());\n-    this.mode  \u003d new DefaultValueLiveData\u003c\u003e(Mode.NORMAL);\n+    this.mode  \u003d new MutableLiveData\u003c\u003e();\n \n     repo.getLogLines(result -\u003e {\n       sourceLines \u003d result;\n@@ -94,7 +94,7 @@\n   }\n \n   boolean onBackPressed() {\n-    if (mode.getValue().equals(Mode.EDIT)) {\n+    if (mode.getValue() \u003d\u003d Mode.EDIT) {\n       mode.setValue(Mode.NORMAL);\n       return true;\n     } else {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 23,
    "bugNodeStartChar": 676,
    "bugNodeLength": 26,
    "fixLineNum": 23,
    "fixNodeStartChar": 676,
    "fixNodeLength": 21,
    "sourceBeforeFix": "DefaultValueLiveData\u003cMode\u003e",
    "sourceAfterFix": "MutableLiveData\u003cMode\u003e"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "6c01807f4f02774912047a587027750d66c7ce01",
    "fixCommitParentSHA1": "9d35fb397b17b4cbf5046a5e82056fbaa16f775c",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/lock/SignalPinReminderDialog.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/lock/SignalPinReminderDialog.java b/app/src/main/java/org/thoughtcrime/securesms/lock/SignalPinReminderDialog.java\nindex 7c2561e..56c3c75 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/lock/SignalPinReminderDialog.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/lock/SignalPinReminderDialog.java\n@@ -99,8 +99,7 @@\n     reminder.setMovementMethod(LinkMovementMethod.getInstance());\n \n     PinVerifier.Callback callback \u003d getPinWatcherCallback(context, dialog, pinEditText, pinStatus, mainCallback);\n-    PinVerifier          verifier \u003d SignalStore.kbsValues().isV2RegistrationLockEnabled()\n-                                    ? new V2PinVerifier()\n+    PinVerifier          verifier \u003d SignalStore.kbsValues().hasPin() ? new V2PinVerifier()\n                                     : new V1PinVerifier(context);\n \n     skip.setOnClickListener(v -\u003e {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 102,
    "bugNodeStartChar": 4732,
    "bugNodeLength": 53,
    "fixLineNum": 102,
    "fixNodeStartChar": 4732,
    "fixNodeLength": 32,
    "sourceBeforeFix": "SignalStore.kbsValues().isV2RegistrationLockEnabled()",
    "sourceAfterFix": "SignalStore.kbsValues().hasPin()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "6c01807f4f02774912047a587027750d66c7ce01",
    "fixCommitParentSHA1": "9d35fb397b17b4cbf5046a5e82056fbaa16f775c",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/lock/SignalPinReminderDialog.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/lock/SignalPinReminderDialog.java b/app/src/main/java/org/thoughtcrime/securesms/lock/SignalPinReminderDialog.java\nindex 7c2561e..56c3c75 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/lock/SignalPinReminderDialog.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/lock/SignalPinReminderDialog.java\n@@ -99,8 +99,7 @@\n     reminder.setMovementMethod(LinkMovementMethod.getInstance());\n \n     PinVerifier.Callback callback \u003d getPinWatcherCallback(context, dialog, pinEditText, pinStatus, mainCallback);\n-    PinVerifier          verifier \u003d SignalStore.kbsValues().isV2RegistrationLockEnabled()\n-                                    ? new V2PinVerifier()\n+    PinVerifier          verifier \u003d SignalStore.kbsValues().hasPin() ? new V2PinVerifier()\n                                     : new V1PinVerifier(context);\n \n     skip.setOnClickListener(v -\u003e {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 102,
    "bugNodeStartChar": 4732,
    "bugNodeLength": 53,
    "fixLineNum": 102,
    "fixNodeStartChar": 4732,
    "fixNodeLength": 32,
    "sourceBeforeFix": "SignalStore.kbsValues().isV2RegistrationLockEnabled()",
    "sourceAfterFix": "SignalStore.kbsValues().hasPin()"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "39f4102e81ce2157a8cab4d031f75c34a71a252e",
    "fixCommitParentSHA1": "4fcd6b15ed066a4152614af586bf1c28ba7c6d00",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/util/MessageRecordUtil.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/util/MessageRecordUtil.java b/app/src/main/java/org/thoughtcrime/securesms/util/MessageRecordUtil.java\nindex e721de5..c949ec0 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/util/MessageRecordUtil.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/util/MessageRecordUtil.java\n@@ -30,7 +30,7 @@\n   }\n \n   public static boolean hasLocation(@NonNull MessageRecord messageRecord) {\n-    return messageRecord.isMms() \u0026\u0026 !Stream.of(((MmsMessageRecord) messageRecord).getSlideDeck().getSlides())\n+    return messageRecord.isMms() \u0026\u0026 Stream.of(((MmsMessageRecord) messageRecord).getSlideDeck().getSlides())\n                                            .anyMatch(Slide::hasLocation);\n   }\n }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 33,
    "bugNodeStartChar": 1318,
    "bugNodeLength": 146,
    "fixLineNum": 33,
    "fixNodeStartChar": 1318,
    "fixNodeLength": 145,
    "sourceBeforeFix": "!Stream.of(((MmsMessageRecord)messageRecord).getSlideDeck().getSlides()).anyMatch(Slide::hasLocation)",
    "sourceAfterFix": "Stream.of(((MmsMessageRecord)messageRecord).getSlideDeck().getSlides()).anyMatch(Slide::hasLocation)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "8f9ed4bc40779b9c86b4b8a0598ee6e46430a276",
    "fixCommitParentSHA1": "73dedd79d2b87550291524561db86c508da59f21",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/reactions/ReactionsConversationView.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/reactions/ReactionsConversationView.java b/app/src/main/java/org/thoughtcrime/securesms/reactions/ReactionsConversationView.java\nindex a0d73e1..56c3ed5 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/reactions/ReactionsConversationView.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/reactions/ReactionsConversationView.java\n@@ -29,7 +29,8 @@\n \n public class ReactionsConversationView extends LinearLayout {\n \n-  private static final int OUTER_MARGIN \u003d ViewUtil.dpToPx(6);\n+  // Normally 6dp, but we have 1dp left+right margin on the pills themselves\n+  private static final int OUTER_MARGIN \u003d ViewUtil.dpToPx(5);\n \n   private boolean              outgoing;\n   private List\u003cReactionRecord\u003e records;\n",
    "projectName": "Signal-Android",
    "bugLineNum": 32,
    "bugNodeStartChar": 980,
    "bugNodeLength": 18,
    "fixLineNum": 33,
    "fixNodeStartChar": 1057,
    "fixNodeLength": 18,
    "sourceBeforeFix": "ViewUtil.dpToPx(6)",
    "sourceAfterFix": "ViewUtil.dpToPx(5)"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "73dedd79d2b87550291524561db86c508da59f21",
    "fixCommitParentSHA1": "2754b397d56f0e553e88f1d80c9c5e7102537d42",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java\nindex cbe614a..7b3065d 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/conversation/ConversationReactionOverlay.java\n@@ -539,7 +539,7 @@\n     }\n \n     private void update(float min, float max) {\n-      Preconditions.checkArgument(min \u003c max, \"Min must be less than max\");\n+      Preconditions.checkArgument(min \u003c\u003d max, \"Min must be less than max\");\n       this.min \u003d min;\n       this.max \u003d max;\n     }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 542,
    "bugNodeStartChar": 20200,
    "bugNodeLength": 9,
    "fixLineNum": 542,
    "fixNodeStartChar": 20200,
    "fixNodeLength": 10,
    "sourceBeforeFix": "min \u003c max",
    "sourceAfterFix": "min \u003c\u003d max"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "6465248483a754b97ab37f736a788940146cfdc0",
    "fixCommitParentSHA1": "48e7f82466a2b3fb62cf6361c8127591bbf15c92",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/megaphone/Megaphone.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/megaphone/Megaphone.java b/app/src/main/java/org/thoughtcrime/securesms/megaphone/Megaphone.java\nindex 4bf7092..5c355e4 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/megaphone/Megaphone.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/megaphone/Megaphone.java\n@@ -75,7 +75,7 @@\n   }\n \n   public @Nullable EventListener getSnoozeListener() {\n-    return buttonListener;\n+    return snoozeListener;\n   }\n \n   public @Nullable EventListener getOnVisibleListener() {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 78,
    "bugNodeStartChar": 2064,
    "bugNodeLength": 22,
    "fixLineNum": 78,
    "fixNodeStartChar": 2064,
    "fixNodeLength": 22,
    "sourceBeforeFix": "return buttonListener; ",
    "sourceAfterFix": "return snoozeListener; "
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "8f031f61eab7d96bc6f20afca5bd0a34afcde060",
    "fixCommitParentSHA1": "502e8559f0d255ed4a530788ddfc249ee8a3f691",
    "bugFilePath": "app/src/main/java/org/thoughtcrime/securesms/util/GroupUtil.java",
    "fixPatch": "diff --git a/app/src/main/java/org/thoughtcrime/securesms/util/GroupUtil.java b/app/src/main/java/org/thoughtcrime/securesms/util/GroupUtil.java\nindex cd79c47..b4a8e55 100644\n--- a/app/src/main/java/org/thoughtcrime/securesms/util/GroupUtil.java\n+++ b/app/src/main/java/org/thoughtcrime/securesms/util/GroupUtil.java\n@@ -128,7 +128,7 @@\n \n       String title \u003d groupContext.getName();\n \n-      if (members !\u003d null) {\n+      if (members !\u003d null \u0026\u0026 members.size() \u003e 0) {\n         description.append(\"\\n\");\n         description.append(context.getResources().getQuantityString(R.plurals.GroupUtil_joined_the_group,\n                                                                     members.size(), toString(members)));\n",
    "projectName": "Signal-Android",
    "bugLineNum": 131,
    "bugNodeStartChar": 4922,
    "bugNodeLength": 15,
    "fixLineNum": 131,
    "fixNodeStartChar": 4922,
    "fixNodeLength": 37,
    "sourceBeforeFix": "members !\u003d null",
    "sourceAfterFix": "members !\u003d null \u0026\u0026 members.size() \u003e 0"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "9c872b6da62b9e17e59e8a1bcc0baeb1a0f42ec8",
    "fixCommitParentSHA1": "2924a0993665e70896b2b21bb9e844b871c41af7",
    "bugFilePath": "src/org/thoughtcrime/securesms/recipients/LiveRecipient.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/recipients/LiveRecipient.java b/src/org/thoughtcrime/securesms/recipients/LiveRecipient.java\nindex d5a9eea..abfa5ee 100644\n--- a/src/org/thoughtcrime/securesms/recipients/LiveRecipient.java\n+++ b/src/org/thoughtcrime/securesms/recipients/LiveRecipient.java\n@@ -193,7 +193,7 @@\n       List\u003cRecipient\u003e members  \u003d Stream.of(groupRecord.get().getMembers()).filterNot(RecipientId::isUnknown).map(this::fetchRecipientFromDisk).toList();\n       Optional\u003cLong\u003e  avatarId \u003d Optional.absent();\n \n-      if (settings.getGroupId() !\u003d null \u0026\u0026 GroupUtil.isMmsGroup(settings.getGroupId()) \u0026\u0026 title \u003d\u003d null) {\n+      if (settings.getGroupId() !\u003d null \u0026\u0026 !GroupUtil.isMmsGroup(settings.getGroupId()) \u0026\u0026 title \u003d\u003d null) {\n         title \u003d unnamedGroupName;\n       }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 196,
    "bugNodeStartChar": 7490,
    "bugNodeLength": 43,
    "fixLineNum": 196,
    "fixNodeStartChar": 7490,
    "fixNodeLength": 44,
    "sourceBeforeFix": "GroupUtil.isMmsGroup(settings.getGroupId())",
    "sourceAfterFix": "!GroupUtil.isMmsGroup(settings.getGroupId())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2bc3a4417f389b840f47a265c8f030709675c015",
    "fixCommitParentSHA1": "59d03cbeb2e3f6cfb4bf3ef71721e57c9e5dbcb7",
    "bugFilePath": "src/org/thoughtcrime/securesms/util/MediaUtil.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/util/MediaUtil.java b/src/org/thoughtcrime/securesms/util/MediaUtil.java\nindex 2a77cc1..588e69a 100644\n--- a/src/org/thoughtcrime/securesms/util/MediaUtil.java\n+++ b/src/org/thoughtcrime/securesms/util/MediaUtil.java\n@@ -302,7 +302,7 @@\n \n         mediaMetadataRetriever.setDataSource(mediaDataSource);\n         return mediaMetadataRetriever.getFrameAtTime(1000);\n-      } catch (IOException e) {\n+      } catch (Exception e) { // XXX Some devices are hitting a native crash in setDataSource. Not much we can do.\n         Log.w(TAG, \"failed to get thumbnail for video blob uri: \" + uri, e);\n         return null;\n       }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 305,
    "bugNodeStartChar": 11790,
    "bugNodeLength": 13,
    "fixLineNum": 305,
    "fixNodeStartChar": 11790,
    "fixNodeLength": 11,
    "sourceBeforeFix": "IOException e",
    "sourceAfterFix": "Exception e"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "d70d82c5eab2759d964bc39761f888e15541c003",
    "fixCommitParentSHA1": "29b9d3f902cfc33ed9a3893accfb86e428781105",
    "bugFilePath": "src/org/thoughtcrime/securesms/mediapreview/ImageMediaPreviewFragment.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/mediapreview/ImageMediaPreviewFragment.java b/src/org/thoughtcrime/securesms/mediapreview/ImageMediaPreviewFragment.java\nindex 1c0dc59..bb38d80 100644\n--- a/src/org/thoughtcrime/securesms/mediapreview/ImageMediaPreviewFragment.java\n+++ b/src/org/thoughtcrime/securesms/mediapreview/ImageMediaPreviewFragment.java\n@@ -14,7 +14,7 @@\n import org.thoughtcrime.securesms.mms.GlideRequests;\n import org.thoughtcrime.securesms.util.MediaUtil;\n \n-final class ImageMediaPreviewFragment extends MediaPreviewFragment {\n+public final class ImageMediaPreviewFragment extends MediaPreviewFragment {\n \n   @Override\n   public void onCreate(@Nullable Bundle savedInstanceState) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 17,
    "bugNodeStartChar": 484,
    "bugNodeLength": 1095,
    "fixLineNum": 17,
    "fixNodeStartChar": 484,
    "fixNodeLength": 1102,
    "sourceBeforeFix": "16",
    "sourceAfterFix": "17"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "d70d82c5eab2759d964bc39761f888e15541c003",
    "fixCommitParentSHA1": "29b9d3f902cfc33ed9a3893accfb86e428781105",
    "bugFilePath": "src/org/thoughtcrime/securesms/mediapreview/VideoMediaPreviewFragment.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/mediapreview/VideoMediaPreviewFragment.java b/src/org/thoughtcrime/securesms/mediapreview/VideoMediaPreviewFragment.java\nindex bfebc62..4e4067c 100644\n--- a/src/org/thoughtcrime/securesms/mediapreview/VideoMediaPreviewFragment.java\n+++ b/src/org/thoughtcrime/securesms/mediapreview/VideoMediaPreviewFragment.java\n@@ -16,7 +16,7 @@\n \n import java.io.IOException;\n \n-final class VideoMediaPreviewFragment extends MediaPreviewFragment {\n+public final class VideoMediaPreviewFragment extends MediaPreviewFragment {\n \n   private static final String TAG \u003d Log.tag(VideoMediaPreviewFragment.class);\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 19,
    "bugNodeStartChar": 499,
    "bugNodeLength": 1572,
    "fixLineNum": 19,
    "fixNodeStartChar": 499,
    "fixNodeLength": 1579,
    "sourceBeforeFix": "16",
    "sourceAfterFix": "17"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "a8dbfd812da95c59a15aefe6541991258006510f",
    "fixCommitParentSHA1": "ff3890cc123b365589de70ae091ef478ac9f81d9",
    "bugFilePath": "src/org/thoughtcrime/securesms/mediasend/camerax/CameraXModule.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/mediasend/camerax/CameraXModule.java b/src/org/thoughtcrime/securesms/mediasend/camerax/CameraXModule.java\nindex 48f1f1b..e486a50 100644\n--- a/src/org/thoughtcrime/securesms/mediasend/camerax/CameraXModule.java\n+++ b/src/org/thoughtcrime/securesms/mediasend/camerax/CameraXModule.java\n@@ -243,7 +243,7 @@\n     mImageCaptureConfigBuilder.setTargetRotation(getDisplaySurfaceRotation());\n     mImageCaptureConfigBuilder.setLensFacing(mCameraLensFacing);\n     mImageCaptureConfigBuilder.setCaptureMode(CameraXUtil.getOptimalCaptureMode());\n-    mImageCaptureConfigBuilder.setTargetResolution(new Size(1920, 1080));\n+    mImageCaptureConfigBuilder.setTargetResolution(new Size(1920, 1920));\n     mImageCapture \u003d new ImageCapture(mImageCaptureConfigBuilder.build());\n \n     mVideoCaptureConfigBuilder.setTargetRotation(getDisplaySurfaceRotation());\n",
    "projectName": "Signal-Android",
    "bugLineNum": 246,
    "bugNodeStartChar": 9375,
    "bugNodeLength": 20,
    "fixLineNum": 246,
    "fixNodeStartChar": 9375,
    "fixNodeLength": 20,
    "sourceBeforeFix": "new Size(1920,1080)",
    "sourceAfterFix": "new Size(1920,1920)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "ae784db80dd2e0890921a1cda7be07278243f1c4",
    "fixCommitParentSHA1": "f5cbf64ccfd65c5f230dfc8748c562f4c0359db3",
    "bugFilePath": "src/org/thoughtcrime/securesms/service/WebRtcCallService.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/service/WebRtcCallService.java b/src/org/thoughtcrime/securesms/service/WebRtcCallService.java\nindex 1ded85c..173e027 100644\n--- a/src/org/thoughtcrime/securesms/service/WebRtcCallService.java\n+++ b/src/org/thoughtcrime/securesms/service/WebRtcCallService.java\n@@ -735,7 +735,7 @@\n     DatabaseFactory.getSmsDatabase(this).insertReceivedCall(recipient.getAddress());\n \n     this.peerConnection.setAudioEnabled(true);\n-    this.peerConnection.setVideoEnabled(true);\n+    this.peerConnection.setVideoEnabled(false);\n     this.dataChannel.send(new DataChannel.Buffer(ByteBuffer.wrap(Data.newBuilder().setConnected(Connected.newBuilder().setId(this.callId)).build().toByteArray()), false));\n \n     intent.putExtra(EXTRA_CALL_ID, callId);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 738,
    "bugNodeStartChar": 34333,
    "bugNodeLength": 41,
    "fixLineNum": 738,
    "fixNodeStartChar": 34333,
    "fixNodeLength": 42,
    "sourceBeforeFix": "this.peerConnection.setVideoEnabled(true)",
    "sourceAfterFix": "this.peerConnection.setVideoEnabled(false)"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "c646316a974b59ba6e1b79ac409983b2230506e0",
    "fixCommitParentSHA1": "6df8988f547a9a06c74e14158d9b473b9d5f3403",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\nindex 4c9455d..13e3d77 100644\n--- a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n@@ -1156,7 +1156,7 @@\n       } else {\n         return sender.isBlocked();\n       }\n-    } else if (content.getCallMessage().isPresent()) {\n+    } else if (content.getCallMessage().isPresent() || content.getTypingMessage().isPresent()) {\n       return sender.isBlocked();\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 1159,
    "bugNodeStartChar": 59198,
    "bugNodeLength": 36,
    "fixLineNum": 1159,
    "fixNodeStartChar": 59198,
    "fixNodeLength": 78,
    "sourceBeforeFix": "content.getCallMessage().isPresent()",
    "sourceAfterFix": "content.getCallMessage().isPresent() || content.getTypingMessage().isPresent()"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "94e8553b736cf03c94d55b683861949e412f9c70",
    "fixCommitParentSHA1": "351b625975d51263827587fb4f6b7529dc10e3c3",
    "bugFilePath": "src/org/thoughtcrime/securesms/conversation/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/conversation/ConversationActivity.java b/src/org/thoughtcrime/securesms/conversation/ConversationActivity.java\nindex d07efde..998d08f 100644\n--- a/src/org/thoughtcrime/securesms/conversation/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/conversation/ConversationActivity.java\n@@ -1671,7 +1671,7 @@\n       updateDefaultSubscriptionId(recipient.getDefaultSubscriptionId());\n       initializeSecurity(isSecureText, isDefaultSms);\n \n-      if (!searchViewItem.isActionViewExpanded()) {\n+      if (searchViewItem \u003d\u003d null || !searchViewItem.isActionViewExpanded()) {\n         invalidateOptionsMenu();\n       }\n     });\n",
    "projectName": "Signal-Android",
    "bugLineNum": 1674,
    "bugNodeStartChar": 70495,
    "bugNodeLength": 38,
    "fixLineNum": 1674,
    "fixNodeStartChar": 70495,
    "fixNodeLength": 64,
    "sourceBeforeFix": "!searchViewItem.isActionViewExpanded()",
    "sourceAfterFix": "searchViewItem \u003d\u003d null || !searchViewItem.isActionViewExpanded()"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "8a1a47e7736e311d679c38cdfb1417e17e420bd0",
    "fixCommitParentSHA1": "193d82789f29dc2b6b15a68d4f03e50aed7915ec",
    "bugFilePath": "src/org/thoughtcrime/securesms/MediaPreviewActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/MediaPreviewActivity.java b/src/org/thoughtcrime/securesms/MediaPreviewActivity.java\nindex 9af32fe..af002c0 100644\n--- a/src/org/thoughtcrime/securesms/MediaPreviewActivity.java\n+++ b/src/org/thoughtcrime/securesms/MediaPreviewActivity.java\n@@ -241,7 +241,7 @@\n \n   private void initializeObservers() {\n     viewModel.getPreviewData().observe(this, previewData -\u003e {\n-      if (previewData \u003d\u003d null) {\n+      if (previewData \u003d\u003d null || mediaPager \u003d\u003d null || mediaPager.getAdapter() \u003d\u003d null) {\n         return;\n       }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 244,
    "bugNodeStartChar": 9262,
    "bugNodeLength": 19,
    "fixLineNum": 244,
    "fixNodeStartChar": 9262,
    "fixNodeLength": 76,
    "sourceBeforeFix": "previewData \u003d\u003d null",
    "sourceAfterFix": "previewData \u003d\u003d null || mediaPager \u003d\u003d null || mediaPager.getAdapter() \u003d\u003d null"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "8a1a47e7736e311d679c38cdfb1417e17e420bd0",
    "fixCommitParentSHA1": "193d82789f29dc2b6b15a68d4f03e50aed7915ec",
    "bugFilePath": "src/org/thoughtcrime/securesms/MediaPreviewActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/MediaPreviewActivity.java b/src/org/thoughtcrime/securesms/MediaPreviewActivity.java\nindex 9af32fe..af002c0 100644\n--- a/src/org/thoughtcrime/securesms/MediaPreviewActivity.java\n+++ b/src/org/thoughtcrime/securesms/MediaPreviewActivity.java\n@@ -241,7 +241,7 @@\n \n   private void initializeObservers() {\n     viewModel.getPreviewData().observe(this, previewData -\u003e {\n-      if (previewData \u003d\u003d null) {\n+      if (previewData \u003d\u003d null || mediaPager \u003d\u003d null || mediaPager.getAdapter() \u003d\u003d null) {\n         return;\n       }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 244,
    "bugNodeStartChar": 9262,
    "bugNodeLength": 19,
    "fixLineNum": 244,
    "fixNodeStartChar": 9262,
    "fixNodeLength": 76,
    "sourceBeforeFix": "previewData \u003d\u003d null",
    "sourceAfterFix": "previewData \u003d\u003d null || mediaPager \u003d\u003d null || mediaPager.getAdapter() \u003d\u003d null"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "787bcf77528f42e7b86d194b9365febb39a8b5ed",
    "fixCommitParentSHA1": "8c3d50c6dc57abc513efbae6b73063be8103daa0",
    "bugFilePath": "src/org/thoughtcrime/securesms/backup/FullBackupImporter.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/backup/FullBackupImporter.java b/src/org/thoughtcrime/securesms/backup/FullBackupImporter.java\nindex 206806d..77ec1f5 100644\n--- a/src/org/thoughtcrime/securesms/backup/FullBackupImporter.java\n+++ b/src/org/thoughtcrime/securesms/backup/FullBackupImporter.java\n@@ -283,7 +283,7 @@\n \n         out.close();\n \n-        byte[] ourMac   \u003d mac.doFinal();\n+        byte[] ourMac   \u003d ByteUtil.trim(mac.doFinal(), 10);\n         byte[] theirMac \u003d new byte[10];\n \n         try {\n@@ -293,7 +293,7 @@\n           throw new IOException(e);\n         }\n \n-        if (MessageDigest.isEqual(ourMac, theirMac)) {\n+        if (!MessageDigest.isEqual(ourMac, theirMac)) {\n           //destination.delete();\n           throw new IOException(\"Bad MAC\");\n         }\n@@ -314,9 +314,9 @@\n         System.arraycopy(frame, frame.length - 10, theirMac, 0, theirMac.length);\n \n         mac.update(frame, 0, frame.length - 10);\n-        byte[] ourMac \u003d mac.doFinal();\n+        byte[] ourMac \u003d ByteUtil.trim(mac.doFinal(), 10);\n \n-        if (MessageDigest.isEqual(ourMac, theirMac)) {\n+        if (!MessageDigest.isEqual(ourMac, theirMac)) {\n           throw new IOException(\"Bad MAC\");\n         }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 296,
    "bugNodeStartChar": 11967,
    "bugNodeLength": 39,
    "fixLineNum": 296,
    "fixNodeStartChar": 11967,
    "fixNodeLength": 40,
    "sourceBeforeFix": "MessageDigest.isEqual(ourMac,theirMac)",
    "sourceAfterFix": "!MessageDigest.isEqual(ourMac,theirMac)"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "787bcf77528f42e7b86d194b9365febb39a8b5ed",
    "fixCommitParentSHA1": "8c3d50c6dc57abc513efbae6b73063be8103daa0",
    "bugFilePath": "src/org/thoughtcrime/securesms/backup/FullBackupImporter.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/backup/FullBackupImporter.java b/src/org/thoughtcrime/securesms/backup/FullBackupImporter.java\nindex 206806d..77ec1f5 100644\n--- a/src/org/thoughtcrime/securesms/backup/FullBackupImporter.java\n+++ b/src/org/thoughtcrime/securesms/backup/FullBackupImporter.java\n@@ -283,7 +283,7 @@\n \n         out.close();\n \n-        byte[] ourMac   \u003d mac.doFinal();\n+        byte[] ourMac   \u003d ByteUtil.trim(mac.doFinal(), 10);\n         byte[] theirMac \u003d new byte[10];\n \n         try {\n@@ -293,7 +293,7 @@\n           throw new IOException(e);\n         }\n \n-        if (MessageDigest.isEqual(ourMac, theirMac)) {\n+        if (!MessageDigest.isEqual(ourMac, theirMac)) {\n           //destination.delete();\n           throw new IOException(\"Bad MAC\");\n         }\n@@ -314,9 +314,9 @@\n         System.arraycopy(frame, frame.length - 10, theirMac, 0, theirMac.length);\n \n         mac.update(frame, 0, frame.length - 10);\n-        byte[] ourMac \u003d mac.doFinal();\n+        byte[] ourMac \u003d ByteUtil.trim(mac.doFinal(), 10);\n \n-        if (MessageDigest.isEqual(ourMac, theirMac)) {\n+        if (!MessageDigest.isEqual(ourMac, theirMac)) {\n           throw new IOException(\"Bad MAC\");\n         }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 319,
    "bugNodeStartChar": 12763,
    "bugNodeLength": 39,
    "fixLineNum": 319,
    "fixNodeStartChar": 12763,
    "fixNodeLength": 40,
    "sourceBeforeFix": "MessageDigest.isEqual(ourMac,theirMac)",
    "sourceAfterFix": "!MessageDigest.isEqual(ourMac,theirMac)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0dd7b39bb1636ed7ec9fc38e9df77a580d177551",
    "fixCommitParentSHA1": "4a0ea0c51c036b5c55a8e8e1e459d6bcadbd2be6",
    "bugFilePath": "src/org/thoughtcrime/securesms/RecipientPreferenceActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/RecipientPreferenceActivity.java b/src/org/thoughtcrime/securesms/RecipientPreferenceActivity.java\nindex cb58a0e..7d82177 100644\n--- a/src/org/thoughtcrime/securesms/RecipientPreferenceActivity.java\n+++ b/src/org/thoughtcrime/securesms/RecipientPreferenceActivity.java\n@@ -282,7 +282,7 @@\n               db.setMessageVibrate(recipient, NotificationChannels.getMessageVibrate(context, recipient) ? VibrateState.ENABLED : VibrateState.DISABLED);\n               return null;\n             }\n-          }.execute();\n+          }.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);\n         }\n       } else {\n         customNotificationsPref.setVisible(false);\n@@ -493,7 +493,7 @@\n             }\n             return null;\n           }\n-        }.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, value);\n+        }.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR, value);\n \n         return false;\n       }\n@@ -562,7 +562,7 @@\n             }\n             return null;\n           }\n-        }.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);\n+        }.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);\n \n         return false;\n       }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 277,
    "bugNodeStartChar": 12147,
    "bugNodeLength": 531,
    "fixLineNum": 277,
    "fixNodeStartChar": 12147,
    "fixNodeLength": 566,
    "sourceBeforeFix": "new AsyncTask\u003cVoid,Void,Void\u003e(){   @Override protected Void doInBackground(  Void... voids){     RecipientDatabase db\u003dDatabaseFactory.getRecipientDatabase(getContext());     db.setMessageRingtone(recipient,NotificationChannels.getMessageRingtone(context,recipient));     db.setMessageVibrate(recipient,NotificationChannels.getMessageVibrate(context,recipient) ? VibrateState.ENABLED : VibrateState.DISABLED);     return null;   } } .execute()",
    "sourceAfterFix": "new AsyncTask\u003cVoid,Void,Void\u003e(){   @Override protected Void doInBackground(  Void... voids){     RecipientDatabase db\u003dDatabaseFactory.getRecipientDatabase(getContext());     db.setMessageRingtone(recipient,NotificationChannels.getMessageRingtone(context,recipient));     db.setMessageVibrate(recipient,NotificationChannels.getMessageVibrate(context,recipient) ? VibrateState.ENABLED : VibrateState.DISABLED);     return null;   } } .executeOnExecutor(AsyncTask.SERIAL_EXECUTOR)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "0d48f10806aabe9bbf9c87109d6cc14373658e5c",
    "fixCommitParentSHA1": "275ca9e3baabdfa42d5bfd4789ab452429f9885f",
    "bugFilePath": "src/org/thoughtcrime/securesms/ApplicationContext.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ApplicationContext.java b/src/org/thoughtcrime/securesms/ApplicationContext.java\nindex 68a515a..9be8ded 100644\n--- a/src/org/thoughtcrime/securesms/ApplicationContext.java\n+++ b/src/org/thoughtcrime/securesms/ApplicationContext.java\n@@ -265,7 +265,7 @@\n   private void initializePendingMessages() {\n     if (TextSecurePreferences.getNeedsMessagePull(this)) {\n       Log.i(TAG, \"Scheduling a message fetch.\");\n-      ApplicationContext.getInstance(this).getJobManager().add(new PushNotificationReceiveJob());\n+      ApplicationContext.getInstance(this).getJobManager().add(new PushNotificationReceiveJob(this));\n       TextSecurePreferences.setNeedsMessagePull(this, false);\n     }\n   }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 268,
    "bugNodeStartChar": 9580,
    "bugNodeLength": 32,
    "fixLineNum": 268,
    "fixNodeStartChar": 9580,
    "fixNodeLength": 36,
    "sourceBeforeFix": "new PushNotificationReceiveJob()",
    "sourceAfterFix": "new PushNotificationReceiveJob(this)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "f26c6f890f33ea9c215f3403ca3aac6d68e88cc9",
    "fixCommitParentSHA1": "eb11d5ceda822e30efa44ecf3952a1b24c27e648",
    "bugFilePath": "src/org/thoughtcrime/securesms/recipients/Recipient.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/recipients/Recipient.java b/src/org/thoughtcrime/securesms/recipients/Recipient.java\nindex 602b5b9..4eeeb7a 100644\n--- a/src/org/thoughtcrime/securesms/recipients/Recipient.java\n+++ b/src/org/thoughtcrime/securesms/recipients/Recipient.java\n@@ -426,7 +426,7 @@\n     if      (isResolving())            return new TransparentContactPhoto();\n     else if (isGroupRecipient())       return new ResourceContactPhoto(R.drawable.ic_group_white_24dp, R.drawable.ic_group_large);\n     else if (!TextUtils.isEmpty(name)) return new GeneratedContactPhoto(name, R.drawable.ic_profile_default);\n-    else                               return new ResourceContactPhoto(R.drawable.ic_profile_default);\n+    else                               return new ResourceContactPhoto(R.drawable.ic_profile_default, R.drawable.ic_person_large);\n   }\n \n   public synchronized @Nullable ContactPhoto getContactPhoto() {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 429,
    "bugNodeStartChar": 16885,
    "bugNodeLength": 55,
    "fixLineNum": 429,
    "fixNodeStartChar": 16885,
    "fixNodeLength": 83,
    "sourceBeforeFix": "new ResourceContactPhoto(R.drawable.ic_profile_default)",
    "sourceAfterFix": "new ResourceContactPhoto(R.drawable.ic_profile_default,R.drawable.ic_person_large)"
  },
  {
    "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
    "fixCommitSHA1": "1d7f7b6c382601aeb3de300d4236e10d3fc87d70",
    "fixCommitParentSHA1": "07d7af6e75da45936a4dd1eb9aa055f74a358cd9",
    "bugFilePath": "src/org/thoughtcrime/securesms/contacts/avatars/ContactColors.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/contacts/avatars/ContactColors.java b/src/org/thoughtcrime/securesms/contacts/avatars/ContactColors.java\nindex 12c1153..2a115c5 100644\n--- a/src/org/thoughtcrime/securesms/contacts/avatars/ContactColors.java\n+++ b/src/org/thoughtcrime/securesms/contacts/avatars/ContactColors.java\n@@ -24,8 +24,7 @@\n       MaterialColor.WINTERGREEN,\n       MaterialColor.TEAL,\n       MaterialColor.BURLAP,\n-      MaterialColor.TAUPE,\n-      MaterialColor.STEEL\n+      MaterialColor.TAUPE\n   ));\n \n   public static MaterialColor generateFor(@NonNull String name) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 16,
    "bugNodeStartChar": 473,
    "bugNodeLength": 355,
    "fixLineNum": 16,
    "fixNodeStartChar": 473,
    "fixNodeLength": 328,
    "sourceBeforeFix": "Arrays.asList(MaterialColor.PLUM,MaterialColor.CRIMSON,MaterialColor.VERMILLION,MaterialColor.VIOLET,MaterialColor.BLUE,MaterialColor.INDIGO,MaterialColor.FOREST,MaterialColor.WINTERGREEN,MaterialColor.TEAL,MaterialColor.BURLAP,MaterialColor.TAUPE,MaterialColor.STEEL)",
    "sourceAfterFix": "Arrays.asList(MaterialColor.PLUM,MaterialColor.CRIMSON,MaterialColor.VERMILLION,MaterialColor.VIOLET,MaterialColor.BLUE,MaterialColor.INDIGO,MaterialColor.FOREST,MaterialColor.WINTERGREEN,MaterialColor.TEAL,MaterialColor.BURLAP,MaterialColor.TAUPE)"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "a1b2887bf3cc18d5c21c61be92db1a58128dbde9",
    "fixCommitParentSHA1": "da60cac833c374e8c2f7affe63008b56466c28bd",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationFragment.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationFragment.java b/src/org/thoughtcrime/securesms/ConversationFragment.java\nindex 96a7b46..4c5069f 100644\n--- a/src/org/thoughtcrime/securesms/ConversationFragment.java\n+++ b/src/org/thoughtcrime/securesms/ConversationFragment.java\n@@ -465,7 +465,7 @@\n \n     int limit  \u003d args.getInt(KEY_LIMIT, PARTIAL_CONVERSATION_LIMIT);\n     int offset \u003d 0;\n-    if (limit !\u003d 0 \u0026\u0026 startingPosition \u003e limit) {\n+    if (limit !\u003d 0 \u0026\u0026 startingPosition \u003e\u003d limit) {\n       offset \u003d Math.max(startingPosition - (limit / 2) + 1, 0);\n       startingPosition -\u003d offset - 1;\n     }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 468,
    "bugNodeStartChar": 19609,
    "bugNodeLength": 24,
    "fixLineNum": 468,
    "fixNodeStartChar": 19609,
    "fixNodeLength": 25,
    "sourceBeforeFix": "startingPosition \u003e limit",
    "sourceAfterFix": "startingPosition \u003e\u003d limit"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "d581525a6179e645c36ed313a29a9996c2306ecd",
    "fixCommitParentSHA1": "f9adb4e4554a44fd65b77320e34bf4bccf7924ce",
    "bugFilePath": "src/org/thoughtcrime/securesms/logging/LogSecretProvider.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/logging/LogSecretProvider.java b/src/org/thoughtcrime/securesms/logging/LogSecretProvider.java\nindex 8566a0e..e180a08 100644\n--- a/src/org/thoughtcrime/securesms/logging/LogSecretProvider.java\n+++ b/src/org/thoughtcrime/securesms/logging/LogSecretProvider.java\n@@ -31,7 +31,7 @@\n   }\n \n   private static byte[] parseEncryptedSecret(String secret) {\n-    if (Build.VERSION.SDK_INT \u003e Build.VERSION_CODES.M) {\n+    if (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.M) {\n       KeyStoreHelper.SealedData encryptedSecret \u003d KeyStoreHelper.SealedData.fromString(secret);\n       return KeyStoreHelper.unseal(encryptedSecret);\n     } else {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 34,
    "bugNodeStartChar": 1204,
    "bugNodeLength": 45,
    "fixLineNum": 34,
    "fixNodeStartChar": 1204,
    "fixNodeLength": 46,
    "sourceBeforeFix": "Build.VERSION.SDK_INT \u003e Build.VERSION_CODES.M",
    "sourceAfterFix": "Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.M"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c7066c07969080d666a947766708fbdd96459402",
    "fixCommitParentSHA1": "69ea116b2b65b2f8e54cadf6045866f6825cff07",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationFragment.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationFragment.java b/src/org/thoughtcrime/securesms/ConversationFragment.java\nindex 6361353..39d0486 100644\n--- a/src/org/thoughtcrime/securesms/ConversationFragment.java\n+++ b/src/org/thoughtcrime/securesms/ConversationFragment.java\n@@ -399,7 +399,7 @@\n     Intent composeIntent \u003d new Intent(getActivity(), ShareActivity.class);\n     composeIntent.putExtra(Intent.EXTRA_TEXT, message.getDisplayBody().toString());\n     if (message.isMms()) {\n-      MediaMmsMessageRecord mediaMessage \u003d (MediaMmsMessageRecord) message;\n+      MmsMessageRecord mediaMessage \u003d (MmsMessageRecord) message;\n       if (mediaMessage.containsMediaSlide()) {\n         Slide slide \u003d mediaMessage.getSlideDeck().getSlides().get(0);\n         composeIntent.putExtra(Intent.EXTRA_STREAM, slide.getUri());\n",
    "projectName": "Signal-Android",
    "bugLineNum": 402,
    "bugNodeStartChar": 16957,
    "bugNodeLength": 69,
    "fixLineNum": 402,
    "fixNodeStartChar": 16957,
    "fixNodeLength": 59,
    "sourceBeforeFix": "MediaMmsMessageRecord mediaMessage\u003d(MediaMmsMessageRecord)message; ",
    "sourceAfterFix": "MmsMessageRecord mediaMessage\u003d(MmsMessageRecord)message; "
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "d8a6fcf979357d411a20c154d004f64705dffe46",
    "fixCommitParentSHA1": "4669c45ff7fea8805e7cbd7330c5698aebe698cc",
    "bugFilePath": "src/org/thoughtcrime/securesms/util/BackupUtil.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/util/BackupUtil.java b/src/org/thoughtcrime/securesms/util/BackupUtil.java\nindex 106f8a8..eb887ab 100644\n--- a/src/org/thoughtcrime/securesms/util/BackupUtil.java\n+++ b/src/org/thoughtcrime/securesms/util/BackupUtil.java\n@@ -67,7 +67,7 @@\n       File   backupDirectory \u003d StorageUtil.getBackupDirectory(context);\n       File[] backups         \u003d backupDirectory.listFiles();\n \n-      if (backups !\u003d null \u0026\u0026 backups.length \u003e 5) {\n+      if (backups !\u003d null \u0026\u0026 backups.length \u003e 2) {\n         Arrays.sort(backups, (left, right) -\u003e {\n           long leftTimestamp  \u003d getBackupTimestamp(left);\n           long rightTimestamp \u003d getBackupTimestamp(right);\n@@ -79,7 +79,7 @@\n           return (int)(rightTimestamp - leftTimestamp);\n         });\n \n-        for (int i\u003d5;i\u003cbackups.length;i++) {\n+        for (int i\u003d2;i\u003cbackups.length;i++) {\n           Log.w(TAG, \"Deleting: \" + backups[i].getAbsolutePath());\n \n           if (!backups[i].delete()) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 70,
    "bugNodeStartChar": 2362,
    "bugNodeLength": 18,
    "fixLineNum": 70,
    "fixNodeStartChar": 2362,
    "fixNodeLength": 18,
    "sourceBeforeFix": "backups.length \u003e 5",
    "sourceAfterFix": "backups.length \u003e 2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "d8a6fcf979357d411a20c154d004f64705dffe46",
    "fixCommitParentSHA1": "4669c45ff7fea8805e7cbd7330c5698aebe698cc",
    "bugFilePath": "src/org/thoughtcrime/securesms/util/BackupUtil.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/util/BackupUtil.java b/src/org/thoughtcrime/securesms/util/BackupUtil.java\nindex 106f8a8..eb887ab 100644\n--- a/src/org/thoughtcrime/securesms/util/BackupUtil.java\n+++ b/src/org/thoughtcrime/securesms/util/BackupUtil.java\n@@ -67,7 +67,7 @@\n       File   backupDirectory \u003d StorageUtil.getBackupDirectory(context);\n       File[] backups         \u003d backupDirectory.listFiles();\n \n-      if (backups !\u003d null \u0026\u0026 backups.length \u003e 5) {\n+      if (backups !\u003d null \u0026\u0026 backups.length \u003e 2) {\n         Arrays.sort(backups, (left, right) -\u003e {\n           long leftTimestamp  \u003d getBackupTimestamp(left);\n           long rightTimestamp \u003d getBackupTimestamp(right);\n@@ -79,7 +79,7 @@\n           return (int)(rightTimestamp - leftTimestamp);\n         });\n \n-        for (int i\u003d5;i\u003cbackups.length;i++) {\n+        for (int i\u003d2;i\u003cbackups.length;i++) {\n           Log.w(TAG, \"Deleting: \" + backups[i].getAbsolutePath());\n \n           if (!backups[i].delete()) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 82,
    "bugNodeStartChar": 2860,
    "bugNodeLength": 3,
    "fixLineNum": 82,
    "fixNodeStartChar": 2860,
    "fixNodeLength": 3,
    "sourceBeforeFix": "i\u003d5",
    "sourceAfterFix": "i\u003d2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex ce9e590..3c24057 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -589,7 +589,7 @@\n         @Override\n         protected Void doInBackground(Void... params) {\n           DatabaseFactory.getRecipientDatabase(ConversationActivity.this).setExpireMessages(recipient, expirationTime);\n-          OutgoingExpirationUpdateMessage outgoingMessage \u003d new OutgoingExpirationUpdateMessage(getRecipient(), System.currentTimeMillis(), expirationTime * 1000);\n+          OutgoingExpirationUpdateMessage outgoingMessage \u003d new OutgoingExpirationUpdateMessage(getRecipient(), System.currentTimeMillis(), expirationTime * 1000L);\n           MessageSender.send(ConversationActivity.this, outgoingMessage, threadId, false, null);\n \n           return null;\n@@ -1627,7 +1627,7 @@\n \n       boolean    forceSms       \u003d sendButton.isManualSelection() \u0026\u0026 sendButton.getSelectedTransport().isSms();\n       int        subscriptionId \u003d sendButton.getSelectedTransport().getSimSubscriptionId().or(-1);\n-      long       expiresIn      \u003d recipient.getExpireMessages() * 1000;\n+      long       expiresIn      \u003d recipient.getExpireMessages() * 1000L;\n       boolean    initiating     \u003d threadId \u003d\u003d -1;\n \n       Log.w(TAG, \"isManual Selection: \" + sendButton.isManualSelection());\n@@ -1842,7 +1842,7 @@\n       public void onSuccess(final @NonNull Pair\u003cUri, Long\u003e result) {\n         boolean    forceSms       \u003d sendButton.isManualSelection() \u0026\u0026 sendButton.getSelectedTransport().isSms();\n         int        subscriptionId \u003d sendButton.getSelectedTransport().getSimSubscriptionId().or(-1);\n-        long       expiresIn      \u003d recipient.getExpireMessages() * 1000;\n+        long       expiresIn      \u003d recipient.getExpireMessages() * 1000L;\n         boolean    initiating     \u003d threadId \u003d\u003d -1;\n         AudioSlide audioSlide     \u003d new AudioSlide(ConversationActivity.this, result.first, result.second, MediaUtil.AUDIO_AAC, true);\n         SlideDeck  slideDeck      \u003d new SlideDeck();\n",
    "projectName": "Signal-Android",
    "bugLineNum": 592,
    "bugNodeStartChar": 24810,
    "bugNodeLength": 21,
    "fixLineNum": 592,
    "fixNodeStartChar": 24810,
    "fixNodeLength": 22,
    "sourceBeforeFix": "expirationTime * 1000",
    "sourceAfterFix": "expirationTime * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex ce9e590..3c24057 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -589,7 +589,7 @@\n         @Override\n         protected Void doInBackground(Void... params) {\n           DatabaseFactory.getRecipientDatabase(ConversationActivity.this).setExpireMessages(recipient, expirationTime);\n-          OutgoingExpirationUpdateMessage outgoingMessage \u003d new OutgoingExpirationUpdateMessage(getRecipient(), System.currentTimeMillis(), expirationTime * 1000);\n+          OutgoingExpirationUpdateMessage outgoingMessage \u003d new OutgoingExpirationUpdateMessage(getRecipient(), System.currentTimeMillis(), expirationTime * 1000L);\n           MessageSender.send(ConversationActivity.this, outgoingMessage, threadId, false, null);\n \n           return null;\n@@ -1627,7 +1627,7 @@\n \n       boolean    forceSms       \u003d sendButton.isManualSelection() \u0026\u0026 sendButton.getSelectedTransport().isSms();\n       int        subscriptionId \u003d sendButton.getSelectedTransport().getSimSubscriptionId().or(-1);\n-      long       expiresIn      \u003d recipient.getExpireMessages() * 1000;\n+      long       expiresIn      \u003d recipient.getExpireMessages() * 1000L;\n       boolean    initiating     \u003d threadId \u003d\u003d -1;\n \n       Log.w(TAG, \"isManual Selection: \" + sendButton.isManualSelection());\n@@ -1842,7 +1842,7 @@\n       public void onSuccess(final @NonNull Pair\u003cUri, Long\u003e result) {\n         boolean    forceSms       \u003d sendButton.isManualSelection() \u0026\u0026 sendButton.getSelectedTransport().isSms();\n         int        subscriptionId \u003d sendButton.getSelectedTransport().getSimSubscriptionId().or(-1);\n-        long       expiresIn      \u003d recipient.getExpireMessages() * 1000;\n+        long       expiresIn      \u003d recipient.getExpireMessages() * 1000L;\n         boolean    initiating     \u003d threadId \u003d\u003d -1;\n         AudioSlide audioSlide     \u003d new AudioSlide(ConversationActivity.this, result.first, result.second, MediaUtil.AUDIO_AAC, true);\n         SlideDeck  slideDeck      \u003d new SlideDeck();\n",
    "projectName": "Signal-Android",
    "bugLineNum": 1630,
    "bugNodeStartChar": 67132,
    "bugNodeLength": 36,
    "fixLineNum": 1630,
    "fixNodeStartChar": 67132,
    "fixNodeLength": 37,
    "sourceBeforeFix": "recipient.getExpireMessages() * 1000",
    "sourceAfterFix": "recipient.getExpireMessages() * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex ce9e590..3c24057 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -589,7 +589,7 @@\n         @Override\n         protected Void doInBackground(Void... params) {\n           DatabaseFactory.getRecipientDatabase(ConversationActivity.this).setExpireMessages(recipient, expirationTime);\n-          OutgoingExpirationUpdateMessage outgoingMessage \u003d new OutgoingExpirationUpdateMessage(getRecipient(), System.currentTimeMillis(), expirationTime * 1000);\n+          OutgoingExpirationUpdateMessage outgoingMessage \u003d new OutgoingExpirationUpdateMessage(getRecipient(), System.currentTimeMillis(), expirationTime * 1000L);\n           MessageSender.send(ConversationActivity.this, outgoingMessage, threadId, false, null);\n \n           return null;\n@@ -1627,7 +1627,7 @@\n \n       boolean    forceSms       \u003d sendButton.isManualSelection() \u0026\u0026 sendButton.getSelectedTransport().isSms();\n       int        subscriptionId \u003d sendButton.getSelectedTransport().getSimSubscriptionId().or(-1);\n-      long       expiresIn      \u003d recipient.getExpireMessages() * 1000;\n+      long       expiresIn      \u003d recipient.getExpireMessages() * 1000L;\n       boolean    initiating     \u003d threadId \u003d\u003d -1;\n \n       Log.w(TAG, \"isManual Selection: \" + sendButton.isManualSelection());\n@@ -1842,7 +1842,7 @@\n       public void onSuccess(final @NonNull Pair\u003cUri, Long\u003e result) {\n         boolean    forceSms       \u003d sendButton.isManualSelection() \u0026\u0026 sendButton.getSelectedTransport().isSms();\n         int        subscriptionId \u003d sendButton.getSelectedTransport().getSimSubscriptionId().or(-1);\n-        long       expiresIn      \u003d recipient.getExpireMessages() * 1000;\n+        long       expiresIn      \u003d recipient.getExpireMessages() * 1000L;\n         boolean    initiating     \u003d threadId \u003d\u003d -1;\n         AudioSlide audioSlide     \u003d new AudioSlide(ConversationActivity.this, result.first, result.second, MediaUtil.AUDIO_AAC, true);\n         SlideDeck  slideDeck      \u003d new SlideDeck();\n",
    "projectName": "Signal-Android",
    "bugLineNum": 1845,
    "bugNodeStartChar": 75972,
    "bugNodeLength": 36,
    "fixLineNum": 1845,
    "fixNodeStartChar": 75972,
    "fixNodeLength": 37,
    "sourceBeforeFix": "recipient.getExpireMessages() * 1000",
    "sourceAfterFix": "recipient.getExpireMessages() * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\nindex 869b9cc..cd850ae 100644\n--- a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n@@ -395,7 +395,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, true,\n+                                                                 message.getExpiresInSeconds() * 1000L, true,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  Optional.absent(), message.getGroupInfo(),\n                                                                  Optional.absent());\n@@ -519,7 +519,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, false,\n+                                                                 message.getExpiresInSeconds() * 1000L, false,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  message.getBody(),\n                                                                  message.getGroupInfo(),\n@@ -556,7 +556,7 @@\n \n     OutgoingExpirationUpdateMessage expirationUpdateMessage \u003d new OutgoingExpirationUpdateMessage(recipient,\n                                                                                                   message.getTimestamp(),\n-                                                                                                  message.getMessage().getExpiresInSeconds() * 1000);\n+                                                                                                  message.getMessage().getExpiresInSeconds() * 1000L);\n \n     long threadId  \u003d DatabaseFactory.getThreadDatabase(context).getThreadIdFor(recipient);\n     long messageId \u003d database.insertMessageOutbox(expirationUpdateMessage, threadId, false, null);\n@@ -576,7 +576,7 @@\n     OutgoingMediaMessage  mediaMessage \u003d new OutgoingMediaMessage(recipients, message.getMessage().getBody().orNull(),\n                                                                   PointerAttachment.forPointers(message.getMessage().getAttachments()),\n                                                                   message.getTimestamp(), -1,\n-                                                                  message.getMessage().getExpiresInSeconds() * 1000,\n+                                                                  message.getMessage().getExpiresInSeconds() * 1000L,\n                                                                   ThreadDatabase.DistributionTypes.DEFAULT);\n \n     mediaMessage \u003d new OutgoingSecureMediaMessage(mediaMessage);\n@@ -602,7 +602,7 @@\n                         .getExpiringMessageManager()\n                         .scheduleDeletion(messageId, true,\n                                           message.getExpirationStartTimestamp(),\n-                                          message.getMessage().getExpiresInSeconds() * 1000);\n+                                          message.getMessage().getExpiresInSeconds() * 1000L);\n     }\n \n     return threadId;\n@@ -630,7 +630,7 @@\n                                                                 envelope.getSourceDevice(),\n                                                                 message.getTimestamp(), body,\n                                                                 message.getGroupInfo(),\n-                                                                message.getExpiresInSeconds() * 1000);\n+                                                                message.getExpiresInSeconds() * 1000L);\n \n       textMessage \u003d new IncomingEncryptedMessage(textMessage, body);\n       Optional\u003cInsertResult\u003e insertResult \u003d database.insertMessageInbox(textMessage);\n@@ -652,7 +652,7 @@\n \n     Recipient recipient       \u003d getSyncMessageDestination(message);\n     String    body            \u003d message.getMessage().getBody().or(\"\");\n-    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000;\n+    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000L;\n \n     if (recipient.getExpireMessages() !\u003d message.getMessage().getExpiresInSeconds()) {\n       handleSynchronizeSentExpirationUpdate(message);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 398,
    "bugNodeStartChar": 20872,
    "bugNodeLength": 36,
    "fixLineNum": 398,
    "fixNodeStartChar": 20872,
    "fixNodeLength": 37,
    "sourceBeforeFix": "message.getExpiresInSeconds() * 1000",
    "sourceAfterFix": "message.getExpiresInSeconds() * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\nindex 869b9cc..cd850ae 100644\n--- a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n@@ -395,7 +395,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, true,\n+                                                                 message.getExpiresInSeconds() * 1000L, true,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  Optional.absent(), message.getGroupInfo(),\n                                                                  Optional.absent());\n@@ -519,7 +519,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, false,\n+                                                                 message.getExpiresInSeconds() * 1000L, false,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  message.getBody(),\n                                                                  message.getGroupInfo(),\n@@ -556,7 +556,7 @@\n \n     OutgoingExpirationUpdateMessage expirationUpdateMessage \u003d new OutgoingExpirationUpdateMessage(recipient,\n                                                                                                   message.getTimestamp(),\n-                                                                                                  message.getMessage().getExpiresInSeconds() * 1000);\n+                                                                                                  message.getMessage().getExpiresInSeconds() * 1000L);\n \n     long threadId  \u003d DatabaseFactory.getThreadDatabase(context).getThreadIdFor(recipient);\n     long messageId \u003d database.insertMessageOutbox(expirationUpdateMessage, threadId, false, null);\n@@ -576,7 +576,7 @@\n     OutgoingMediaMessage  mediaMessage \u003d new OutgoingMediaMessage(recipients, message.getMessage().getBody().orNull(),\n                                                                   PointerAttachment.forPointers(message.getMessage().getAttachments()),\n                                                                   message.getTimestamp(), -1,\n-                                                                  message.getMessage().getExpiresInSeconds() * 1000,\n+                                                                  message.getMessage().getExpiresInSeconds() * 1000L,\n                                                                   ThreadDatabase.DistributionTypes.DEFAULT);\n \n     mediaMessage \u003d new OutgoingSecureMediaMessage(mediaMessage);\n@@ -602,7 +602,7 @@\n                         .getExpiringMessageManager()\n                         .scheduleDeletion(messageId, true,\n                                           message.getExpirationStartTimestamp(),\n-                                          message.getMessage().getExpiresInSeconds() * 1000);\n+                                          message.getMessage().getExpiresInSeconds() * 1000L);\n     }\n \n     return threadId;\n@@ -630,7 +630,7 @@\n                                                                 envelope.getSourceDevice(),\n                                                                 message.getTimestamp(), body,\n                                                                 message.getGroupInfo(),\n-                                                                message.getExpiresInSeconds() * 1000);\n+                                                                message.getExpiresInSeconds() * 1000L);\n \n       textMessage \u003d new IncomingEncryptedMessage(textMessage, body);\n       Optional\u003cInsertResult\u003e insertResult \u003d database.insertMessageInbox(textMessage);\n@@ -652,7 +652,7 @@\n \n     Recipient recipient       \u003d getSyncMessageDestination(message);\n     String    body            \u003d message.getMessage().getBody().or(\"\");\n-    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000;\n+    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000L;\n \n     if (recipient.getExpireMessages() !\u003d message.getMessage().getExpiresInSeconds()) {\n       handleSynchronizeSentExpirationUpdate(message);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 522,
    "bugNodeStartChar": 26865,
    "bugNodeLength": 36,
    "fixLineNum": 522,
    "fixNodeStartChar": 26865,
    "fixNodeLength": 37,
    "sourceBeforeFix": "message.getExpiresInSeconds() * 1000",
    "sourceAfterFix": "message.getExpiresInSeconds() * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\nindex 869b9cc..cd850ae 100644\n--- a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n@@ -395,7 +395,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, true,\n+                                                                 message.getExpiresInSeconds() * 1000L, true,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  Optional.absent(), message.getGroupInfo(),\n                                                                  Optional.absent());\n@@ -519,7 +519,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, false,\n+                                                                 message.getExpiresInSeconds() * 1000L, false,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  message.getBody(),\n                                                                  message.getGroupInfo(),\n@@ -556,7 +556,7 @@\n \n     OutgoingExpirationUpdateMessage expirationUpdateMessage \u003d new OutgoingExpirationUpdateMessage(recipient,\n                                                                                                   message.getTimestamp(),\n-                                                                                                  message.getMessage().getExpiresInSeconds() * 1000);\n+                                                                                                  message.getMessage().getExpiresInSeconds() * 1000L);\n \n     long threadId  \u003d DatabaseFactory.getThreadDatabase(context).getThreadIdFor(recipient);\n     long messageId \u003d database.insertMessageOutbox(expirationUpdateMessage, threadId, false, null);\n@@ -576,7 +576,7 @@\n     OutgoingMediaMessage  mediaMessage \u003d new OutgoingMediaMessage(recipients, message.getMessage().getBody().orNull(),\n                                                                   PointerAttachment.forPointers(message.getMessage().getAttachments()),\n                                                                   message.getTimestamp(), -1,\n-                                                                  message.getMessage().getExpiresInSeconds() * 1000,\n+                                                                  message.getMessage().getExpiresInSeconds() * 1000L,\n                                                                   ThreadDatabase.DistributionTypes.DEFAULT);\n \n     mediaMessage \u003d new OutgoingSecureMediaMessage(mediaMessage);\n@@ -602,7 +602,7 @@\n                         .getExpiringMessageManager()\n                         .scheduleDeletion(messageId, true,\n                                           message.getExpirationStartTimestamp(),\n-                                          message.getMessage().getExpiresInSeconds() * 1000);\n+                                          message.getMessage().getExpiresInSeconds() * 1000L);\n     }\n \n     return threadId;\n@@ -630,7 +630,7 @@\n                                                                 envelope.getSourceDevice(),\n                                                                 message.getTimestamp(), body,\n                                                                 message.getGroupInfo(),\n-                                                                message.getExpiresInSeconds() * 1000);\n+                                                                message.getExpiresInSeconds() * 1000L);\n \n       textMessage \u003d new IncomingEncryptedMessage(textMessage, body);\n       Optional\u003cInsertResult\u003e insertResult \u003d database.insertMessageInbox(textMessage);\n@@ -652,7 +652,7 @@\n \n     Recipient recipient       \u003d getSyncMessageDestination(message);\n     String    body            \u003d message.getMessage().getBody().or(\"\");\n-    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000;\n+    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000L;\n \n     if (recipient.getExpireMessages() !\u003d message.getMessage().getExpiresInSeconds()) {\n       handleSynchronizeSentExpirationUpdate(message);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 559,
    "bugNodeStartChar": 28841,
    "bugNodeLength": 49,
    "fixLineNum": 559,
    "fixNodeStartChar": 28841,
    "fixNodeLength": 50,
    "sourceBeforeFix": "message.getMessage().getExpiresInSeconds() * 1000",
    "sourceAfterFix": "message.getMessage().getExpiresInSeconds() * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\nindex 869b9cc..cd850ae 100644\n--- a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n@@ -395,7 +395,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, true,\n+                                                                 message.getExpiresInSeconds() * 1000L, true,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  Optional.absent(), message.getGroupInfo(),\n                                                                  Optional.absent());\n@@ -519,7 +519,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, false,\n+                                                                 message.getExpiresInSeconds() * 1000L, false,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  message.getBody(),\n                                                                  message.getGroupInfo(),\n@@ -556,7 +556,7 @@\n \n     OutgoingExpirationUpdateMessage expirationUpdateMessage \u003d new OutgoingExpirationUpdateMessage(recipient,\n                                                                                                   message.getTimestamp(),\n-                                                                                                  message.getMessage().getExpiresInSeconds() * 1000);\n+                                                                                                  message.getMessage().getExpiresInSeconds() * 1000L);\n \n     long threadId  \u003d DatabaseFactory.getThreadDatabase(context).getThreadIdFor(recipient);\n     long messageId \u003d database.insertMessageOutbox(expirationUpdateMessage, threadId, false, null);\n@@ -576,7 +576,7 @@\n     OutgoingMediaMessage  mediaMessage \u003d new OutgoingMediaMessage(recipients, message.getMessage().getBody().orNull(),\n                                                                   PointerAttachment.forPointers(message.getMessage().getAttachments()),\n                                                                   message.getTimestamp(), -1,\n-                                                                  message.getMessage().getExpiresInSeconds() * 1000,\n+                                                                  message.getMessage().getExpiresInSeconds() * 1000L,\n                                                                   ThreadDatabase.DistributionTypes.DEFAULT);\n \n     mediaMessage \u003d new OutgoingSecureMediaMessage(mediaMessage);\n@@ -602,7 +602,7 @@\n                         .getExpiringMessageManager()\n                         .scheduleDeletion(messageId, true,\n                                           message.getExpirationStartTimestamp(),\n-                                          message.getMessage().getExpiresInSeconds() * 1000);\n+                                          message.getMessage().getExpiresInSeconds() * 1000L);\n     }\n \n     return threadId;\n@@ -630,7 +630,7 @@\n                                                                 envelope.getSourceDevice(),\n                                                                 message.getTimestamp(), body,\n                                                                 message.getGroupInfo(),\n-                                                                message.getExpiresInSeconds() * 1000);\n+                                                                message.getExpiresInSeconds() * 1000L);\n \n       textMessage \u003d new IncomingEncryptedMessage(textMessage, body);\n       Optional\u003cInsertResult\u003e insertResult \u003d database.insertMessageInbox(textMessage);\n@@ -652,7 +652,7 @@\n \n     Recipient recipient       \u003d getSyncMessageDestination(message);\n     String    body            \u003d message.getMessage().getBody().or(\"\");\n-    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000;\n+    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000L;\n \n     if (recipient.getExpireMessages() !\u003d message.getMessage().getExpiresInSeconds()) {\n       handleSynchronizeSentExpirationUpdate(message);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 579,
    "bugNodeStartChar": 29972,
    "bugNodeLength": 49,
    "fixLineNum": 579,
    "fixNodeStartChar": 29972,
    "fixNodeLength": 50,
    "sourceBeforeFix": "message.getMessage().getExpiresInSeconds() * 1000",
    "sourceAfterFix": "message.getMessage().getExpiresInSeconds() * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\nindex 869b9cc..cd850ae 100644\n--- a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n@@ -395,7 +395,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, true,\n+                                                                 message.getExpiresInSeconds() * 1000L, true,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  Optional.absent(), message.getGroupInfo(),\n                                                                  Optional.absent());\n@@ -519,7 +519,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, false,\n+                                                                 message.getExpiresInSeconds() * 1000L, false,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  message.getBody(),\n                                                                  message.getGroupInfo(),\n@@ -556,7 +556,7 @@\n \n     OutgoingExpirationUpdateMessage expirationUpdateMessage \u003d new OutgoingExpirationUpdateMessage(recipient,\n                                                                                                   message.getTimestamp(),\n-                                                                                                  message.getMessage().getExpiresInSeconds() * 1000);\n+                                                                                                  message.getMessage().getExpiresInSeconds() * 1000L);\n \n     long threadId  \u003d DatabaseFactory.getThreadDatabase(context).getThreadIdFor(recipient);\n     long messageId \u003d database.insertMessageOutbox(expirationUpdateMessage, threadId, false, null);\n@@ -576,7 +576,7 @@\n     OutgoingMediaMessage  mediaMessage \u003d new OutgoingMediaMessage(recipients, message.getMessage().getBody().orNull(),\n                                                                   PointerAttachment.forPointers(message.getMessage().getAttachments()),\n                                                                   message.getTimestamp(), -1,\n-                                                                  message.getMessage().getExpiresInSeconds() * 1000,\n+                                                                  message.getMessage().getExpiresInSeconds() * 1000L,\n                                                                   ThreadDatabase.DistributionTypes.DEFAULT);\n \n     mediaMessage \u003d new OutgoingSecureMediaMessage(mediaMessage);\n@@ -602,7 +602,7 @@\n                         .getExpiringMessageManager()\n                         .scheduleDeletion(messageId, true,\n                                           message.getExpirationStartTimestamp(),\n-                                          message.getMessage().getExpiresInSeconds() * 1000);\n+                                          message.getMessage().getExpiresInSeconds() * 1000L);\n     }\n \n     return threadId;\n@@ -630,7 +630,7 @@\n                                                                 envelope.getSourceDevice(),\n                                                                 message.getTimestamp(), body,\n                                                                 message.getGroupInfo(),\n-                                                                message.getExpiresInSeconds() * 1000);\n+                                                                message.getExpiresInSeconds() * 1000L);\n \n       textMessage \u003d new IncomingEncryptedMessage(textMessage, body);\n       Optional\u003cInsertResult\u003e insertResult \u003d database.insertMessageInbox(textMessage);\n@@ -652,7 +652,7 @@\n \n     Recipient recipient       \u003d getSyncMessageDestination(message);\n     String    body            \u003d message.getMessage().getBody().or(\"\");\n-    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000;\n+    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000L;\n \n     if (recipient.getExpireMessages() !\u003d message.getMessage().getExpiresInSeconds()) {\n       handleSynchronizeSentExpirationUpdate(message);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 605,
    "bugNodeStartChar": 31330,
    "bugNodeLength": 49,
    "fixLineNum": 605,
    "fixNodeStartChar": 31330,
    "fixNodeLength": 50,
    "sourceBeforeFix": "message.getMessage().getExpiresInSeconds() * 1000",
    "sourceAfterFix": "message.getMessage().getExpiresInSeconds() * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\nindex 869b9cc..cd850ae 100644\n--- a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n@@ -395,7 +395,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, true,\n+                                                                 message.getExpiresInSeconds() * 1000L, true,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  Optional.absent(), message.getGroupInfo(),\n                                                                  Optional.absent());\n@@ -519,7 +519,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, false,\n+                                                                 message.getExpiresInSeconds() * 1000L, false,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  message.getBody(),\n                                                                  message.getGroupInfo(),\n@@ -556,7 +556,7 @@\n \n     OutgoingExpirationUpdateMessage expirationUpdateMessage \u003d new OutgoingExpirationUpdateMessage(recipient,\n                                                                                                   message.getTimestamp(),\n-                                                                                                  message.getMessage().getExpiresInSeconds() * 1000);\n+                                                                                                  message.getMessage().getExpiresInSeconds() * 1000L);\n \n     long threadId  \u003d DatabaseFactory.getThreadDatabase(context).getThreadIdFor(recipient);\n     long messageId \u003d database.insertMessageOutbox(expirationUpdateMessage, threadId, false, null);\n@@ -576,7 +576,7 @@\n     OutgoingMediaMessage  mediaMessage \u003d new OutgoingMediaMessage(recipients, message.getMessage().getBody().orNull(),\n                                                                   PointerAttachment.forPointers(message.getMessage().getAttachments()),\n                                                                   message.getTimestamp(), -1,\n-                                                                  message.getMessage().getExpiresInSeconds() * 1000,\n+                                                                  message.getMessage().getExpiresInSeconds() * 1000L,\n                                                                   ThreadDatabase.DistributionTypes.DEFAULT);\n \n     mediaMessage \u003d new OutgoingSecureMediaMessage(mediaMessage);\n@@ -602,7 +602,7 @@\n                         .getExpiringMessageManager()\n                         .scheduleDeletion(messageId, true,\n                                           message.getExpirationStartTimestamp(),\n-                                          message.getMessage().getExpiresInSeconds() * 1000);\n+                                          message.getMessage().getExpiresInSeconds() * 1000L);\n     }\n \n     return threadId;\n@@ -630,7 +630,7 @@\n                                                                 envelope.getSourceDevice(),\n                                                                 message.getTimestamp(), body,\n                                                                 message.getGroupInfo(),\n-                                                                message.getExpiresInSeconds() * 1000);\n+                                                                message.getExpiresInSeconds() * 1000L);\n \n       textMessage \u003d new IncomingEncryptedMessage(textMessage, body);\n       Optional\u003cInsertResult\u003e insertResult \u003d database.insertMessageInbox(textMessage);\n@@ -652,7 +652,7 @@\n \n     Recipient recipient       \u003d getSyncMessageDestination(message);\n     String    body            \u003d message.getMessage().getBody().or(\"\");\n-    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000;\n+    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000L;\n \n     if (recipient.getExpireMessages() !\u003d message.getMessage().getExpiresInSeconds()) {\n       handleSynchronizeSentExpirationUpdate(message);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 633,
    "bugNodeStartChar": 32692,
    "bugNodeLength": 36,
    "fixLineNum": 633,
    "fixNodeStartChar": 32692,
    "fixNodeLength": 37,
    "sourceBeforeFix": "message.getExpiresInSeconds() * 1000",
    "sourceAfterFix": "message.getExpiresInSeconds() * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\nindex 869b9cc..cd850ae 100644\n--- a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n@@ -395,7 +395,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, true,\n+                                                                 message.getExpiresInSeconds() * 1000L, true,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  Optional.absent(), message.getGroupInfo(),\n                                                                  Optional.absent());\n@@ -519,7 +519,7 @@\n     Recipient            recipient    \u003d getMessageDestination(envelope, message);\n     IncomingMediaMessage mediaMessage \u003d new IncomingMediaMessage(Address.fromExternal(context, envelope.getSource()),\n                                                                  message.getTimestamp(), -1,\n-                                                                 message.getExpiresInSeconds() * 1000, false,\n+                                                                 message.getExpiresInSeconds() * 1000L, false,\n                                                                  Optional.fromNullable(envelope.getRelay()),\n                                                                  message.getBody(),\n                                                                  message.getGroupInfo(),\n@@ -556,7 +556,7 @@\n \n     OutgoingExpirationUpdateMessage expirationUpdateMessage \u003d new OutgoingExpirationUpdateMessage(recipient,\n                                                                                                   message.getTimestamp(),\n-                                                                                                  message.getMessage().getExpiresInSeconds() * 1000);\n+                                                                                                  message.getMessage().getExpiresInSeconds() * 1000L);\n \n     long threadId  \u003d DatabaseFactory.getThreadDatabase(context).getThreadIdFor(recipient);\n     long messageId \u003d database.insertMessageOutbox(expirationUpdateMessage, threadId, false, null);\n@@ -576,7 +576,7 @@\n     OutgoingMediaMessage  mediaMessage \u003d new OutgoingMediaMessage(recipients, message.getMessage().getBody().orNull(),\n                                                                   PointerAttachment.forPointers(message.getMessage().getAttachments()),\n                                                                   message.getTimestamp(), -1,\n-                                                                  message.getMessage().getExpiresInSeconds() * 1000,\n+                                                                  message.getMessage().getExpiresInSeconds() * 1000L,\n                                                                   ThreadDatabase.DistributionTypes.DEFAULT);\n \n     mediaMessage \u003d new OutgoingSecureMediaMessage(mediaMessage);\n@@ -602,7 +602,7 @@\n                         .getExpiringMessageManager()\n                         .scheduleDeletion(messageId, true,\n                                           message.getExpirationStartTimestamp(),\n-                                          message.getMessage().getExpiresInSeconds() * 1000);\n+                                          message.getMessage().getExpiresInSeconds() * 1000L);\n     }\n \n     return threadId;\n@@ -630,7 +630,7 @@\n                                                                 envelope.getSourceDevice(),\n                                                                 message.getTimestamp(), body,\n                                                                 message.getGroupInfo(),\n-                                                                message.getExpiresInSeconds() * 1000);\n+                                                                message.getExpiresInSeconds() * 1000L);\n \n       textMessage \u003d new IncomingEncryptedMessage(textMessage, body);\n       Optional\u003cInsertResult\u003e insertResult \u003d database.insertMessageInbox(textMessage);\n@@ -652,7 +652,7 @@\n \n     Recipient recipient       \u003d getSyncMessageDestination(message);\n     String    body            \u003d message.getMessage().getBody().or(\"\");\n-    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000;\n+    long      expiresInMillis \u003d message.getMessage().getExpiresInSeconds() * 1000L;\n \n     if (recipient.getExpireMessages() !\u003d message.getMessage().getExpiresInSeconds()) {\n       handleSynchronizeSentExpirationUpdate(message);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 655,
    "bugNodeStartChar": 33500,
    "bugNodeLength": 49,
    "fixLineNum": 655,
    "fixNodeStartChar": 33500,
    "fixNodeLength": 50,
    "sourceBeforeFix": "message.getMessage().getExpiresInSeconds() * 1000",
    "sourceAfterFix": "message.getMessage().getExpiresInSeconds() * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/notifications/AndroidAutoReplyReceiver.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/notifications/AndroidAutoReplyReceiver.java b/src/org/thoughtcrime/securesms/notifications/AndroidAutoReplyReceiver.java\nindex 44b115e..bd8f5ee 100644\n--- a/src/org/thoughtcrime/securesms/notifications/AndroidAutoReplyReceiver.java\n+++ b/src/org/thoughtcrime/securesms/notifications/AndroidAutoReplyReceiver.java\n@@ -71,7 +71,7 @@\n           long replyThreadId;\n \n           int  subscriptionId \u003d recipient.getDefaultSubscriptionId().or(-1);\n-          long expiresIn      \u003d recipient.getExpireMessages() * 1000;\n+          long expiresIn      \u003d recipient.getExpireMessages() * 1000L;\n \n           if (recipient.isGroupRecipient()) {\n             Log.w(\"AndroidAutoReplyReceiver\", \"GroupRecipient, Sending media message\");\n",
    "projectName": "Signal-Android",
    "bugLineNum": 74,
    "bugNodeStartChar": 2944,
    "bugNodeLength": 36,
    "fixLineNum": 74,
    "fixNodeStartChar": 2944,
    "fixNodeLength": 37,
    "sourceBeforeFix": "recipient.getExpireMessages() * 1000",
    "sourceAfterFix": "recipient.getExpireMessages() * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/notifications/RemoteReplyReceiver.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/notifications/RemoteReplyReceiver.java b/src/org/thoughtcrime/securesms/notifications/RemoteReplyReceiver.java\nindex 5aeb5c5..674b080 100644\n--- a/src/org/thoughtcrime/securesms/notifications/RemoteReplyReceiver.java\n+++ b/src/org/thoughtcrime/securesms/notifications/RemoteReplyReceiver.java\n@@ -65,7 +65,7 @@\n \n           Recipient recipient \u003d Recipient.from(context, address, false);\n           int  subscriptionId \u003d recipient.getDefaultSubscriptionId().or(-1);\n-          long expiresIn      \u003d recipient.getExpireMessages() * 1000;\n+          long expiresIn      \u003d recipient.getExpireMessages() * 1000L;\n \n           if (recipient.isGroupRecipient()) {\n             OutgoingMediaMessage reply \u003d new OutgoingMediaMessage(recipient, responseText.toString(), new LinkedList\u003c\u003e(), System.currentTimeMillis(), subscriptionId, expiresIn, 0);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 68,
    "bugNodeStartChar": 2682,
    "bugNodeLength": 36,
    "fixLineNum": 68,
    "fixNodeStartChar": 2682,
    "fixNodeLength": 37,
    "sourceBeforeFix": "recipient.getExpireMessages() * 1000",
    "sourceAfterFix": "recipient.getExpireMessages() * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "69f180a5ecbb0d36cc5c7f84f20d117d21b78949",
    "fixCommitParentSHA1": "10c1ee70e8b774f8b3e6c3864d28cec7742347be",
    "bugFilePath": "src/org/thoughtcrime/securesms/service/QuickResponseService.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/service/QuickResponseService.java b/src/org/thoughtcrime/securesms/service/QuickResponseService.java\nindex 4ecd05a..7902941 100644\n--- a/src/org/thoughtcrime/securesms/service/QuickResponseService.java\n+++ b/src/org/thoughtcrime/securesms/service/QuickResponseService.java\n@@ -50,7 +50,7 @@\n       Address   address        \u003d Address.fromExternal(this, number);\n       Recipient recipient      \u003d Recipient.from(this, address, false);\n       int       subscriptionId \u003d recipient.getDefaultSubscriptionId().or(-1);\n-      long      expiresIn      \u003d recipient.getExpireMessages() * 1000;\n+      long      expiresIn      \u003d recipient.getExpireMessages() * 1000L;\n \n       if (!TextUtils.isEmpty(content)) {\n         MessageSender.send(this, new OutgoingTextMessage(recipient, content, expiresIn, subscriptionId), -1, false, null);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 53,
    "bugNodeStartChar": 1857,
    "bugNodeLength": 36,
    "fixLineNum": 53,
    "fixNodeStartChar": 1857,
    "fixNodeLength": 37,
    "sourceBeforeFix": "recipient.getExpireMessages() * 1000",
    "sourceAfterFix": "recipient.getExpireMessages() * 1000L"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "a0a9e412b4ab8b43bd51816f67a63d8185cf914d",
    "fixCommitParentSHA1": "9ebd8682b5e3a7359f7ad07f122598495406d63c",
    "bugFilePath": "src/org/thoughtcrime/securesms/PassphraseRequiredActionBarActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/PassphraseRequiredActionBarActivity.java b/src/org/thoughtcrime/securesms/PassphraseRequiredActionBarActivity.java\nindex 838d243..507ed7e 100644\n--- a/src/org/thoughtcrime/securesms/PassphraseRequiredActionBarActivity.java\n+++ b/src/org/thoughtcrime/securesms/PassphraseRequiredActionBarActivity.java\n@@ -89,7 +89,7 @@\n   @Override\n   public void onMasterSecretCleared() {\n     Log.w(TAG, \"onMasterSecretCleared()\");\n-    if (isVisible) routeApplicationState(false);\n+    if (isVisible) routeApplicationState(true);\n     else           finish();\n   }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 92,
    "bugNodeStartChar": 3143,
    "bugNodeLength": 28,
    "fixLineNum": 92,
    "fixNodeStartChar": 3143,
    "fixNodeLength": 27,
    "sourceBeforeFix": "routeApplicationState(false)",
    "sourceAfterFix": "routeApplicationState(true)"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "f72e35bf4247724c20c97dd304acb3d2271dcf69",
    "fixCommitParentSHA1": "a8040b00cfab40604c87af34f4ccbc2f3c4a858f",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex 9633364..50eed0d 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -1669,7 +1669,7 @@\n \n     Permissions.with(this)\n                .request(Manifest.permission.SEND_SMS)\n-               .ifNecessary(isSecureText || forceSms)\n+               .ifNecessary(!isSecureText || forceSms)\n                .withPermanentDenialDialog(getString(R.string.ConversationActivity_signal_needs_sms_permission_in_order_to_send_an_sms))\n                .onAllGranted(() -\u003e {\n                  attachmentManager.clear(glideRequests, false);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 1672,
    "bugNodeStartChar": 69373,
    "bugNodeLength": 12,
    "fixLineNum": 1672,
    "fixNodeStartChar": 69373,
    "fixNodeLength": 13,
    "sourceBeforeFix": "isSecureText",
    "sourceAfterFix": "!isSecureText"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "be6a51b123108eaf9b20b6bfc53d78d0abadd635",
    "fixCommitParentSHA1": "08c72ed8740a36344c0541de62ba0f6a8c234226",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex e871269..83c5056 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -1742,7 +1742,7 @@\n   }\n \n   private void updateToggleButtonState() {\n-    if (composeText.getTextTrimmed().length() \u003d\u003d 0 \u0026\u0026 !attachmentManager.isAttachmentPresent()) {\n+    if (composeText.getText().length() \u003d\u003d 0 \u0026\u0026 !attachmentManager.isAttachmentPresent()) {\n       buttonToggle.display(attachButton);\n       quickAttachmentToggle.show();\n     } else {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 1745,
    "bugNodeStartChar": 71824,
    "bugNodeLength": 28,
    "fixLineNum": 1745,
    "fixNodeStartChar": 71824,
    "fixNodeLength": 21,
    "sourceBeforeFix": "composeText.getTextTrimmed()",
    "sourceAfterFix": "composeText.getText()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "be6a51b123108eaf9b20b6bfc53d78d0abadd635",
    "fixCommitParentSHA1": "08c72ed8740a36344c0541de62ba0f6a8c234226",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex e871269..83c5056 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -1742,7 +1742,7 @@\n   }\n \n   private void updateToggleButtonState() {\n-    if (composeText.getTextTrimmed().length() \u003d\u003d 0 \u0026\u0026 !attachmentManager.isAttachmentPresent()) {\n+    if (composeText.getText().length() \u003d\u003d 0 \u0026\u0026 !attachmentManager.isAttachmentPresent()) {\n       buttonToggle.display(attachButton);\n       quickAttachmentToggle.show();\n     } else {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 1745,
    "bugNodeStartChar": 71824,
    "bugNodeLength": 28,
    "fixLineNum": 1745,
    "fixNodeStartChar": 71824,
    "fixNodeLength": 21,
    "sourceBeforeFix": "composeText.getTextTrimmed()",
    "sourceAfterFix": "composeText.getText()"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "9fa4ba126b78bcf9c8df15b1286c4cb0a0225199",
    "fixCommitParentSHA1": "5a607918d27e62965119588f046d066f72ba9b1e",
    "bugFilePath": "src/org/thoughtcrime/securesms/components/ThreadPhotoRailView.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/components/ThreadPhotoRailView.java b/src/org/thoughtcrime/securesms/components/ThreadPhotoRailView.java\nindex c1801c5..35f9f02 100644\n--- a/src/org/thoughtcrime/securesms/components/ThreadPhotoRailView.java\n+++ b/src/org/thoughtcrime/securesms/components/ThreadPhotoRailView.java\n@@ -51,7 +51,7 @@\n     this.recyclerView \u003d ViewUtil.findById(this, R.id.photo_list);\n     this.recyclerView.setLayoutManager(new LinearLayoutManager(context, LinearLayoutManager.HORIZONTAL, false));\n     this.recyclerView.setItemAnimator(new DefaultItemAnimator());\n-    this.recyclerView.setNestedScrollingEnabled(true);\n+    this.recyclerView.setNestedScrollingEnabled(false);\n   }\n \n   public void setListener(@Nullable OnItemClickedListener listener) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 54,
    "bugNodeStartChar": 2054,
    "bugNodeLength": 49,
    "fixLineNum": 54,
    "fixNodeStartChar": 2054,
    "fixNodeLength": 50,
    "sourceBeforeFix": "this.recyclerView.setNestedScrollingEnabled(true)",
    "sourceAfterFix": "this.recyclerView.setNestedScrollingEnabled(false)"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "40d7826fb9d0a3a3baef2af5981d8415ee189428",
    "fixCommitParentSHA1": "77fb541090511e1f31985073d577b6875a15ab0c",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex ef1b129..fedfe61 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -1603,7 +1603,7 @@\n       Log.w(TAG, \"isManual Selection: \" + sendButton.isManualSelection());\n       Log.w(TAG, \"forceSms: \" + forceSms);\n \n-      if ((!recipient.isMmsGroupRecipient() || recipient.getAddress().isEmail()) \u0026\u0026 !isMmsEnabled) {\n+      if ((recipient.isMmsGroupRecipient() || recipient.getAddress().isEmail()) \u0026\u0026 !isMmsEnabled) {\n         handleManualMmsRequired();\n       } else if (!forceSms \u0026\u0026 identityRecords.isUnverified()) {\n         handleUnverifiedRecipients();\n",
    "projectName": "Signal-Android",
    "bugLineNum": 1606,
    "bugNodeStartChar": 64440,
    "bugNodeLength": 32,
    "fixLineNum": 1606,
    "fixNodeStartChar": 64440,
    "fixNodeLength": 31,
    "sourceBeforeFix": "!recipient.isMmsGroupRecipient()",
    "sourceAfterFix": "recipient.isMmsGroupRecipient()"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "08948fe05a3252b835fe9c3d086f1fb0e15969f7",
    "fixCommitParentSHA1": "f3d943270c92d8fa72ae10bd1ecf95fde62c4b45",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/MmsDownloadJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/MmsDownloadJob.java b/src/org/thoughtcrime/securesms/jobs/MmsDownloadJob.java\nindex 1adb6e0..c98c8c9 100644\n--- a/src/org/thoughtcrime/securesms/jobs/MmsDownloadJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/MmsDownloadJob.java\n@@ -220,7 +220,7 @@\n       }\n     }\n \n-    if (members.size() \u003e 1) {\n+    if (members.size() \u003e 2) {\n       group \u003d Optional.of(Address.fromSerialized(DatabaseFactory.getGroupDatabase(context).getOrCreateGroupForMembers(new LinkedList\u003c\u003e(members), true)));\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 223,
    "bugNodeStartChar": 9054,
    "bugNodeLength": 18,
    "fixLineNum": 223,
    "fixNodeStartChar": 9054,
    "fixNodeLength": 18,
    "sourceBeforeFix": "members.size() \u003e 1",
    "sourceAfterFix": "members.size() \u003e 2"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8de926108170c2a0cd6cf098dd6b7d79191b437a",
    "fixCommitParentSHA1": "f41e9c181c66804c567193486cb391ff8a00c449",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/MmsDatabase.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/MmsDatabase.java b/src/org/thoughtcrime/securesms/database/MmsDatabase.java\nindex 90889b2..248ae23 100644\n--- a/src/org/thoughtcrime/securesms/database/MmsDatabase.java\n+++ b/src/org/thoughtcrime/securesms/database/MmsDatabase.java\n@@ -280,7 +280,7 @@\n       PhoneNumberUtil.MatchType match;\n \n       if (localNumber \u003d\u003d null) match \u003d PhoneNumberUtil.MatchType.NO_MATCH;\n-      else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, cc.toPhoneString());\n+      else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, cc.serialize());\n \n       if (match \u003d\u003d PhoneNumberUtil.MatchType.NO_MATCH ||\n           match \u003d\u003d PhoneNumberUtil.MatchType.NOT_A_NUMBER)\n@@ -295,7 +295,7 @@\n         PhoneNumberUtil.MatchType match;\n \n         if (localNumber \u003d\u003d null) match \u003d PhoneNumberUtil.MatchType.NO_MATCH;\n-        else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, to.toPhoneString());\n+        else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, to.serialize());\n \n         if (match \u003d\u003d PhoneNumberUtil.MatchType.NO_MATCH ||\n             match \u003d\u003d PhoneNumberUtil.MatchType.NOT_A_NUMBER)\n",
    "projectName": "Signal-Android",
    "bugLineNum": 283,
    "bugNodeStartChar": 12706,
    "bugNodeLength": 18,
    "fixLineNum": 283,
    "fixNodeStartChar": 12706,
    "fixNodeLength": 14,
    "sourceBeforeFix": "cc.toPhoneString()",
    "sourceAfterFix": "cc.serialize()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8de926108170c2a0cd6cf098dd6b7d79191b437a",
    "fixCommitParentSHA1": "f41e9c181c66804c567193486cb391ff8a00c449",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/MmsDatabase.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/MmsDatabase.java b/src/org/thoughtcrime/securesms/database/MmsDatabase.java\nindex 90889b2..248ae23 100644\n--- a/src/org/thoughtcrime/securesms/database/MmsDatabase.java\n+++ b/src/org/thoughtcrime/securesms/database/MmsDatabase.java\n@@ -280,7 +280,7 @@\n       PhoneNumberUtil.MatchType match;\n \n       if (localNumber \u003d\u003d null) match \u003d PhoneNumberUtil.MatchType.NO_MATCH;\n-      else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, cc.toPhoneString());\n+      else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, cc.serialize());\n \n       if (match \u003d\u003d PhoneNumberUtil.MatchType.NO_MATCH ||\n           match \u003d\u003d PhoneNumberUtil.MatchType.NOT_A_NUMBER)\n@@ -295,7 +295,7 @@\n         PhoneNumberUtil.MatchType match;\n \n         if (localNumber \u003d\u003d null) match \u003d PhoneNumberUtil.MatchType.NO_MATCH;\n-        else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, to.toPhoneString());\n+        else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, to.serialize());\n \n         if (match \u003d\u003d PhoneNumberUtil.MatchType.NO_MATCH ||\n             match \u003d\u003d PhoneNumberUtil.MatchType.NOT_A_NUMBER)\n",
    "projectName": "Signal-Android",
    "bugLineNum": 283,
    "bugNodeStartChar": 12706,
    "bugNodeLength": 18,
    "fixLineNum": 283,
    "fixNodeStartChar": 12706,
    "fixNodeLength": 14,
    "sourceBeforeFix": "cc.toPhoneString()",
    "sourceAfterFix": "cc.serialize()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8de926108170c2a0cd6cf098dd6b7d79191b437a",
    "fixCommitParentSHA1": "f41e9c181c66804c567193486cb391ff8a00c449",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/MmsDatabase.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/MmsDatabase.java b/src/org/thoughtcrime/securesms/database/MmsDatabase.java\nindex 90889b2..248ae23 100644\n--- a/src/org/thoughtcrime/securesms/database/MmsDatabase.java\n+++ b/src/org/thoughtcrime/securesms/database/MmsDatabase.java\n@@ -280,7 +280,7 @@\n       PhoneNumberUtil.MatchType match;\n \n       if (localNumber \u003d\u003d null) match \u003d PhoneNumberUtil.MatchType.NO_MATCH;\n-      else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, cc.toPhoneString());\n+      else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, cc.serialize());\n \n       if (match \u003d\u003d PhoneNumberUtil.MatchType.NO_MATCH ||\n           match \u003d\u003d PhoneNumberUtil.MatchType.NOT_A_NUMBER)\n@@ -295,7 +295,7 @@\n         PhoneNumberUtil.MatchType match;\n \n         if (localNumber \u003d\u003d null) match \u003d PhoneNumberUtil.MatchType.NO_MATCH;\n-        else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, to.toPhoneString());\n+        else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, to.serialize());\n \n         if (match \u003d\u003d PhoneNumberUtil.MatchType.NO_MATCH ||\n             match \u003d\u003d PhoneNumberUtil.MatchType.NOT_A_NUMBER)\n",
    "projectName": "Signal-Android",
    "bugLineNum": 298,
    "bugNodeStartChar": 13223,
    "bugNodeLength": 18,
    "fixLineNum": 298,
    "fixNodeStartChar": 13223,
    "fixNodeLength": 14,
    "sourceBeforeFix": "to.toPhoneString()",
    "sourceAfterFix": "to.serialize()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8de926108170c2a0cd6cf098dd6b7d79191b437a",
    "fixCommitParentSHA1": "f41e9c181c66804c567193486cb391ff8a00c449",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/MmsDatabase.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/MmsDatabase.java b/src/org/thoughtcrime/securesms/database/MmsDatabase.java\nindex 90889b2..248ae23 100644\n--- a/src/org/thoughtcrime/securesms/database/MmsDatabase.java\n+++ b/src/org/thoughtcrime/securesms/database/MmsDatabase.java\n@@ -280,7 +280,7 @@\n       PhoneNumberUtil.MatchType match;\n \n       if (localNumber \u003d\u003d null) match \u003d PhoneNumberUtil.MatchType.NO_MATCH;\n-      else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, cc.toPhoneString());\n+      else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, cc.serialize());\n \n       if (match \u003d\u003d PhoneNumberUtil.MatchType.NO_MATCH ||\n           match \u003d\u003d PhoneNumberUtil.MatchType.NOT_A_NUMBER)\n@@ -295,7 +295,7 @@\n         PhoneNumberUtil.MatchType match;\n \n         if (localNumber \u003d\u003d null) match \u003d PhoneNumberUtil.MatchType.NO_MATCH;\n-        else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, to.toPhoneString());\n+        else                     match \u003d PhoneNumberUtil.getInstance().isNumberMatch(localNumber, to.serialize());\n \n         if (match \u003d\u003d PhoneNumberUtil.MatchType.NO_MATCH ||\n             match \u003d\u003d PhoneNumberUtil.MatchType.NOT_A_NUMBER)\n",
    "projectName": "Signal-Android",
    "bugLineNum": 298,
    "bugNodeStartChar": 13223,
    "bugNodeLength": 18,
    "fixLineNum": 298,
    "fixNodeStartChar": 13223,
    "fixNodeLength": 14,
    "sourceBeforeFix": "to.toPhoneString()",
    "sourceAfterFix": "to.serialize()"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "cb4303ac23578f36f698f07592a3d04f5aa7d9a1",
    "fixCommitParentSHA1": "9a78615991dd9e873307b7d683ea67758026d1ea",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/DatabaseFactory.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\nindex e42fb2f..7acd5e5 100644\n--- a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n+++ b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n@@ -922,10 +922,10 @@\n             if (resolved !\u003d null \u0026\u0026 resolved.moveToFirst()) {\n               String address \u003d resolved.getString(0);\n               addresses[i] \u003d DelimiterUtil.escape(numberMigrator.migrate(address), \u0027 \u0027);\n-            } else if (recipientIds[i].equals(\"-1\")) {\n+            } else if (TextUtils.isEmpty(recipientIds[i]) || recipientIds[i].equals(\"-1\")) {\n               addresses[i] \u003d \"Unknown\";\n             } else {\n-              throw new AssertionError(\"Unable to resolve: \" + recipientIds[i]);\n+              throw new AssertionError(\"Unable to resolve: \" + recipientIds[i] + \", recipientIdsList: \u0027\" + recipientIdsList + \"\u0027\");\n             }\n \n             if (resolved !\u003d null) resolved.close();\n@@ -995,10 +995,10 @@\n             if (resolved !\u003d null \u0026\u0026 resolved.moveToFirst()) {\n               String address \u003d resolved.getString(0);\n               addresses[i] \u003d DelimiterUtil.escape(numberMigrator.migrate(address), \u0027 \u0027);\n-            } else if (recipientIds[i].equals(\"-1\")) {\n+            } else if (TextUtils.isEmpty(recipientIds[i]) || recipientIds[i].equals(\"-1\")) {\n               addresses[i] \u003d \"Unknown\";\n             } else {\n-              throw new AssertionError(\"Unable to resolve: \" + recipientIds[i]);\n+              throw new AssertionError(\"Unable to resolve: \" + recipientIds[i] + \", recipientIdsList: \u0027\" + recipientIdsList + \"\u0027\");\n             }\n \n             if (resolved !\u003d null) resolved.close();\n",
    "projectName": "Signal-Android",
    "bugLineNum": 925,
    "bugNodeStartChar": 44928,
    "bugNodeLength": 28,
    "fixLineNum": 925,
    "fixNodeStartChar": 44928,
    "fixNodeLength": 66,
    "sourceBeforeFix": "recipientIds[i].equals(\"-1\")",
    "sourceAfterFix": "TextUtils.isEmpty(recipientIds[i]) || recipientIds[i].equals(\"-1\")"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "cb4303ac23578f36f698f07592a3d04f5aa7d9a1",
    "fixCommitParentSHA1": "9a78615991dd9e873307b7d683ea67758026d1ea",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/DatabaseFactory.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\nindex e42fb2f..7acd5e5 100644\n--- a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n+++ b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n@@ -922,10 +922,10 @@\n             if (resolved !\u003d null \u0026\u0026 resolved.moveToFirst()) {\n               String address \u003d resolved.getString(0);\n               addresses[i] \u003d DelimiterUtil.escape(numberMigrator.migrate(address), \u0027 \u0027);\n-            } else if (recipientIds[i].equals(\"-1\")) {\n+            } else if (TextUtils.isEmpty(recipientIds[i]) || recipientIds[i].equals(\"-1\")) {\n               addresses[i] \u003d \"Unknown\";\n             } else {\n-              throw new AssertionError(\"Unable to resolve: \" + recipientIds[i]);\n+              throw new AssertionError(\"Unable to resolve: \" + recipientIds[i] + \", recipientIdsList: \u0027\" + recipientIdsList + \"\u0027\");\n             }\n \n             if (resolved !\u003d null) resolved.close();\n@@ -995,10 +995,10 @@\n             if (resolved !\u003d null \u0026\u0026 resolved.moveToFirst()) {\n               String address \u003d resolved.getString(0);\n               addresses[i] \u003d DelimiterUtil.escape(numberMigrator.migrate(address), \u0027 \u0027);\n-            } else if (recipientIds[i].equals(\"-1\")) {\n+            } else if (TextUtils.isEmpty(recipientIds[i]) || recipientIds[i].equals(\"-1\")) {\n               addresses[i] \u003d \"Unknown\";\n             } else {\n-              throw new AssertionError(\"Unable to resolve: \" + recipientIds[i]);\n+              throw new AssertionError(\"Unable to resolve: \" + recipientIds[i] + \", recipientIdsList: \u0027\" + recipientIdsList + \"\u0027\");\n             }\n \n             if (resolved !\u003d null) resolved.close();\n",
    "projectName": "Signal-Android",
    "bugLineNum": 998,
    "bugNodeStartChar": 48389,
    "bugNodeLength": 28,
    "fixLineNum": 998,
    "fixNodeStartChar": 48389,
    "fixNodeLength": 66,
    "sourceBeforeFix": "recipientIds[i].equals(\"-1\")",
    "sourceAfterFix": "TextUtils.isEmpty(recipientIds[i]) || recipientIds[i].equals(\"-1\")"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "0ae60da68b86efd5916c27984e474f5e1b39c797",
    "fixCommitParentSHA1": "737810475e8596164a868f4081f2ef11e8d1aa8d",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/DatabaseFactory.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\nindex 5420a60..79d0bbb 100644\n--- a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n+++ b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n@@ -911,14 +911,14 @@\n           long     threadId         \u003d cursor.getLong(0);\n           String   recipientIdsList \u003d cursor.getString(1);\n           String[] recipientIds     \u003d recipientIdsList.split(\" \");\n-          String[] numbers          \u003d new String[recipientIds.length];\n+          String[] addresses         \u003d new String[recipientIds.length];\n \n           for (int i\u003d0;i\u003crecipientIds.length;i++) {\n             Cursor resolved \u003d canonicalAddressDatabase.query(\"canonical_addresses\", new String[] {\"address\"}, \"_id \u003d ?\", new String[] {recipientIds[i]}, null, null, null);\n \n             if (resolved !\u003d null \u0026\u0026 resolved.moveToFirst()) {\n               String address \u003d resolved.getString(0);\n-              numbers[i] \u003d numberMigrator.migrate(address);\n+              addresses[i] \u003d numberMigrator.migrate(address);\n             } else {\n               throw new AssertionError(\"Unable to resolve: \" + recipientIds[i]);\n             }\n@@ -927,7 +927,7 @@\n           }\n \n           ContentValues values \u003d new ContentValues(1);\n-          values.put(\"recipient_ids\", Util.join(numbers, \" \"));\n+          values.put(\"recipient_ids\", Util.join(addresses, \" \"));\n           db.update(\"thread\", values, \"_id \u003d ?\", new String[] {String.valueOf(threadId)});\n         }\n \n@@ -997,7 +997,7 @@\n \n           ContentValues values \u003d new ContentValues(1);\n           values.put(\"recipient_ids\", Util.join(addresses, \" \"));\n-          db.update(\"thread\", values, \"_id \u003d ?\", new String[] {String.valueOf(id)});\n+          db.update(\"recipient_preferences\", values, \"_id \u003d ?\", new String[] {String.valueOf(id)});\n         }\n \n         if (cursor !\u003d null) cursor.close();\n@@ -1337,12 +1337,12 @@\n         if (localNumberImprecise.charAt(0) \u003d\u003d \u0027+\u0027)\n           localNumberImprecise \u003d localNumberImprecise.substring(1);\n \n-        if (localNumberImprecise.length() \u003d\u003d number.length() || number.length() \u003e localNumberImprecise.length())\n+        if (localNumberImprecise.length() \u003d\u003d bareNumber.length() || bareNumber.length() \u003e localNumberImprecise.length())\n           return \"+\" + number;\n \n-        int difference \u003d localNumberImprecise.length() - number.length();\n+        int difference \u003d localNumberImprecise.length() - bareNumber.length();\n \n-        return \"+\" + localNumberImprecise.substring(0, difference) + number;\n+        return \"+\" + localNumberImprecise.substring(0, difference) + bareNumber;\n       }\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 1340,
    "bugNodeStartChar": 62187,
    "bugNodeLength": 15,
    "fixLineNum": 1340,
    "fixNodeStartChar": 62187,
    "fixNodeLength": 19,
    "sourceBeforeFix": "number.length()",
    "sourceAfterFix": "bareNumber.length()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0ae60da68b86efd5916c27984e474f5e1b39c797",
    "fixCommitParentSHA1": "737810475e8596164a868f4081f2ef11e8d1aa8d",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/DatabaseFactory.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\nindex 5420a60..79d0bbb 100644\n--- a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n+++ b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n@@ -911,14 +911,14 @@\n           long     threadId         \u003d cursor.getLong(0);\n           String   recipientIdsList \u003d cursor.getString(1);\n           String[] recipientIds     \u003d recipientIdsList.split(\" \");\n-          String[] numbers          \u003d new String[recipientIds.length];\n+          String[] addresses         \u003d new String[recipientIds.length];\n \n           for (int i\u003d0;i\u003crecipientIds.length;i++) {\n             Cursor resolved \u003d canonicalAddressDatabase.query(\"canonical_addresses\", new String[] {\"address\"}, \"_id \u003d ?\", new String[] {recipientIds[i]}, null, null, null);\n \n             if (resolved !\u003d null \u0026\u0026 resolved.moveToFirst()) {\n               String address \u003d resolved.getString(0);\n-              numbers[i] \u003d numberMigrator.migrate(address);\n+              addresses[i] \u003d numberMigrator.migrate(address);\n             } else {\n               throw new AssertionError(\"Unable to resolve: \" + recipientIds[i]);\n             }\n@@ -927,7 +927,7 @@\n           }\n \n           ContentValues values \u003d new ContentValues(1);\n-          values.put(\"recipient_ids\", Util.join(numbers, \" \"));\n+          values.put(\"recipient_ids\", Util.join(addresses, \" \"));\n           db.update(\"thread\", values, \"_id \u003d ?\", new String[] {String.valueOf(threadId)});\n         }\n \n@@ -997,7 +997,7 @@\n \n           ContentValues values \u003d new ContentValues(1);\n           values.put(\"recipient_ids\", Util.join(addresses, \" \"));\n-          db.update(\"thread\", values, \"_id \u003d ?\", new String[] {String.valueOf(id)});\n+          db.update(\"recipient_preferences\", values, \"_id \u003d ?\", new String[] {String.valueOf(id)});\n         }\n \n         if (cursor !\u003d null) cursor.close();\n@@ -1337,12 +1337,12 @@\n         if (localNumberImprecise.charAt(0) \u003d\u003d \u0027+\u0027)\n           localNumberImprecise \u003d localNumberImprecise.substring(1);\n \n-        if (localNumberImprecise.length() \u003d\u003d number.length() || number.length() \u003e localNumberImprecise.length())\n+        if (localNumberImprecise.length() \u003d\u003d bareNumber.length() || bareNumber.length() \u003e localNumberImprecise.length())\n           return \"+\" + number;\n \n-        int difference \u003d localNumberImprecise.length() - number.length();\n+        int difference \u003d localNumberImprecise.length() - bareNumber.length();\n \n-        return \"+\" + localNumberImprecise.substring(0, difference) + number;\n+        return \"+\" + localNumberImprecise.substring(0, difference) + bareNumber;\n       }\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 1340,
    "bugNodeStartChar": 62187,
    "bugNodeLength": 15,
    "fixLineNum": 1340,
    "fixNodeStartChar": 62187,
    "fixNodeLength": 19,
    "sourceBeforeFix": "number.length()",
    "sourceAfterFix": "bareNumber.length()"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "0ae60da68b86efd5916c27984e474f5e1b39c797",
    "fixCommitParentSHA1": "737810475e8596164a868f4081f2ef11e8d1aa8d",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/DatabaseFactory.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\nindex 5420a60..79d0bbb 100644\n--- a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n+++ b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n@@ -911,14 +911,14 @@\n           long     threadId         \u003d cursor.getLong(0);\n           String   recipientIdsList \u003d cursor.getString(1);\n           String[] recipientIds     \u003d recipientIdsList.split(\" \");\n-          String[] numbers          \u003d new String[recipientIds.length];\n+          String[] addresses         \u003d new String[recipientIds.length];\n \n           for (int i\u003d0;i\u003crecipientIds.length;i++) {\n             Cursor resolved \u003d canonicalAddressDatabase.query(\"canonical_addresses\", new String[] {\"address\"}, \"_id \u003d ?\", new String[] {recipientIds[i]}, null, null, null);\n \n             if (resolved !\u003d null \u0026\u0026 resolved.moveToFirst()) {\n               String address \u003d resolved.getString(0);\n-              numbers[i] \u003d numberMigrator.migrate(address);\n+              addresses[i] \u003d numberMigrator.migrate(address);\n             } else {\n               throw new AssertionError(\"Unable to resolve: \" + recipientIds[i]);\n             }\n@@ -927,7 +927,7 @@\n           }\n \n           ContentValues values \u003d new ContentValues(1);\n-          values.put(\"recipient_ids\", Util.join(numbers, \" \"));\n+          values.put(\"recipient_ids\", Util.join(addresses, \" \"));\n           db.update(\"thread\", values, \"_id \u003d ?\", new String[] {String.valueOf(threadId)});\n         }\n \n@@ -997,7 +997,7 @@\n \n           ContentValues values \u003d new ContentValues(1);\n           values.put(\"recipient_ids\", Util.join(addresses, \" \"));\n-          db.update(\"thread\", values, \"_id \u003d ?\", new String[] {String.valueOf(id)});\n+          db.update(\"recipient_preferences\", values, \"_id \u003d ?\", new String[] {String.valueOf(id)});\n         }\n \n         if (cursor !\u003d null) cursor.close();\n@@ -1337,12 +1337,12 @@\n         if (localNumberImprecise.charAt(0) \u003d\u003d \u0027+\u0027)\n           localNumberImprecise \u003d localNumberImprecise.substring(1);\n \n-        if (localNumberImprecise.length() \u003d\u003d number.length() || number.length() \u003e localNumberImprecise.length())\n+        if (localNumberImprecise.length() \u003d\u003d bareNumber.length() || bareNumber.length() \u003e localNumberImprecise.length())\n           return \"+\" + number;\n \n-        int difference \u003d localNumberImprecise.length() - number.length();\n+        int difference \u003d localNumberImprecise.length() - bareNumber.length();\n \n-        return \"+\" + localNumberImprecise.substring(0, difference) + number;\n+        return \"+\" + localNumberImprecise.substring(0, difference) + bareNumber;\n       }\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 1343,
    "bugNodeStartChar": 62344,
    "bugNodeLength": 15,
    "fixLineNum": 1343,
    "fixNodeStartChar": 62344,
    "fixNodeLength": 19,
    "sourceBeforeFix": "number.length()",
    "sourceAfterFix": "bareNumber.length()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0ae60da68b86efd5916c27984e474f5e1b39c797",
    "fixCommitParentSHA1": "737810475e8596164a868f4081f2ef11e8d1aa8d",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/DatabaseFactory.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\nindex 5420a60..79d0bbb 100644\n--- a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n+++ b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n@@ -911,14 +911,14 @@\n           long     threadId         \u003d cursor.getLong(0);\n           String   recipientIdsList \u003d cursor.getString(1);\n           String[] recipientIds     \u003d recipientIdsList.split(\" \");\n-          String[] numbers          \u003d new String[recipientIds.length];\n+          String[] addresses         \u003d new String[recipientIds.length];\n \n           for (int i\u003d0;i\u003crecipientIds.length;i++) {\n             Cursor resolved \u003d canonicalAddressDatabase.query(\"canonical_addresses\", new String[] {\"address\"}, \"_id \u003d ?\", new String[] {recipientIds[i]}, null, null, null);\n \n             if (resolved !\u003d null \u0026\u0026 resolved.moveToFirst()) {\n               String address \u003d resolved.getString(0);\n-              numbers[i] \u003d numberMigrator.migrate(address);\n+              addresses[i] \u003d numberMigrator.migrate(address);\n             } else {\n               throw new AssertionError(\"Unable to resolve: \" + recipientIds[i]);\n             }\n@@ -927,7 +927,7 @@\n           }\n \n           ContentValues values \u003d new ContentValues(1);\n-          values.put(\"recipient_ids\", Util.join(numbers, \" \"));\n+          values.put(\"recipient_ids\", Util.join(addresses, \" \"));\n           db.update(\"thread\", values, \"_id \u003d ?\", new String[] {String.valueOf(threadId)});\n         }\n \n@@ -997,7 +997,7 @@\n \n           ContentValues values \u003d new ContentValues(1);\n           values.put(\"recipient_ids\", Util.join(addresses, \" \"));\n-          db.update(\"thread\", values, \"_id \u003d ?\", new String[] {String.valueOf(id)});\n+          db.update(\"recipient_preferences\", values, \"_id \u003d ?\", new String[] {String.valueOf(id)});\n         }\n \n         if (cursor !\u003d null) cursor.close();\n@@ -1337,12 +1337,12 @@\n         if (localNumberImprecise.charAt(0) \u003d\u003d \u0027+\u0027)\n           localNumberImprecise \u003d localNumberImprecise.substring(1);\n \n-        if (localNumberImprecise.length() \u003d\u003d number.length() || number.length() \u003e localNumberImprecise.length())\n+        if (localNumberImprecise.length() \u003d\u003d bareNumber.length() || bareNumber.length() \u003e localNumberImprecise.length())\n           return \"+\" + number;\n \n-        int difference \u003d localNumberImprecise.length() - number.length();\n+        int difference \u003d localNumberImprecise.length() - bareNumber.length();\n \n-        return \"+\" + localNumberImprecise.substring(0, difference) + number;\n+        return \"+\" + localNumberImprecise.substring(0, difference) + bareNumber;\n       }\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 1343,
    "bugNodeStartChar": 62344,
    "bugNodeLength": 15,
    "fixLineNum": 1343,
    "fixNodeStartChar": 62344,
    "fixNodeLength": 19,
    "sourceBeforeFix": "number.length()",
    "sourceAfterFix": "bareNumber.length()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0ae60da68b86efd5916c27984e474f5e1b39c797",
    "fixCommitParentSHA1": "737810475e8596164a868f4081f2ef11e8d1aa8d",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/DatabaseFactory.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\nindex 5420a60..79d0bbb 100644\n--- a/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n+++ b/src/org/thoughtcrime/securesms/database/DatabaseFactory.java\n@@ -911,14 +911,14 @@\n           long     threadId         \u003d cursor.getLong(0);\n           String   recipientIdsList \u003d cursor.getString(1);\n           String[] recipientIds     \u003d recipientIdsList.split(\" \");\n-          String[] numbers          \u003d new String[recipientIds.length];\n+          String[] addresses         \u003d new String[recipientIds.length];\n \n           for (int i\u003d0;i\u003crecipientIds.length;i++) {\n             Cursor resolved \u003d canonicalAddressDatabase.query(\"canonical_addresses\", new String[] {\"address\"}, \"_id \u003d ?\", new String[] {recipientIds[i]}, null, null, null);\n \n             if (resolved !\u003d null \u0026\u0026 resolved.moveToFirst()) {\n               String address \u003d resolved.getString(0);\n-              numbers[i] \u003d numberMigrator.migrate(address);\n+              addresses[i] \u003d numberMigrator.migrate(address);\n             } else {\n               throw new AssertionError(\"Unable to resolve: \" + recipientIds[i]);\n             }\n@@ -927,7 +927,7 @@\n           }\n \n           ContentValues values \u003d new ContentValues(1);\n-          values.put(\"recipient_ids\", Util.join(numbers, \" \"));\n+          values.put(\"recipient_ids\", Util.join(addresses, \" \"));\n           db.update(\"thread\", values, \"_id \u003d ?\", new String[] {String.valueOf(threadId)});\n         }\n \n@@ -997,7 +997,7 @@\n \n           ContentValues values \u003d new ContentValues(1);\n           values.put(\"recipient_ids\", Util.join(addresses, \" \"));\n-          db.update(\"thread\", values, \"_id \u003d ?\", new String[] {String.valueOf(id)});\n+          db.update(\"recipient_preferences\", values, \"_id \u003d ?\", new String[] {String.valueOf(id)});\n         }\n \n         if (cursor !\u003d null) cursor.close();\n@@ -1337,12 +1337,12 @@\n         if (localNumberImprecise.charAt(0) \u003d\u003d \u0027+\u0027)\n           localNumberImprecise \u003d localNumberImprecise.substring(1);\n \n-        if (localNumberImprecise.length() \u003d\u003d number.length() || number.length() \u003e localNumberImprecise.length())\n+        if (localNumberImprecise.length() \u003d\u003d bareNumber.length() || bareNumber.length() \u003e localNumberImprecise.length())\n           return \"+\" + number;\n \n-        int difference \u003d localNumberImprecise.length() - number.length();\n+        int difference \u003d localNumberImprecise.length() - bareNumber.length();\n \n-        return \"+\" + localNumberImprecise.substring(0, difference) + number;\n+        return \"+\" + localNumberImprecise.substring(0, difference) + bareNumber;\n       }\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 1345,
    "bugNodeStartChar": 62377,
    "bugNodeLength": 60,
    "fixLineNum": 1345,
    "fixNodeStartChar": 62377,
    "fixNodeLength": 64,
    "sourceBeforeFix": "\"+\" + localNumberImprecise.substring(0,difference) + number",
    "sourceAfterFix": "\"+\" + localNumberImprecise.substring(0,difference) + bareNumber"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "0b39224d88e0ce3a063b8b642509e664df255791",
    "fixCommitParentSHA1": "82b5b35d3b57f4024621e4a562836f8abe6e9214",
    "bugFilePath": "src/org/thoughtcrime/securesms/util/Util.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/util/Util.java b/src/org/thoughtcrime/securesms/util/Util.java\nindex 0848bd9..453afbc 100644\n--- a/src/org/thoughtcrime/securesms/util/Util.java\n+++ b/src/org/thoughtcrime/securesms/util/Util.java\n@@ -428,7 +428,7 @@\n     ActivityManager activityManager \u003d (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);\n \n     return (VERSION.SDK_INT \u003e\u003d VERSION_CODES.KITKAT \u0026\u0026 activityManager.isLowRamDevice()) ||\n-           activityManager.getMemoryClass() \u003c\u003d 64;\n+           activityManager.getLargeMemoryClass() \u003c\u003d 64;\n   }\n \n   public static int clamp(int value, int min, int max) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 431,
    "bugNodeStartChar": 13116,
    "bugNodeLength": 32,
    "fixLineNum": 431,
    "fixNodeStartChar": 13116,
    "fixNodeLength": 37,
    "sourceBeforeFix": "activityManager.getMemoryClass()",
    "sourceAfterFix": "activityManager.getLargeMemoryClass()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0b39224d88e0ce3a063b8b642509e664df255791",
    "fixCommitParentSHA1": "82b5b35d3b57f4024621e4a562836f8abe6e9214",
    "bugFilePath": "src/org/thoughtcrime/securesms/util/Util.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/util/Util.java b/src/org/thoughtcrime/securesms/util/Util.java\nindex 0848bd9..453afbc 100644\n--- a/src/org/thoughtcrime/securesms/util/Util.java\n+++ b/src/org/thoughtcrime/securesms/util/Util.java\n@@ -428,7 +428,7 @@\n     ActivityManager activityManager \u003d (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);\n \n     return (VERSION.SDK_INT \u003e\u003d VERSION_CODES.KITKAT \u0026\u0026 activityManager.isLowRamDevice()) ||\n-           activityManager.getMemoryClass() \u003c\u003d 64;\n+           activityManager.getLargeMemoryClass() \u003c\u003d 64;\n   }\n \n   public static int clamp(int value, int min, int max) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 431,
    "bugNodeStartChar": 13116,
    "bugNodeLength": 32,
    "fixLineNum": 431,
    "fixNodeStartChar": 13116,
    "fixNodeLength": 37,
    "sourceBeforeFix": "activityManager.getMemoryClass()",
    "sourceAfterFix": "activityManager.getLargeMemoryClass()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3d7331159fa43056df1d51bf8f668e0a154b6c1c",
    "fixCommitParentSHA1": "662fe826cbf14b1620850d8db47b88cdc910aae5",
    "bugFilePath": "src/org/thoughtcrime/securesms/ApplicationPreferencesActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ApplicationPreferencesActivity.java b/src/org/thoughtcrime/securesms/ApplicationPreferencesActivity.java\nindex ada1ad0..0266765 100644\n--- a/src/org/thoughtcrime/securesms/ApplicationPreferencesActivity.java\n+++ b/src/org/thoughtcrime/securesms/ApplicationPreferencesActivity.java\n@@ -215,7 +215,7 @@\n       this.findPreference(PREFERENCE_CATEGORY_APPEARANCE).setIcon(appearance);\n       this.findPreference(PREFERENCE_CATEGORY_CHATS).setIcon(chats);\n       this.findPreference(PREFERENCE_CATEGORY_DEVICES).setIcon(devices);\n-      this.findPreference(PREFERENCE_CATEGORY_ADVANCED).setIcon(appearance);\n+      this.findPreference(PREFERENCE_CATEGORY_ADVANCED).setIcon(advanced);\n     }\n \n     private class CategoryClickListener implements Preference.OnPreferenceClickListener {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 218,
    "bugNodeStartChar": 10265,
    "bugNodeLength": 69,
    "fixLineNum": 218,
    "fixNodeStartChar": 10265,
    "fixNodeLength": 67,
    "sourceBeforeFix": "this.findPreference(PREFERENCE_CATEGORY_ADVANCED).setIcon(appearance)",
    "sourceAfterFix": "this.findPreference(PREFERENCE_CATEGORY_ADVANCED).setIcon(advanced)"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "ec1a0547d6e9299ce451e2da1216583f0570b880",
    "fixCommitParentSHA1": "d50775682196839a78c534c96898b07c65480678",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationListItem.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationListItem.java b/src/org/thoughtcrime/securesms/ConversationListItem.java\nindex ed231c7..141d940 100644\n--- a/src/org/thoughtcrime/securesms/ConversationListItem.java\n+++ b/src/org/thoughtcrime/securesms/ConversationListItem.java\n@@ -202,7 +202,7 @@\n   }\n \n   private void setStatusIcons(ThreadRecord thread) {\n-    if (!thread.isOutgoing()) {\n+    if (!thread.isOutgoing() || thread.isOutgoingCall()) {\n       deliveryStatusIndicator.setNone();\n       alertView.setNone();\n     } else if (thread.isFailed()) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 205,
    "bugNodeStartChar": 7912,
    "bugNodeLength": 20,
    "fixLineNum": 205,
    "fixNodeStartChar": 7912,
    "fixNodeLength": 47,
    "sourceBeforeFix": "!thread.isOutgoing()",
    "sourceAfterFix": "!thread.isOutgoing() || thread.isOutgoingCall()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "12ce92bb8378152b99cb72f0b837d0aae56fd2b3",
    "fixCommitParentSHA1": "b0b08a37db81f93b82e89b65243e4ab124d52827",
    "bugFilePath": "src/org/thoughtcrime/securesms/ContactSelectionListFragment.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ContactSelectionListFragment.java b/src/org/thoughtcrime/securesms/ContactSelectionListFragment.java\nindex 131de64..15cdcc2 100644\n--- a/src/org/thoughtcrime/securesms/ContactSelectionListFragment.java\n+++ b/src/org/thoughtcrime/securesms/ContactSelectionListFragment.java\n@@ -74,7 +74,7 @@\n \n   @Override\n   public void onActivityCreated(Bundle icicle) {\n-    super.onCreate(icicle);\n+    super.onActivityCreated(icicle);\n     initializeCursor();\n   }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 77,
    "bugNodeStartChar": 3007,
    "bugNodeLength": 22,
    "fixLineNum": 77,
    "fixNodeStartChar": 3007,
    "fixNodeLength": 31,
    "sourceBeforeFix": "super.onCreate(icicle)",
    "sourceAfterFix": "super.onActivityCreated(icicle)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "ddf6126abf05548b3bb777e135361c2a7e4fa0f2",
    "fixCommitParentSHA1": "c389a9d3cee06ab47e59faad35cd4d2c800a6b84",
    "bugFilePath": "src/org/thoughtcrime/securesms/video/VideoPlayer.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/video/VideoPlayer.java b/src/org/thoughtcrime/securesms/video/VideoPlayer.java\nindex 3e1f602..6a61d7c 100644\n--- a/src/org/thoughtcrime/securesms/video/VideoPlayer.java\n+++ b/src/org/thoughtcrime/securesms/video/VideoPlayer.java\n@@ -75,7 +75,7 @@\n   public void setVideoSource(@NonNull MasterSecret masterSecret, @NonNull VideoSlide videoSource)\n       throws IOException\n   {\n-    if (Build.VERSION.SDK_INT \u003e\u003d 14) setExoViewSource(masterSecret, videoSource);\n+    if (Build.VERSION.SDK_INT \u003e\u003d 16) setExoViewSource(masterSecret, videoSource);\n     else                             setVideoViewSource(masterSecret, videoSource);\n   }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 78,
    "bugNodeStartChar": 2940,
    "bugNodeLength": 27,
    "fixLineNum": 78,
    "fixNodeStartChar": 2940,
    "fixNodeLength": 27,
    "sourceBeforeFix": "Build.VERSION.SDK_INT \u003e\u003d 14",
    "sourceAfterFix": "Build.VERSION.SDK_INT \u003e\u003d 16"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "c69efbffd2fd21103d3ef43d7fc80b28357b5aa6",
    "fixCommitParentSHA1": "3dfc72dad0e3182f06c96b4f61c7be31bb483849",
    "bugFilePath": "src/org/thoughtcrime/securesms/service/WebRtcCallService.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/service/WebRtcCallService.java b/src/org/thoughtcrime/securesms/service/WebRtcCallService.java\nindex ab722b5..119ee0a 100644\n--- a/src/org/thoughtcrime/securesms/service/WebRtcCallService.java\n+++ b/src/org/thoughtcrime/securesms/service/WebRtcCallService.java\n@@ -748,7 +748,11 @@\n       else                   this.lockManager.updatePhoneState(LockManager.PhoneState.IN_CALL);\n     }\n \n-    if (localVideoEnabled \u0026\u0026 !audioManager.isSpeakerphoneOn() \u0026\u0026 !audioManager.isBluetoothScoOn()) {\n+    if (localVideoEnabled \u0026\u0026\n+        !audioManager.isSpeakerphoneOn() \u0026\u0026\n+        !audioManager.isBluetoothScoOn() \u0026\u0026\n+        !audioManager.isWiredHeadsetOn())\n+    {\n       audioManager.setSpeakerphoneOn(true);\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 751,
    "bugNodeStartChar": 34325,
    "bugNodeLength": 89,
    "fixLineNum": 751,
    "fixNodeStartChar": 34325,
    "fixNodeLength": 149,
    "sourceBeforeFix": "localVideoEnabled \u0026\u0026 !audioManager.isSpeakerphoneOn() \u0026\u0026 !audioManager.isBluetoothScoOn()",
    "sourceAfterFix": "localVideoEnabled \u0026\u0026 !audioManager.isSpeakerphoneOn() \u0026\u0026 !audioManager.isBluetoothScoOn()\u0026\u0026 !audioManager.isWiredHeadsetOn()"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "12b27cc56b5a1cd63f3be2e9a908217112193a55",
    "fixCommitParentSHA1": "1683bb4636d46c7022b3f1d91bdbbcf51ee5861f",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex 85e1843..d0ae41c 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -974,7 +974,10 @@\n   }\n \n   private void initializeBetaCalling() {\n-    if (!TextSecurePreferences.isWebrtcCallingEnabled(this) || isGroupConversation()) {\n+    if (!TextSecurePreferences.isPushRegistered(this)       ||\n+        !TextSecurePreferences.isWebrtcCallingEnabled(this) ||\n+        isGroupConversation())\n+    {\n       return;\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 977,
    "bugNodeStartChar": 39930,
    "bugNodeLength": 76,
    "fixLineNum": 977,
    "fixNodeStartChar": 39930,
    "fixNodeLength": 147,
    "sourceBeforeFix": "!TextSecurePreferences.isWebrtcCallingEnabled(this) || isGroupConversation()",
    "sourceAfterFix": "!TextSecurePreferences.isPushRegistered(this) || !TextSecurePreferences.isWebrtcCallingEnabled(this) || isGroupConversation()"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "cf891edce940d2ad9e3c9a75a1f6d4f705558277",
    "fixCommitParentSHA1": "f541e33356e2dece8d8fc0259894b589699bb086",
    "bugFilePath": "src/org/thoughtcrime/securesms/notifications/MessageNotifier.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/notifications/MessageNotifier.java b/src/org/thoughtcrime/securesms/notifications/MessageNotifier.java\nindex 8dc15df..049b1e2 100644\n--- a/src/org/thoughtcrime/securesms/notifications/MessageNotifier.java\n+++ b/src/org/thoughtcrime/securesms/notifications/MessageNotifier.java\n@@ -542,7 +542,7 @@\n         protected Void doInBackground(Void... params) {\n           MasterSecret masterSecret  \u003d KeyCachingService.getMasterSecret(context);\n           int          reminderCount \u003d intent.getIntExtra(\"reminder_count\", 0);\n-          MessageNotifier.updateNotification(context, masterSecret, true, true, reminderCount + 1);\n+          MessageNotifier.updateNotification(context, masterSecret, true, false, reminderCount + 1);\n \n           return null;\n         }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 545,
    "bugNodeStartChar": 22994,
    "bugNodeLength": 88,
    "fixLineNum": 545,
    "fixNodeStartChar": 22994,
    "fixNodeLength": 89,
    "sourceBeforeFix": "MessageNotifier.updateNotification(context,masterSecret,true,true,reminderCount + 1)",
    "sourceAfterFix": "MessageNotifier.updateNotification(context,masterSecret,true,false,reminderCount + 1)"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "2408bd4d65b391741757d0e6f0a6618385187114",
    "fixCommitParentSHA1": "94c61f8af93c293710fd6fc0037b064e836c622b",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex 795fd75..513ce4b 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -946,7 +946,7 @@\n   }\n \n   private void initializeBetaCalling() {\n-    if (!TextSecurePreferences.isWebrtcCallingEnabled(this)) {\n+    if (!TextSecurePreferences.isWebrtcCallingEnabled(this) || isGroupConversation()) {\n       return;\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 949,
    "bugNodeStartChar": 39045,
    "bugNodeLength": 51,
    "fixLineNum": 949,
    "fixNodeStartChar": 39045,
    "fixNodeLength": 76,
    "sourceBeforeFix": "!TextSecurePreferences.isWebrtcCallingEnabled(this)",
    "sourceAfterFix": "!TextSecurePreferences.isWebrtcCallingEnabled(this) || isGroupConversation()"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "a6488b3652fbf34e74e6dd9c0ba1ac53d47948ec",
    "fixCommitParentSHA1": "cde92256a67c9d7119d609a57e8fb590f02ca77b",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/PushSendJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/PushSendJob.java b/src/org/thoughtcrime/securesms/jobs/PushSendJob.java\nindex 6f79d5f..ca23d00 100644\n--- a/src/org/thoughtcrime/securesms/jobs/PushSendJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/PushSendJob.java\n@@ -63,7 +63,7 @@\n           ContentType.isVideoType(attachment.getContentType()))\n       {\n         try {\n-          if (attachment.getDataUri() \u003d\u003d null) throw new IOException(\"Assertion failed, outgoing attachment has no data!\");\n+          if (attachment.getDataUri() \u003d\u003d null || attachment.getSize() \u003d\u003d 0) throw new IOException(\"Assertion failed, outgoing attachment has no data!\");\n           InputStream is \u003d PartAuthority.getAttachmentStream(context, masterSecret, attachment.getDataUri());\n           attachments.add(SignalServiceAttachment.newStreamBuilder()\n                                                  .withStream(is)\n",
    "projectName": "Signal-Android",
    "bugLineNum": 66,
    "bugNodeStartChar": 2825,
    "bugNodeLength": 31,
    "fixLineNum": 66,
    "fixNodeStartChar": 2825,
    "fixNodeLength": 60,
    "sourceBeforeFix": "attachment.getDataUri() \u003d\u003d null",
    "sourceAfterFix": "attachment.getDataUri() \u003d\u003d null || attachment.getSize() \u003d\u003d 0"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "a6488b3652fbf34e74e6dd9c0ba1ac53d47948ec",
    "fixCommitParentSHA1": "cde92256a67c9d7119d609a57e8fb590f02ca77b",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/PushSendJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/PushSendJob.java b/src/org/thoughtcrime/securesms/jobs/PushSendJob.java\nindex 6f79d5f..ca23d00 100644\n--- a/src/org/thoughtcrime/securesms/jobs/PushSendJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/PushSendJob.java\n@@ -63,7 +63,7 @@\n           ContentType.isVideoType(attachment.getContentType()))\n       {\n         try {\n-          if (attachment.getDataUri() \u003d\u003d null) throw new IOException(\"Assertion failed, outgoing attachment has no data!\");\n+          if (attachment.getDataUri() \u003d\u003d null || attachment.getSize() \u003d\u003d 0) throw new IOException(\"Assertion failed, outgoing attachment has no data!\");\n           InputStream is \u003d PartAuthority.getAttachmentStream(context, masterSecret, attachment.getDataUri());\n           attachments.add(SignalServiceAttachment.newStreamBuilder()\n                                                  .withStream(is)\n",
    "projectName": "Signal-Android",
    "bugLineNum": 66,
    "bugNodeStartChar": 2825,
    "bugNodeLength": 31,
    "fixLineNum": 66,
    "fixNodeStartChar": 2825,
    "fixNodeLength": 60,
    "sourceBeforeFix": "attachment.getDataUri() \u003d\u003d null",
    "sourceAfterFix": "attachment.getDataUri() \u003d\u003d null || attachment.getSize() \u003d\u003d 0"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "469f41b955305a7ffe53d6e9e46d8aaa55eedee3",
    "fixCommitParentSHA1": "80a96aa83ca0bfd8cf2260bc95601e740f316bdf",
    "bugFilePath": "src/org/thoughtcrime/securesms/giph/ui/GiphyFragment.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/giph/ui/GiphyFragment.java b/src/org/thoughtcrime/securesms/giph/ui/GiphyFragment.java\nindex d90065c..b465b43 100644\n--- a/src/org/thoughtcrime/securesms/giph/ui/GiphyFragment.java\n+++ b/src/org/thoughtcrime/securesms/giph/ui/GiphyFragment.java\n@@ -66,7 +66,7 @@\n   public void onLoadFinished(Loader\u003cList\u003cGiphyImage\u003e\u003e loader, List\u003cGiphyImage\u003e data) {\n     this.loadingProgress.setVisibility(View.GONE);\n \n-    if (data.isEmpty()) noResultsView.setVisibility(View.VISIBLE);\n+    if (data \u003d\u003d null || data.isEmpty()) noResultsView.setVisibility(View.VISIBLE);\n     else                noResultsView.setVisibility(View.GONE);\n \n     this.giphyAdapter.setImages(data);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 69,
    "bugNodeStartChar": 2667,
    "bugNodeLength": 14,
    "fixLineNum": 69,
    "fixNodeStartChar": 2667,
    "fixNodeLength": 30,
    "sourceBeforeFix": "data.isEmpty()",
    "sourceAfterFix": "data \u003d\u003d null || data.isEmpty()"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "b54a271a753fd31dcea77e258e5df5188f1da156",
    "fixCommitParentSHA1": "23544fae8a259fcd38162a27aa53221175b4ab7e",
    "bugFilePath": "src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java b/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java\nindex d505ebe..33f22f8 100644\n--- a/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java\n+++ b/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java\n@@ -6,7 +6,7 @@\n \n public class PushMediaConstraints extends MediaConstraints {\n   private static final int MAX_IMAGE_DIMEN_LOWMEM \u003d 768;\n-  private static final int MAX_IMAGE_DIMEN        \u003d 1280;\n+  private static final int MAX_IMAGE_DIMEN        \u003d 2048;\n   private static final int KB                     \u003d 1024;\n   private static final int MB                     \u003d 1024 * KB;\n \n@@ -22,7 +22,7 @@\n \n   @Override\n   public int getImageMaxSize() {\n-    return 420 * KB;\n+    return 4 * MB;\n   }\n \n   @Override\n",
    "projectName": "Signal-Android",
    "bugLineNum": 9,
    "bugNodeStartChar": 265,
    "bugNodeLength": 29,
    "fixLineNum": 9,
    "fixNodeStartChar": 265,
    "fixNodeLength": 29,
    "sourceBeforeFix": "MAX_IMAGE_DIMEN\u003d1280",
    "sourceAfterFix": "MAX_IMAGE_DIMEN\u003d2048"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "b54a271a753fd31dcea77e258e5df5188f1da156",
    "fixCommitParentSHA1": "23544fae8a259fcd38162a27aa53221175b4ab7e",
    "bugFilePath": "src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java b/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java\nindex d505ebe..33f22f8 100644\n--- a/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java\n+++ b/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java\n@@ -6,7 +6,7 @@\n \n public class PushMediaConstraints extends MediaConstraints {\n   private static final int MAX_IMAGE_DIMEN_LOWMEM \u003d 768;\n-  private static final int MAX_IMAGE_DIMEN        \u003d 1280;\n+  private static final int MAX_IMAGE_DIMEN        \u003d 2048;\n   private static final int KB                     \u003d 1024;\n   private static final int MB                     \u003d 1024 * KB;\n \n@@ -22,7 +22,7 @@\n \n   @Override\n   public int getImageMaxSize() {\n-    return 420 * KB;\n+    return 4 * MB;\n   }\n \n   @Override\n",
    "projectName": "Signal-Android",
    "bugLineNum": 25,
    "bugNodeStartChar": 726,
    "bugNodeLength": 8,
    "fixLineNum": 25,
    "fixNodeStartChar": 726,
    "fixNodeLength": 6,
    "sourceBeforeFix": "420 * KB",
    "sourceAfterFix": "4 * MB"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8b9e0b7ab832c6e0d0c614bab0e38602d5b97017",
    "fixCommitParentSHA1": "14d73d82c396cc100ed4cf9ebe17881d1fc096ba",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationAdapter.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationAdapter.java b/src/org/thoughtcrime/securesms/ConversationAdapter.java\nindex 88f5501..23bc221 100644\n--- a/src/org/thoughtcrime/securesms/ConversationAdapter.java\n+++ b/src/org/thoughtcrime/securesms/ConversationAdapter.java\n@@ -196,7 +196,7 @@\n     MessageRecord messageRecord \u003d getMessageRecord(id, cursor, type);\n \n     if (messageRecord.isGroupAction() || messageRecord.isCallLog() || messageRecord.isJoined() || \n-        messageRecord.isExpirationTimerUpdate() || messageRecord.isEndSessin() || messageRecord.isIdentityUpdate()) \n+        messageRecord.isExpirationTimerUpdate() || messageRecord.isEndSession() || messageRecord.isIdentityUpdate()) \n    {\n       return MESSAGE_TYPE_UPDATE;\n     } else if (messageRecord.isOutgoing()) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 199,
    "bugNodeStartChar": 7625,
    "bugNodeLength": 27,
    "fixLineNum": 199,
    "fixNodeStartChar": 7625,
    "fixNodeLength": 28,
    "sourceBeforeFix": "messageRecord.isEndSessin()",
    "sourceAfterFix": "messageRecord.isEndSession()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8b9e0b7ab832c6e0d0c614bab0e38602d5b97017",
    "fixCommitParentSHA1": "14d73d82c396cc100ed4cf9ebe17881d1fc096ba",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationAdapter.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationAdapter.java b/src/org/thoughtcrime/securesms/ConversationAdapter.java\nindex 88f5501..23bc221 100644\n--- a/src/org/thoughtcrime/securesms/ConversationAdapter.java\n+++ b/src/org/thoughtcrime/securesms/ConversationAdapter.java\n@@ -196,7 +196,7 @@\n     MessageRecord messageRecord \u003d getMessageRecord(id, cursor, type);\n \n     if (messageRecord.isGroupAction() || messageRecord.isCallLog() || messageRecord.isJoined() || \n-        messageRecord.isExpirationTimerUpdate() || messageRecord.isEndSessin() || messageRecord.isIdentityUpdate()) \n+        messageRecord.isExpirationTimerUpdate() || messageRecord.isEndSession() || messageRecord.isIdentityUpdate()) \n    {\n       return MESSAGE_TYPE_UPDATE;\n     } else if (messageRecord.isOutgoing()) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 199,
    "bugNodeStartChar": 7625,
    "bugNodeLength": 27,
    "fixLineNum": 199,
    "fixNodeStartChar": 7625,
    "fixNodeLength": 28,
    "sourceBeforeFix": "messageRecord.isEndSessin()",
    "sourceAfterFix": "messageRecord.isEndSession()"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "796940bda53cc8c3c14f8f9390439cf75073e11e",
    "fixCommitParentSHA1": "00a18f58a7398f2b1544dcc72c8aef391ea5c19f",
    "bugFilePath": "src/org/thoughtcrime/securesms/contacts/ContactSelectionListItem.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/contacts/ContactSelectionListItem.java b/src/org/thoughtcrime/securesms/contacts/ContactSelectionListItem.java\nindex 6638d1e..c7b16a6 100644\n--- a/src/org/thoughtcrime/securesms/contacts/ContactSelectionListItem.java\n+++ b/src/org/thoughtcrime/securesms/contacts/ContactSelectionListItem.java\n@@ -58,7 +58,9 @@\n     } else if (!TextUtils.isEmpty(number)) {\n       this.recipients \u003d RecipientFactory.getRecipientsFromString(getContext(), number, true);\n \n-      if (this.recipients.getPrimaryRecipient().getName() !\u003d null) {\n+      if (this.recipients.getPrimaryRecipient() !\u003d null \u0026\u0026\n+          this.recipients.getPrimaryRecipient().getName() !\u003d null)\n+      {\n         name \u003d this.recipients.getPrimaryRecipient().getName();\n       }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 61,
    "bugNodeStartChar": 2195,
    "bugNodeLength": 55,
    "fixLineNum": 61,
    "fixNodeStartChar": 2195,
    "fixNodeLength": 114,
    "sourceBeforeFix": "this.recipients.getPrimaryRecipient().getName() !\u003d null",
    "sourceAfterFix": "this.recipients.getPrimaryRecipient() !\u003d null \u0026\u0026 this.recipients.getPrimaryRecipient().getName() !\u003d null"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "60ab71099f2b516ce43aad6160f8ae698cf4d36a",
    "fixCommitParentSHA1": "3f6cdd413320eaa804415ff0142a4d866d4ea965",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/ThreadDatabase.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/ThreadDatabase.java b/src/org/thoughtcrime/securesms/database/ThreadDatabase.java\nindex ff24dae..c16ab17 100644\n--- a/src/org/thoughtcrime/securesms/database/ThreadDatabase.java\n+++ b/src/org/thoughtcrime/securesms/database/ThreadDatabase.java\n@@ -436,7 +436,7 @@\n   }\n \n   private @Nullable Uri getAttachmentUriFor(MessageRecord record) {\n-    if (!record.isMms() || record.isMmsNotification()) return null;\n+    if (!record.isMms() || record.isMmsNotification() || record.isGroupAction()) return null;\n \n     SlideDeck slideDeck \u003d ((MediaMmsMessageRecord)record).getSlideDeck();\n     Slide     thumbnail \u003d slideDeck.getThumbnailSlide();\n",
    "projectName": "Signal-Android",
    "bugLineNum": 439,
    "bugNodeStartChar": 16194,
    "bugNodeLength": 45,
    "fixLineNum": 439,
    "fixNodeStartChar": 16194,
    "fixNodeLength": 71,
    "sourceBeforeFix": "!record.isMms() || record.isMmsNotification()",
    "sourceAfterFix": "!record.isMms() || record.isMmsNotification() || record.isGroupAction()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f6a5f117b82d01ead706fcf298444aaed2257127",
    "fixCommitParentSHA1": "46def68776a6e6ff91971891361a4cfffb746d9a",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/AttachmentDatabase.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/AttachmentDatabase.java b/src/org/thoughtcrime/securesms/database/AttachmentDatabase.java\nindex 43d4d9d..7dae60b 100644\n--- a/src/org/thoughtcrime/securesms/database/AttachmentDatabase.java\n+++ b/src/org/thoughtcrime/securesms/database/AttachmentDatabase.java\n@@ -150,7 +150,7 @@\n     notifyConversationListeners(DatabaseFactory.getMmsDatabase(context).getThreadIdForMessage(mmsId));\n   }\n \n-  public @Nullable Attachment getAttachment(AttachmentId attachmentId) {\n+  public @Nullable DatabaseAttachment getAttachment(AttachmentId attachmentId) {\n     SQLiteDatabase database \u003d databaseHelper.getReadableDatabase();\n     Cursor cursor           \u003d null;\n \n@@ -518,9 +518,9 @@\n         return stream;\n       }\n \n-      Attachment attachment \u003d getAttachment(attachmentId);\n+      DatabaseAttachment attachment \u003d getAttachment(attachmentId);\n \n-      if (attachment \u003d\u003d null || attachment.isInProgress()) {\n+      if (attachment \u003d\u003d null || !attachment.hasData()) {\n         return null;\n       }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 153,
    "bugNodeStartChar": 6973,
    "bugNodeLength": 520,
    "fixLineNum": 153,
    "fixNodeStartChar": 6973,
    "fixNodeLength": 528,
    "sourceBeforeFix": "public @Nullable Attachment getAttachment(AttachmentId attachmentId){   SQLiteDatabase database\u003ddatabaseHelper.getReadableDatabase();   Cursor cursor\u003dnull;   try {     cursor\u003ddatabase.query(TABLE_NAME,PROJECTION,PART_ID_WHERE,attachmentId.toStrings(),null,null,null);     if (cursor !\u003d null \u0026\u0026 cursor.moveToFirst())     return getAttachment(cursor);  else     return null;   }   finally {     if (cursor !\u003d null)     cursor.close();   } } ",
    "sourceAfterFix": "public @Nullable DatabaseAttachment getAttachment(AttachmentId attachmentId){   SQLiteDatabase database\u003ddatabaseHelper.getReadableDatabase();   Cursor cursor\u003dnull;   try {     cursor\u003ddatabase.query(TABLE_NAME,PROJECTION,PART_ID_WHERE,attachmentId.toStrings(),null,null,null);     if (cursor !\u003d null \u0026\u0026 cursor.moveToFirst())     return getAttachment(cursor);  else     return null;   }   finally {     if (cursor !\u003d null)     cursor.close();   } } "
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f6a5f117b82d01ead706fcf298444aaed2257127",
    "fixCommitParentSHA1": "46def68776a6e6ff91971891361a4cfffb746d9a",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/AttachmentDatabase.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/AttachmentDatabase.java b/src/org/thoughtcrime/securesms/database/AttachmentDatabase.java\nindex 43d4d9d..7dae60b 100644\n--- a/src/org/thoughtcrime/securesms/database/AttachmentDatabase.java\n+++ b/src/org/thoughtcrime/securesms/database/AttachmentDatabase.java\n@@ -150,7 +150,7 @@\n     notifyConversationListeners(DatabaseFactory.getMmsDatabase(context).getThreadIdForMessage(mmsId));\n   }\n \n-  public @Nullable Attachment getAttachment(AttachmentId attachmentId) {\n+  public @Nullable DatabaseAttachment getAttachment(AttachmentId attachmentId) {\n     SQLiteDatabase database \u003d databaseHelper.getReadableDatabase();\n     Cursor cursor           \u003d null;\n \n@@ -518,9 +518,9 @@\n         return stream;\n       }\n \n-      Attachment attachment \u003d getAttachment(attachmentId);\n+      DatabaseAttachment attachment \u003d getAttachment(attachmentId);\n \n-      if (attachment \u003d\u003d null || attachment.isInProgress()) {\n+      if (attachment \u003d\u003d null || !attachment.hasData()) {\n         return null;\n       }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 521,
    "bugNodeStartChar": 21382,
    "bugNodeLength": 52,
    "fixLineNum": 521,
    "fixNodeStartChar": 21382,
    "fixNodeLength": 60,
    "sourceBeforeFix": "Attachment attachment\u003dgetAttachment(attachmentId); ",
    "sourceAfterFix": "DatabaseAttachment attachment\u003dgetAttachment(attachmentId); "
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "450128ed6331d91ae134ab0c7221988383d0bf03",
    "fixCommitParentSHA1": "e4cd2cadf65dd490c21c06ee47065441e694030f",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex 6809c1f..58a6883 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -775,7 +775,7 @@\n   {\n     final SettableFuture\u003cBoolean\u003e future \u003d new SettableFuture\u003c\u003e();\n \n-    handleSecurityChange(currentSecureText || isGroupConversation(),\n+    handleSecurityChange(currentSecureText || isPushGroupConversation(),\n                          currentSecureVoice \u0026\u0026 !isGroupConversation());\n \n     new AsyncTask\u003cRecipients, Void, Pair\u003cBoolean, Boolean\u003e\u003e() {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 778,
    "bugNodeStartChar": 31702,
    "bugNodeLength": 21,
    "fixLineNum": 778,
    "fixNodeStartChar": 31702,
    "fixNodeLength": 25,
    "sourceBeforeFix": "isGroupConversation()",
    "sourceAfterFix": "isPushGroupConversation()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "450128ed6331d91ae134ab0c7221988383d0bf03",
    "fixCommitParentSHA1": "e4cd2cadf65dd490c21c06ee47065441e694030f",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex 6809c1f..58a6883 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -775,7 +775,7 @@\n   {\n     final SettableFuture\u003cBoolean\u003e future \u003d new SettableFuture\u003c\u003e();\n \n-    handleSecurityChange(currentSecureText || isGroupConversation(),\n+    handleSecurityChange(currentSecureText || isPushGroupConversation(),\n                          currentSecureVoice \u0026\u0026 !isGroupConversation());\n \n     new AsyncTask\u003cRecipients, Void, Pair\u003cBoolean, Boolean\u003e\u003e() {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 778,
    "bugNodeStartChar": 31702,
    "bugNodeLength": 21,
    "fixLineNum": 778,
    "fixNodeStartChar": 31702,
    "fixNodeLength": 25,
    "sourceBeforeFix": "isGroupConversation()",
    "sourceAfterFix": "isPushGroupConversation()"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "368f5c8dbadf85eeb7ded06d6dc73b55ba9c97c9",
    "fixCommitParentSHA1": "14f7c2d7a108f004378a1cea81a03ee9f3034e00",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/CursorRecyclerViewAdapter.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/CursorRecyclerViewAdapter.java b/src/org/thoughtcrime/securesms/database/CursorRecyclerViewAdapter.java\nindex 18e09be..6855cd8 100644\n--- a/src/org/thoughtcrime/securesms/database/CursorRecyclerViewAdapter.java\n+++ b/src/org/thoughtcrime/securesms/database/CursorRecyclerViewAdapter.java\n@@ -40,7 +40,7 @@\n       cursor.registerDataSetObserver(observer);\n     }\n \n-    setHasStableIds(true);\n+    setHasStableIds(false);\n   }\n \n   public Context getContext() {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 43,
    "bugNodeStartChar": 1575,
    "bugNodeLength": 21,
    "fixLineNum": 43,
    "fixNodeStartChar": 1575,
    "fixNodeLength": 22,
    "sourceBeforeFix": "setHasStableIds(true)",
    "sourceAfterFix": "setHasStableIds(false)"
  },
  {
    "bugType": "CHANGE_OPERAND",
    "fixCommitSHA1": "336962eb554b757543ead090732c591723176e5c",
    "fixCommitParentSHA1": "fbc527145cd5f0a9c241809339f3d2778ab7dd1c",
    "bugFilePath": "src/org/thoughtcrime/securesms/components/emoji/EmojiEditText.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/components/emoji/EmojiEditText.java b/src/org/thoughtcrime/securesms/components/emoji/EmojiEditText.java\nindex 66c8fa1..e9f032b 100644\n--- a/src/org/thoughtcrime/securesms/components/emoji/EmojiEditText.java\n+++ b/src/org/thoughtcrime/securesms/components/emoji/EmojiEditText.java\n@@ -35,7 +35,7 @@\n     final int          end   \u003d getSelectionEnd();\n \n     getText().replace(Math.min(start, end), Math.max(start, end), emoji);\n-    setSelection(end + emoji.length());\n+    setSelection(start + emoji.length());\n   }\n \n   @Override public void invalidateDrawable(@NonNull Drawable drawable) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 38,
    "bugNodeStartChar": 1290,
    "bugNodeLength": 20,
    "fixLineNum": 38,
    "fixNodeStartChar": 1290,
    "fixNodeLength": 22,
    "sourceBeforeFix": "end + emoji.length()",
    "sourceAfterFix": "start + emoji.length()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "336962eb554b757543ead090732c591723176e5c",
    "fixCommitParentSHA1": "fbc527145cd5f0a9c241809339f3d2778ab7dd1c",
    "bugFilePath": "src/org/thoughtcrime/securesms/components/emoji/EmojiEditText.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/components/emoji/EmojiEditText.java b/src/org/thoughtcrime/securesms/components/emoji/EmojiEditText.java\nindex 66c8fa1..e9f032b 100644\n--- a/src/org/thoughtcrime/securesms/components/emoji/EmojiEditText.java\n+++ b/src/org/thoughtcrime/securesms/components/emoji/EmojiEditText.java\n@@ -35,7 +35,7 @@\n     final int          end   \u003d getSelectionEnd();\n \n     getText().replace(Math.min(start, end), Math.max(start, end), emoji);\n-    setSelection(end + emoji.length());\n+    setSelection(start + emoji.length());\n   }\n \n   @Override public void invalidateDrawable(@NonNull Drawable drawable) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 38,
    "bugNodeStartChar": 1290,
    "bugNodeLength": 20,
    "fixLineNum": 38,
    "fixNodeStartChar": 1290,
    "fixNodeLength": 22,
    "sourceBeforeFix": "end + emoji.length()",
    "sourceAfterFix": "start + emoji.length()"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "58fd6f92738cda5482cc36bc33f2867780df6e64",
    "fixCommitParentSHA1": "31b2fab6e9ed223d153d36cc6e696963d7ac1bed",
    "bugFilePath": "src/org/thoughtcrime/securesms/notifications/AbstractNotificationBuilder.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/notifications/AbstractNotificationBuilder.java b/src/org/thoughtcrime/securesms/notifications/AbstractNotificationBuilder.java\nindex 1ad3f7d..28f2550 100644\n--- a/src/org/thoughtcrime/securesms/notifications/AbstractNotificationBuilder.java\n+++ b/src/org/thoughtcrime/securesms/notifications/AbstractNotificationBuilder.java\n@@ -46,7 +46,7 @@\n     String[] blinkPatternArray   \u003d parseBlinkPattern(ledBlinkPattern, ledBlinkPatternCustom);\n \n     if      (ringtone !\u003d null)                       setSound(ringtone);\n-    else if (TextUtils.isEmpty(defaultRingtoneName)) setSound(Uri.parse(defaultRingtoneName));\n+    else if (!TextUtils.isEmpty(defaultRingtoneName)) setSound(Uri.parse(defaultRingtoneName));\n \n     if (vibrate \u003d\u003d RecipientPreferenceDatabase.VibrateState.ENABLED ||\n         (vibrate \u003d\u003d RecipientPreferenceDatabase.VibrateState.DEFAULT \u0026\u0026 defaultVibrate))\n",
    "projectName": "Signal-Android",
    "bugLineNum": 49,
    "bugNodeStartChar": 2162,
    "bugNodeLength": 38,
    "fixLineNum": 49,
    "fixNodeStartChar": 2162,
    "fixNodeLength": 39,
    "sourceBeforeFix": "TextUtils.isEmpty(defaultRingtoneName)",
    "sourceAfterFix": "!TextUtils.isEmpty(defaultRingtoneName)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "716ed94ca1f8f3c63b8016b3e9d60d6693d2693d",
    "fixCommitParentSHA1": "5fe1a289547fb4cf36b256ded6b1badbc330e0f5",
    "bugFilePath": "src/org/thoughtcrime/securesms/notifications/MessageNotifier.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/notifications/MessageNotifier.java b/src/org/thoughtcrime/securesms/notifications/MessageNotifier.java\nindex ff32c9f..feee947 100644\n--- a/src/org/thoughtcrime/securesms/notifications/MessageNotifier.java\n+++ b/src/org/thoughtcrime/securesms/notifications/MessageNotifier.java\n@@ -419,7 +419,7 @@\n     public void onReceive(Context context, Intent intent) {\n       MasterSecret masterSecret  \u003d KeyCachingService.getMasterSecret(context);\n       int          reminderCount \u003d intent.getIntExtra(\"reminder_count\", 0);\n-      MessageNotifier.updateNotification(context, masterSecret, true, reminderCount + 1);\n+      MessageNotifier.updateNotification(context, masterSecret, true, true, reminderCount + 1);\n     }\n   }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 422,
    "bugNodeStartChar": 17738,
    "bugNodeLength": 82,
    "fixLineNum": 422,
    "fixNodeStartChar": 17738,
    "fixNodeLength": 88,
    "sourceBeforeFix": "MessageNotifier.updateNotification(context,masterSecret,true,reminderCount + 1)",
    "sourceAfterFix": "MessageNotifier.updateNotification(context,masterSecret,true,true,reminderCount + 1)"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "75939180068c9eb1de06d0a293bcf3661aba3321",
    "fixCommitParentSHA1": "d400f0fb58340ade681f29cfb62283e5330062af",
    "bugFilePath": "src/org/thoughtcrime/securesms/components/camera/HidingImageButton.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/components/camera/HidingImageButton.java b/src/org/thoughtcrime/securesms/components/camera/HidingImageButton.java\nindex e07bac3..0d2281c 100644\n--- a/src/org/thoughtcrime/securesms/components/camera/HidingImageButton.java\n+++ b/src/org/thoughtcrime/securesms/components/camera/HidingImageButton.java\n@@ -26,7 +26,7 @@\n   }\n \n   public void hide() {\n-    if (!isEnabled()) return;\n+    if (!isEnabled() || getVisibility() \u003d\u003d GONE) return;\n     final Animation animation \u003d AnimationUtils.loadAnimation(getContext(), R.anim.slide_to_right);\n     animation.setAnimationListener(new AnimationListener() {\n       @Override public void onAnimationStart(Animation animation) {}\n@@ -39,7 +39,7 @@\n   }\n \n   public void show() {\n-    if (!isEnabled()) return;\n+    if (!isEnabled() || getVisibility() \u003d\u003d VISIBLE) return;\n     setVisibility(VISIBLE);\n     animateWith(AnimationUtils.loadAnimation(getContext(), R.anim.slide_from_right));\n   }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 29,
    "bugNodeStartChar": 843,
    "bugNodeLength": 12,
    "fixLineNum": 29,
    "fixNodeStartChar": 843,
    "fixNodeLength": 39,
    "sourceBeforeFix": "!isEnabled()",
    "sourceAfterFix": "!isEnabled() || getVisibility() \u003d\u003d GONE"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "75939180068c9eb1de06d0a293bcf3661aba3321",
    "fixCommitParentSHA1": "d400f0fb58340ade681f29cfb62283e5330062af",
    "bugFilePath": "src/org/thoughtcrime/securesms/components/camera/HidingImageButton.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/components/camera/HidingImageButton.java b/src/org/thoughtcrime/securesms/components/camera/HidingImageButton.java\nindex e07bac3..0d2281c 100644\n--- a/src/org/thoughtcrime/securesms/components/camera/HidingImageButton.java\n+++ b/src/org/thoughtcrime/securesms/components/camera/HidingImageButton.java\n@@ -26,7 +26,7 @@\n   }\n \n   public void hide() {\n-    if (!isEnabled()) return;\n+    if (!isEnabled() || getVisibility() \u003d\u003d GONE) return;\n     final Animation animation \u003d AnimationUtils.loadAnimation(getContext(), R.anim.slide_to_right);\n     animation.setAnimationListener(new AnimationListener() {\n       @Override public void onAnimationStart(Animation animation) {}\n@@ -39,7 +39,7 @@\n   }\n \n   public void show() {\n-    if (!isEnabled()) return;\n+    if (!isEnabled() || getVisibility() \u003d\u003d VISIBLE) return;\n     setVisibility(VISIBLE);\n     animateWith(AnimationUtils.loadAnimation(getContext(), R.anim.slide_from_right));\n   }\n",
    "projectName": "Signal-Android",
    "bugLineNum": 42,
    "bugNodeStartChar": 1339,
    "bugNodeLength": 12,
    "fixLineNum": 42,
    "fixNodeStartChar": 1339,
    "fixNodeLength": 42,
    "sourceBeforeFix": "!isEnabled()",
    "sourceAfterFix": "!isEnabled() || getVisibility() \u003d\u003d VISIBLE"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "282f139ee9f9483a49ac78f448d1e2d3bbb5e374",
    "fixCommitParentSHA1": "5eaaadad2650f984b232b90d8bb5ed945775960e",
    "bugFilePath": "src/org/thoughtcrime/securesms/components/emoji/EmojiProvider.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/components/emoji/EmojiProvider.java b/src/org/thoughtcrime/securesms/components/emoji/EmojiProvider.java\nindex 3ee1f31..2f66ca5 100644\n--- a/src/org/thoughtcrime/securesms/components/emoji/EmojiProvider.java\n+++ b/src/org/thoughtcrime/securesms/components/emoji/EmojiProvider.java\n@@ -45,7 +45,7 @@\n   private static final Pattern EMOJI_RANGE \u003d Pattern.compile(\"[\\\\u20a0-\\\\u32ff\\\\ud83c\\\\udc00-\\\\ud83d\\\\udeff\\\\udbb9\\\\udce5-\\\\udbb9\\\\udcee]\");\n \n   public static final double EMOJI_FULL       \u003d 1.00;\n-  public static final double EMOJI_SMALL      \u003d 0.60;\n+  public static final double EMOJI_SMALL      \u003d 0.90;\n   public static final int    EMOJI_RAW_HEIGHT \u003d 64;\n   public static final int    EMOJI_RAW_WIDTH  \u003d 64;\n   public static final int    EMOJI_VERT_PAD   \u003d 0;\n",
    "projectName": "Signal-Android",
    "bugLineNum": 48,
    "bugNodeStartChar": 2052,
    "bugNodeLength": 23,
    "fixLineNum": 48,
    "fixNodeStartChar": 2052,
    "fixNodeLength": 23,
    "sourceBeforeFix": "EMOJI_SMALL\u003d0.60",
    "sourceAfterFix": "EMOJI_SMALL\u003d0.90"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "3a07809545d6aa30294a2c88f2a080472854ec9b",
    "fixCommitParentSHA1": "bb6b86ad59987ba34b5cca6839965556f36a732f",
    "bugFilePath": "src/org/thoughtcrime/securesms/mms/MmsMediaConstraints.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/mms/MmsMediaConstraints.java b/src/org/thoughtcrime/securesms/mms/MmsMediaConstraints.java\nindex 45f775f..1fb5578 100644\n--- a/src/org/thoughtcrime/securesms/mms/MmsMediaConstraints.java\n+++ b/src/org/thoughtcrime/securesms/mms/MmsMediaConstraints.java\n@@ -1,7 +1,7 @@\n package org.thoughtcrime.securesms.mms;\n \n public class MmsMediaConstraints extends MediaConstraints {\n-  private static final int MAX_IMAGE_DIMEN  \u003d 1280;\n+  private static final int MAX_IMAGE_DIMEN  \u003d 1024;\n   public  static final int MAX_MESSAGE_SIZE \u003d 280 * 1024;\n \n   @Override\n",
    "projectName": "Signal-Android",
    "bugLineNum": 4,
    "bugNodeStartChar": 128,
    "bugNodeLength": 23,
    "fixLineNum": 4,
    "fixNodeStartChar": 128,
    "fixNodeLength": 23,
    "sourceBeforeFix": "MAX_IMAGE_DIMEN\u003d1280",
    "sourceAfterFix": "MAX_IMAGE_DIMEN\u003d1024"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "3a07809545d6aa30294a2c88f2a080472854ec9b",
    "fixCommitParentSHA1": "bb6b86ad59987ba34b5cca6839965556f36a732f",
    "bugFilePath": "src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java b/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java\nindex 6dbe924..5be3e56 100644\n--- a/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java\n+++ b/src/org/thoughtcrime/securesms/mms/PushMediaConstraints.java\n@@ -17,7 +17,7 @@\n \n   @Override\n   public int getImageMaxSize() {\n-    return 300 * KB;\n+    return 420 * KB;\n   }\n \n   @Override\n",
    "projectName": "Signal-Android",
    "bugLineNum": 20,
    "bugNodeStartChar": 479,
    "bugNodeLength": 8,
    "fixLineNum": 20,
    "fixNodeStartChar": 479,
    "fixNodeLength": 8,
    "sourceBeforeFix": "300 * KB",
    "sourceAfterFix": "420 * KB"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "1f9a0fab3ce66ad6ddf4de97e657a2c3027a8714",
    "fixCommitParentSHA1": "b692d48b98eabd7f7c8c04880b977fb7b049e9a2",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex 7c16fa3..90be95a 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -974,7 +974,7 @@\n     boolean refreshFragment \u003d (threadId !\u003d this.threadId);\n     this.threadId \u003d threadId;\n \n-    if (fragment \u003d\u003d null) {\n+    if (fragment \u003d\u003d null || !fragment.isVisible() || isFinishing()) {\n       return;\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 977,
    "bugNodeStartChar": 39487,
    "bugNodeLength": 16,
    "fixLineNum": 977,
    "fixNodeStartChar": 39487,
    "fixNodeLength": 58,
    "sourceBeforeFix": "fragment \u003d\u003d null",
    "sourceAfterFix": "fragment \u003d\u003d null || !fragment.isVisible() || isFinishing()"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "1f9a0fab3ce66ad6ddf4de97e657a2c3027a8714",
    "fixCommitParentSHA1": "b692d48b98eabd7f7c8c04880b977fb7b049e9a2",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex 7c16fa3..90be95a 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -974,7 +974,7 @@\n     boolean refreshFragment \u003d (threadId !\u003d this.threadId);\n     this.threadId \u003d threadId;\n \n-    if (fragment \u003d\u003d null) {\n+    if (fragment \u003d\u003d null || !fragment.isVisible() || isFinishing()) {\n       return;\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 977,
    "bugNodeStartChar": 39487,
    "bugNodeLength": 16,
    "fixLineNum": 977,
    "fixNodeStartChar": 39487,
    "fixNodeLength": 58,
    "sourceBeforeFix": "fragment \u003d\u003d null",
    "sourceAfterFix": "fragment \u003d\u003d null || !fragment.isVisible() || isFinishing()"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "349faf18fa6aaa07e6fb7358eebcdbf549d224eb",
    "fixCommitParentSHA1": "88ed8f388778bcc355ab567e0d3d4fe4bc3c4736",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/SendJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/SendJob.java b/src/org/thoughtcrime/securesms/jobs/SendJob.java\nindex 3d8ad73..51d62b5 100644\n--- a/src/org/thoughtcrime/securesms/jobs/SendJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/SendJob.java\n@@ -53,7 +53,11 @@\n     } catch (MmsException me) {\n       throw new UndeliverableMessageException(me);\n     }\n-    return new SendReq(message.getPduHeaders(), body);\n+    return new SendReq(message.getPduHeaders(),\n+                       body,\n+                       message.getDatabaseMessageId(),\n+                       message.getDatabaseMessageBox(),\n+                       message.getSentTimestamp());\n   }\n \n   private PduPart getResolvedPart(MasterSecret masterSecret, MediaConstraints constraints,\n",
    "projectName": "Signal-Android",
    "bugLineNum": 56,
    "bugNodeStartChar": 2134,
    "bugNodeLength": 42,
    "fixLineNum": 56,
    "fixNodeStartChar": 2134,
    "fixNodeLength": 227,
    "sourceBeforeFix": "new SendReq(message.getPduHeaders(),body)",
    "sourceAfterFix": "new SendReq(message.getPduHeaders(),body,message.getDatabaseMessageId(),message.getDatabaseMessageBox(),message.getSentTimestamp())"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "442f56cdc363b89642fa326ffd7716d3eb5d08d2",
    "fixCommitParentSHA1": "35dabaf1e58b32388dd2883b0b23d7c670719e7e",
    "bugFilePath": "src/org/thoughtcrime/securesms/GroupCreateActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/GroupCreateActivity.java b/src/org/thoughtcrime/securesms/GroupCreateActivity.java\nindex eee9181..d59d97b 100644\n--- a/src/org/thoughtcrime/securesms/GroupCreateActivity.java\n+++ b/src/org/thoughtcrime/securesms/GroupCreateActivity.java\n@@ -387,8 +387,9 @@\n               Recipient recipient \u003d RecipientFactory.getRecipientsFromString(this, numberData.number, false)\n                                                     .getPrimaryRecipient();\n \n-              if (!selectedContacts.contains(recipient)\n-                  \u0026\u0026 (existingContacts \u003d\u003d null || !existingContacts.contains(recipient))) {\n+              if (!selectedContacts.contains(recipient)                               \u0026\u0026\n+                  (existingContacts \u003d\u003d null || !existingContacts.contains(recipient)) \u0026\u0026\n+                  recipient !\u003d null) {\n                 addSelectedContact(recipient);\n               }\n             } catch (RecipientFormattingException e) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 390,
    "bugNodeStartChar": 14652,
    "bugNodeLength": 126,
    "fixLineNum": 390,
    "fixNodeStartChar": 14652,
    "fixNodeLength": 195,
    "sourceBeforeFix": "!selectedContacts.contains(recipient) \u0026\u0026 (existingContacts \u003d\u003d null || !existingContacts.contains(recipient))",
    "sourceAfterFix": "!selectedContacts.contains(recipient) \u0026\u0026 (existingContacts \u003d\u003d null || !existingContacts.contains(recipient)) \u0026\u0026 recipient !\u003d null"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "9fed60628d33fb4666759ce0ea030b4a4839326c",
    "fixCommitParentSHA1": "e67dafe9c82d87ffb4170ee96711c1fc2789b1cd",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/AttachmentDownloadJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/AttachmentDownloadJob.java b/src/org/thoughtcrime/securesms/jobs/AttachmentDownloadJob.java\nindex 38795dc..ce04e40 100644\n--- a/src/org/thoughtcrime/securesms/jobs/AttachmentDownloadJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/AttachmentDownloadJob.java\n@@ -124,7 +124,7 @@\n \n   private File createTempFile() throws InvalidPartException {\n     try {\n-      File file \u003d File.createTempFile(\"push-attachment\", \"tmp\");\n+      File file \u003d File.createTempFile(\"push-attachment\", \"tmp\", context.getCacheDir());\n       file.deleteOnExit();\n \n       return file;\n",
    "projectName": "Signal-Android",
    "bugLineNum": 127,
    "bugNodeStartChar": 4671,
    "bugNodeLength": 45,
    "fixLineNum": 127,
    "fixNodeStartChar": 4671,
    "fixNodeLength": 68,
    "sourceBeforeFix": "File.createTempFile(\"push-attachment\",\"tmp\")",
    "sourceAfterFix": "File.createTempFile(\"push-attachment\",\"tmp\",context.getCacheDir())"
  },
  {
    "bugType": "SWAP_ARGUMENTS",
    "fixCommitSHA1": "21591dc6b1cc10f31c15f3b51dad2c6d7ce4850b",
    "fixCommitParentSHA1": "3ec95f7a8eb0d9dd08203cb6b782be707e4b7e90",
    "bugFilePath": "src/org/thoughtcrime/securesms/database/loaders/ConversationListLoader.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/database/loaders/ConversationListLoader.java b/src/org/thoughtcrime/securesms/database/loaders/ConversationListLoader.java\nindex abc0b27..d4a3475 100644\n--- a/src/org/thoughtcrime/securesms/database/loaders/ConversationListLoader.java\n+++ b/src/org/thoughtcrime/securesms/database/loaders/ConversationListLoader.java\n@@ -21,8 +21,7 @@\n   @Override\n   public Cursor getCursor() {\n     if (filter !\u003d null \u0026\u0026 filter.trim().length() !\u003d 0) {\n-      List\u003cString\u003e numbers \u003d ContactAccessor.getInstance()\n-          .getNumbersForThreadSearchFilter(filter, context);\n+      List\u003cString\u003e numbers \u003d ContactAccessor.getInstance().getNumbersForThreadSearchFilter(context, filter);\n \n       return DatabaseFactory.getThreadDatabase(context).getFilteredConversationList(numbers);\n     } else {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 24,
    "bugNodeStartChar": 670,
    "bugNodeLength": 89,
    "fixLineNum": 24,
    "fixNodeStartChar": 670,
    "fixNodeLength": 78,
    "sourceBeforeFix": "ContactAccessor.getInstance().getNumbersForThreadSearchFilter(filter,context)",
    "sourceAfterFix": "ContactAccessor.getInstance().getNumbersForThreadSearchFilter(context,filter)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "978f769d6def251b410efe52229f92c8f9763fa6",
    "fixCommitParentSHA1": "9d693eef30a276ed5947a1bcb48b0b1890b07e04",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\nindex fae163f..5d95f88 100644\n--- a/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/PushDecryptJob.java\n@@ -64,7 +64,7 @@\n   @Override\n   public void onAdded() {\n     if (KeyCachingService.getMasterSecret(context) \u003d\u003d null) {\n-      MessageNotifier.updateNotification(context, null);\n+      MessageNotifier.updateNotification(context, null, -2);\n     }\n   }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 67,
    "bugNodeStartChar": 3253,
    "bugNodeLength": 49,
    "fixLineNum": 67,
    "fixNodeStartChar": 3253,
    "fixNodeLength": 53,
    "sourceBeforeFix": "MessageNotifier.updateNotification(context,null)",
    "sourceAfterFix": "MessageNotifier.updateNotification(context,null,-2)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "978f769d6def251b410efe52229f92c8f9763fa6",
    "fixCommitParentSHA1": "9d693eef30a276ed5947a1bcb48b0b1890b07e04",
    "bugFilePath": "src/org/thoughtcrime/securesms/jobs/SmsDecryptJob.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/jobs/SmsDecryptJob.java b/src/org/thoughtcrime/securesms/jobs/SmsDecryptJob.java\nindex bd8f343..e22905a 100644\n--- a/src/org/thoughtcrime/securesms/jobs/SmsDecryptJob.java\n+++ b/src/org/thoughtcrime/securesms/jobs/SmsDecryptJob.java\n@@ -56,7 +56,7 @@\n   @Override\n   public void onAdded() {\n     if (KeyCachingService.getMasterSecret(context) \u003d\u003d null) {\n-      MessageNotifier.updateNotification(context, null);\n+      MessageNotifier.updateNotification(context, null, -2);\n     }\n   }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 59,
    "bugNodeStartChar": 2721,
    "bugNodeLength": 49,
    "fixLineNum": 59,
    "fixNodeStartChar": 2721,
    "fixNodeLength": 53,
    "sourceBeforeFix": "MessageNotifier.updateNotification(context,null)",
    "sourceAfterFix": "MessageNotifier.updateNotification(context,null,-2)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "71fdaac1b2ea532cd48d462e0eb9b9c9ad424298",
    "fixCommitParentSHA1": "fb31319e522dcc846dcffabca2091571b46b5f89",
    "bugFilePath": "src/org/thoughtcrime/securesms/RegistrationProgressActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/RegistrationProgressActivity.java b/src/org/thoughtcrime/securesms/RegistrationProgressActivity.java\nindex 98d1dbf..8804897 100644\n--- a/src/org/thoughtcrime/securesms/RegistrationProgressActivity.java\n+++ b/src/org/thoughtcrime/securesms/RegistrationProgressActivity.java\n@@ -515,7 +515,7 @@\n         @Override\n         protected Integer doInBackground(Void... params) {\n           try {\n-            TextSecureAccountManager accountManager \u003d TextSecureCommunicationFactory.createManager(context);\n+            TextSecureAccountManager accountManager \u003d TextSecureCommunicationFactory.createManager(context, e164number, password);\n             int registrationId \u003d TextSecurePreferences.getLocalRegistrationId(context);\n \n             accountManager.verifyAccount(code, signalingKey, true, registrationId);\n@@ -608,7 +608,7 @@\n         @Override\n         protected Integer doInBackground(Void... params) {\n           try {\n-            TextSecureAccountManager accountManager \u003d TextSecureCommunicationFactory.createManager(context);\n+            TextSecureAccountManager accountManager \u003d TextSecureCommunicationFactory.createManager(context, e164number, password);\n             accountManager.requestVoiceVerificationCode();\n \n             return SUCCESS;\n",
    "projectName": "Signal-Android",
    "bugLineNum": 518,
    "bugNodeStartChar": 22897,
    "bugNodeLength": 53,
    "fixLineNum": 518,
    "fixNodeStartChar": 22897,
    "fixNodeLength": 75,
    "sourceBeforeFix": "TextSecureCommunicationFactory.createManager(context)",
    "sourceAfterFix": "TextSecureCommunicationFactory.createManager(context,e164number,password)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "71fdaac1b2ea532cd48d462e0eb9b9c9ad424298",
    "fixCommitParentSHA1": "fb31319e522dcc846dcffabca2091571b46b5f89",
    "bugFilePath": "src/org/thoughtcrime/securesms/RegistrationProgressActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/RegistrationProgressActivity.java b/src/org/thoughtcrime/securesms/RegistrationProgressActivity.java\nindex 98d1dbf..8804897 100644\n--- a/src/org/thoughtcrime/securesms/RegistrationProgressActivity.java\n+++ b/src/org/thoughtcrime/securesms/RegistrationProgressActivity.java\n@@ -515,7 +515,7 @@\n         @Override\n         protected Integer doInBackground(Void... params) {\n           try {\n-            TextSecureAccountManager accountManager \u003d TextSecureCommunicationFactory.createManager(context);\n+            TextSecureAccountManager accountManager \u003d TextSecureCommunicationFactory.createManager(context, e164number, password);\n             int registrationId \u003d TextSecurePreferences.getLocalRegistrationId(context);\n \n             accountManager.verifyAccount(code, signalingKey, true, registrationId);\n@@ -608,7 +608,7 @@\n         @Override\n         protected Integer doInBackground(Void... params) {\n           try {\n-            TextSecureAccountManager accountManager \u003d TextSecureCommunicationFactory.createManager(context);\n+            TextSecureAccountManager accountManager \u003d TextSecureCommunicationFactory.createManager(context, e164number, password);\n             accountManager.requestVoiceVerificationCode();\n \n             return SUCCESS;\n",
    "projectName": "Signal-Android",
    "bugLineNum": 611,
    "bugNodeStartChar": 26721,
    "bugNodeLength": 53,
    "fixLineNum": 611,
    "fixNodeStartChar": 26721,
    "fixNodeLength": 75,
    "sourceBeforeFix": "TextSecureCommunicationFactory.createManager(context)",
    "sourceAfterFix": "TextSecureCommunicationFactory.createManager(context,e164number,password)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "73b75a4a2796f478b7ae035a63a1a4518bfc6696",
    "fixCommitParentSHA1": "c4209a65e33fe996dc9f201cf4a8534a7dd3f1ca",
    "bugFilePath": "src/org/thoughtcrime/securesms/service/RegistrationService.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/service/RegistrationService.java b/src/org/thoughtcrime/securesms/service/RegistrationService.java\nindex 8685ac6..7d80fa4 100644\n--- a/src/org/thoughtcrime/securesms/service/RegistrationService.java\n+++ b/src/org/thoughtcrime/securesms/service/RegistrationService.java\n@@ -180,7 +180,7 @@\n     int          registrationId \u003d TextSecurePreferences.getLocalRegistrationId(this);\n \n     if (registrationId \u003d\u003d 0) {\n-      registrationId \u003d KeyHelper.generateRegistrationId();\n+      registrationId \u003d KeyHelper.generateRegistrationId(false);\n       TextSecurePreferences.setLocalRegistrationId(this, registrationId);\n     }\n \n",
    "projectName": "Signal-Android",
    "bugLineNum": 183,
    "bugNodeStartChar": 7075,
    "bugNodeLength": 34,
    "fixLineNum": 183,
    "fixNodeStartChar": 7075,
    "fixNodeLength": 39,
    "sourceBeforeFix": "KeyHelper.generateRegistrationId()",
    "sourceAfterFix": "KeyHelper.generateRegistrationId(false)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "07b76969371811aa4de54e93c47722ad19dd6f3e",
    "fixCommitParentSHA1": "c38a8aa699999f0e28e823ee4220015846ec210f",
    "bugFilePath": "library/src/org/whispersystems/textsecure/crypto/ecc/Curve.java",
    "fixPatch": "diff --git a/library/src/org/whispersystems/textsecure/crypto/ecc/Curve.java b/library/src/org/whispersystems/textsecure/crypto/ecc/Curve.java\nindex 763c9e4..9cd2213 100644\n--- a/library/src/org/whispersystems/textsecure/crypto/ecc/Curve.java\n+++ b/library/src/org/whispersystems/textsecure/crypto/ecc/Curve.java\n@@ -23,7 +23,7 @@\n \n   public  static final int NIST_TYPE  \u003d 0x02;\n   private static final int NIST_TYPE2 \u003d 0x03;\n-  public  static final int DJB_TYPE   \u003d 0x04;\n+  public  static final int DJB_TYPE   \u003d 0x05;\n \n   public static ECKeyPair generateKeyPairForType(int keyType) {\n     if (keyType \u003d\u003d DJB_TYPE) {\n",
    "projectName": "Signal-Android",
    "bugLineNum": 26,
    "bugNodeStartChar": 1030,
    "bugNodeLength": 17,
    "fixLineNum": 26,
    "fixNodeStartChar": 1030,
    "fixNodeLength": 17,
    "sourceBeforeFix": "DJB_TYPE\u003d0x04",
    "sourceAfterFix": "DJB_TYPE\u003d0x05"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "f2475491fe7b26ee4e341a538d7ccf8f5415e8be",
    "fixCommitParentSHA1": "c3e21f3f751c918c2aea14fe86fb05a812041e20",
    "bugFilePath": "src/org/thoughtcrime/securesms/crypto/MessageMac.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/crypto/MessageMac.java b/src/org/thoughtcrime/securesms/crypto/MessageMac.java\nindex 4da7c0f..fc86be7 100644\n--- a/src/org/thoughtcrime/securesms/crypto/MessageMac.java\n+++ b/src/org/thoughtcrime/securesms/crypto/MessageMac.java\n@@ -61,7 +61,7 @@\n   }\n \t\n   public static byte[] getMessageWithoutMac(byte[] message) throws InvalidMacException {\n-    if (message.length \u003c\u003d MAC_LENGTH)\n+    if (message \u003d\u003d null || message.length \u003c\u003d MAC_LENGTH)\n       throw new InvalidMacException(\"Message shorter than MAC!\");\n \t\t\n     byte[] strippedMessage \u003d new byte[message.length - MAC_LENGTH];\n",
    "projectName": "Signal-Android",
    "bugLineNum": 64,
    "bugNodeStartChar": 2240,
    "bugNodeLength": 28,
    "fixLineNum": 64,
    "fixNodeStartChar": 2240,
    "fixNodeLength": 47,
    "sourceBeforeFix": "message.length \u003c\u003d MAC_LENGTH",
    "sourceAfterFix": "message \u003d\u003d null || message.length \u003c\u003d MAC_LENGTH"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "f2475491fe7b26ee4e341a538d7ccf8f5415e8be",
    "fixCommitParentSHA1": "c3e21f3f751c918c2aea14fe86fb05a812041e20",
    "bugFilePath": "src/org/thoughtcrime/securesms/crypto/MessageMac.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/crypto/MessageMac.java b/src/org/thoughtcrime/securesms/crypto/MessageMac.java\nindex 4da7c0f..fc86be7 100644\n--- a/src/org/thoughtcrime/securesms/crypto/MessageMac.java\n+++ b/src/org/thoughtcrime/securesms/crypto/MessageMac.java\n@@ -61,7 +61,7 @@\n   }\n \t\n   public static byte[] getMessageWithoutMac(byte[] message) throws InvalidMacException {\n-    if (message.length \u003c\u003d MAC_LENGTH)\n+    if (message \u003d\u003d null || message.length \u003c\u003d MAC_LENGTH)\n       throw new InvalidMacException(\"Message shorter than MAC!\");\n \t\t\n     byte[] strippedMessage \u003d new byte[message.length - MAC_LENGTH];\n",
    "projectName": "Signal-Android",
    "bugLineNum": 64,
    "bugNodeStartChar": 2240,
    "bugNodeLength": 28,
    "fixLineNum": 64,
    "fixNodeStartChar": 2240,
    "fixNodeLength": 47,
    "sourceBeforeFix": "message.length \u003c\u003d MAC_LENGTH",
    "sourceAfterFix": "message \u003d\u003d null || message.length \u003c\u003d MAC_LENGTH"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "bb3777aa6834c6bbfbeb9cc5a4d142e914881df4",
    "fixCommitParentSHA1": "07c59d969a1ba0d9b964936a3ebc1290b39bed00",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex 1de2fe1..8b07b0c 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -339,7 +339,7 @@\n     List\u003cString\u003e recipientStrings \u003d new LinkedList\u003cString\u003e();\n \n     for (Recipient recipient : getRecipients().getRecipientsList()) {\n-      recipientStrings.add(recipient.getName());\n+      recipientStrings.add(recipient.toShortString());\n     }\n \n     AlertDialog.Builder builder \u003d new AlertDialog.Builder(this);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 342,
    "bugNodeStartChar": 12557,
    "bugNodeLength": 19,
    "fixLineNum": 342,
    "fixNodeStartChar": 12557,
    "fixNodeLength": 25,
    "sourceBeforeFix": "recipient.getName()",
    "sourceAfterFix": "recipient.toShortString()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "bb3777aa6834c6bbfbeb9cc5a4d142e914881df4",
    "fixCommitParentSHA1": "07c59d969a1ba0d9b964936a3ebc1290b39bed00",
    "bugFilePath": "src/org/thoughtcrime/securesms/ConversationActivity.java",
    "fixPatch": "diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java\nindex 1de2fe1..8b07b0c 100644\n--- a/src/org/thoughtcrime/securesms/ConversationActivity.java\n+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java\n@@ -339,7 +339,7 @@\n     List\u003cString\u003e recipientStrings \u003d new LinkedList\u003cString\u003e();\n \n     for (Recipient recipient : getRecipients().getRecipientsList()) {\n-      recipientStrings.add(recipient.getName());\n+      recipientStrings.add(recipient.toShortString());\n     }\n \n     AlertDialog.Builder builder \u003d new AlertDialog.Builder(this);\n",
    "projectName": "Signal-Android",
    "bugLineNum": 342,
    "bugNodeStartChar": 12557,
    "bugNodeLength": 19,
    "fixLineNum": 342,
    "fixNodeStartChar": 12557,
    "fixNodeLength": 25,
    "sourceBeforeFix": "recipient.getName()",
    "sourceAfterFix": "recipient.toShortString()"
  }
]